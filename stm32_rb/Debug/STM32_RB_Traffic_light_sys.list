
STM32_RB_Traffic_light_sys.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003c04  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  08003d10  08003d10  00004d10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003dc4  08003dc4  00005084  2**0
                  CONTENTS
  4 .ARM          00000000  08003dc4  08003dc4  00005084  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003dc4  08003dc4  00005084  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003dc4  08003dc4  00004dc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08003dc8  08003dc8  00004dc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000084  20000000  08003dcc  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002bc  20000084  08003e50  00005084  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000340  08003e50  00005340  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00005084  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000be10  00000000  00000000  000050ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002187  00000000  00000000  00010ebd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000db0  00000000  00000000  00013048  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000a87  00000000  00000000  00013df8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001870b  00000000  00000000  0001487f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000117e8  00000000  00000000  0002cf8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008aba6  00000000  00000000  0003e772  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c9318  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003c94  00000000  00000000  000c935c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  000ccff0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000084 	.word	0x20000084
 8000128:	00000000 	.word	0x00000000
 800012c:	08003cf8 	.word	0x08003cf8

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000088 	.word	0x20000088
 8000148:	08003cf8 	.word	0x08003cf8

0800014c <button_init>:





void button_init(){
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
    for(int i = 0; i < NO_OF_BUTTONS; i++){
 8000152:	2300      	movs	r3, #0
 8000154:	607b      	str	r3, [r7, #4]
 8000156:	e025      	b.n	80001a4 <button_init+0x58>
        buttonState[i] = BUTTON_RELEASED;
 8000158:	4a17      	ldr	r2, [pc, #92]	@ (80001b8 <button_init+0x6c>)
 800015a:	687b      	ldr	r3, [r7, #4]
 800015c:	4413      	add	r3, r2
 800015e:	2200      	movs	r2, #0
 8000160:	701a      	strb	r2, [r3, #0]
        flagForButtonPress[i] = 0;
 8000162:	4a16      	ldr	r2, [pc, #88]	@ (80001bc <button_init+0x70>)
 8000164:	687b      	ldr	r3, [r7, #4]
 8000166:	4413      	add	r3, r2
 8000168:	2200      	movs	r2, #0
 800016a:	701a      	strb	r2, [r3, #0]
        counterForButtonPress_2s[i] = 0;
 800016c:	4a14      	ldr	r2, [pc, #80]	@ (80001c0 <button_init+0x74>)
 800016e:	687b      	ldr	r3, [r7, #4]
 8000170:	2100      	movs	r1, #0
 8000172:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        buttonBuffer[i] = BUTTON_IS_RELEASED;
 8000176:	4a13      	ldr	r2, [pc, #76]	@ (80001c4 <button_init+0x78>)
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	4413      	add	r3, r2
 800017c:	2201      	movs	r2, #1
 800017e:	701a      	strb	r2, [r3, #0]
        debounceButtonBuffer0[i] = BUTTON_IS_RELEASED;
 8000180:	4a11      	ldr	r2, [pc, #68]	@ (80001c8 <button_init+0x7c>)
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	4413      	add	r3, r2
 8000186:	2201      	movs	r2, #1
 8000188:	701a      	strb	r2, [r3, #0]
        debounceButtonBuffer1[i] = BUTTON_IS_RELEASED;
 800018a:	4a10      	ldr	r2, [pc, #64]	@ (80001cc <button_init+0x80>)
 800018c:	687b      	ldr	r3, [r7, #4]
 800018e:	4413      	add	r3, r2
 8000190:	2201      	movs	r2, #1
 8000192:	701a      	strb	r2, [r3, #0]
        debounceButtonBuffer2[i] = BUTTON_IS_RELEASED;
 8000194:	4a0e      	ldr	r2, [pc, #56]	@ (80001d0 <button_init+0x84>)
 8000196:	687b      	ldr	r3, [r7, #4]
 8000198:	4413      	add	r3, r2
 800019a:	2201      	movs	r2, #1
 800019c:	701a      	strb	r2, [r3, #0]
    for(int i = 0; i < NO_OF_BUTTONS; i++){
 800019e:	687b      	ldr	r3, [r7, #4]
 80001a0:	3301      	adds	r3, #1
 80001a2:	607b      	str	r3, [r7, #4]
 80001a4:	687b      	ldr	r3, [r7, #4]
 80001a6:	2b02      	cmp	r3, #2
 80001a8:	ddd6      	ble.n	8000158 <button_init+0xc>
    }
}
 80001aa:	bf00      	nop
 80001ac:	bf00      	nop
 80001ae:	370c      	adds	r7, #12
 80001b0:	46bd      	mov	sp, r7
 80001b2:	bc80      	pop	{r7}
 80001b4:	4770      	bx	lr
 80001b6:	bf00      	nop
 80001b8:	200000bc 	.word	0x200000bc
 80001bc:	200000b0 	.word	0x200000b0
 80001c0:	200000b4 	.word	0x200000b4
 80001c4:	200000ac 	.word	0x200000ac
 80001c8:	200000a0 	.word	0x200000a0
 80001cc:	200000a4 	.word	0x200000a4
 80001d0:	200000a8 	.word	0x200000a8

080001d4 <is_button_pressed>:




//Function
int is_button_pressed(uint8_t index){
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
	if(index >= NO_OF_BUTTONS) return 0;
 80001de:	79fb      	ldrb	r3, [r7, #7]
 80001e0:	2b02      	cmp	r3, #2
 80001e2:	d901      	bls.n	80001e8 <is_button_pressed+0x14>
 80001e4:	2300      	movs	r3, #0
 80001e6:	e00d      	b.n	8000204 <is_button_pressed+0x30>
	if(flagForButtonPress[index]){
 80001e8:	79fb      	ldrb	r3, [r7, #7]
 80001ea:	4a08      	ldr	r2, [pc, #32]	@ (800020c <is_button_pressed+0x38>)
 80001ec:	5cd3      	ldrb	r3, [r2, r3]
 80001ee:	2b00      	cmp	r3, #0
 80001f0:	d007      	beq.n	8000202 <is_button_pressed+0x2e>
		lcd_clear_display();
 80001f2:	f000 fc36 	bl	8000a62 <lcd_clear_display>
		flagForButtonPress[index] = 0;
 80001f6:	79fb      	ldrb	r3, [r7, #7]
 80001f8:	4a04      	ldr	r2, [pc, #16]	@ (800020c <is_button_pressed+0x38>)
 80001fa:	2100      	movs	r1, #0
 80001fc:	54d1      	strb	r1, [r2, r3]
		return 1;
 80001fe:	2301      	movs	r3, #1
 8000200:	e000      	b.n	8000204 <is_button_pressed+0x30>
	}
	return 0;
 8000202:	2300      	movs	r3, #0
}
 8000204:	4618      	mov	r0, r3
 8000206:	3708      	adds	r7, #8
 8000208:	46bd      	mov	sp, r7
 800020a:	bd80      	pop	{r7, pc}
 800020c:	200000b0 	.word	0x200000b0

08000210 <button_reading>:



void button_reading(void){
 8000210:	b590      	push	{r4, r7, lr}
 8000212:	b083      	sub	sp, #12
 8000214:	af00      	add	r7, sp, #0
    for(uint8_t i = 0; i < NO_OF_BUTTONS; i++) {
 8000216:	2300      	movs	r3, #0
 8000218:	71fb      	strb	r3, [r7, #7]
 800021a:	e079      	b.n	8000310 <button_reading+0x100>
    	// Shift the debounce buffer through 3 filters (buffers)
        debounceButtonBuffer0[i] = debounceButtonBuffer1[i];
 800021c:	79fa      	ldrb	r2, [r7, #7]
 800021e:	79fb      	ldrb	r3, [r7, #7]
 8000220:	493f      	ldr	r1, [pc, #252]	@ (8000320 <button_reading+0x110>)
 8000222:	5c89      	ldrb	r1, [r1, r2]
 8000224:	4a3f      	ldr	r2, [pc, #252]	@ (8000324 <button_reading+0x114>)
 8000226:	54d1      	strb	r1, [r2, r3]
        debounceButtonBuffer1[i] = debounceButtonBuffer2[i];
 8000228:	79fa      	ldrb	r2, [r7, #7]
 800022a:	79fb      	ldrb	r3, [r7, #7]
 800022c:	493e      	ldr	r1, [pc, #248]	@ (8000328 <button_reading+0x118>)
 800022e:	5c89      	ldrb	r1, [r1, r2]
 8000230:	4a3b      	ldr	r2, [pc, #236]	@ (8000320 <button_reading+0x110>)
 8000232:	54d1      	strb	r1, [r2, r3]
        debounceButtonBuffer2[i] = HAL_GPIO_ReadPin(buttonPort[i], buttonPin[i]);
 8000234:	79fb      	ldrb	r3, [r7, #7]
 8000236:	4a3d      	ldr	r2, [pc, #244]	@ (800032c <button_reading+0x11c>)
 8000238:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800023c:	79fb      	ldrb	r3, [r7, #7]
 800023e:	493c      	ldr	r1, [pc, #240]	@ (8000330 <button_reading+0x120>)
 8000240:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000244:	79fc      	ldrb	r4, [r7, #7]
 8000246:	4619      	mov	r1, r3
 8000248:	4610      	mov	r0, r2
 800024a:	f001 fbd3 	bl	80019f4 <HAL_GPIO_ReadPin>
 800024e:	4603      	mov	r3, r0
 8000250:	461a      	mov	r2, r3
 8000252:	4b35      	ldr	r3, [pc, #212]	@ (8000328 <button_reading+0x118>)
 8000254:	551a      	strb	r2, [r3, r4]
        // Check if the i button state has stabilized
        if(debounceButtonBuffer0[i] == debounceButtonBuffer1[i] && debounceButtonBuffer1[i] == debounceButtonBuffer2[i]){
 8000256:	79fb      	ldrb	r3, [r7, #7]
 8000258:	4a32      	ldr	r2, [pc, #200]	@ (8000324 <button_reading+0x114>)
 800025a:	5cd2      	ldrb	r2, [r2, r3]
 800025c:	79fb      	ldrb	r3, [r7, #7]
 800025e:	4930      	ldr	r1, [pc, #192]	@ (8000320 <button_reading+0x110>)
 8000260:	5ccb      	ldrb	r3, [r1, r3]
 8000262:	429a      	cmp	r2, r3
 8000264:	d151      	bne.n	800030a <button_reading+0xfa>
 8000266:	79fb      	ldrb	r3, [r7, #7]
 8000268:	4a2d      	ldr	r2, [pc, #180]	@ (8000320 <button_reading+0x110>)
 800026a:	5cd2      	ldrb	r2, [r2, r3]
 800026c:	79fb      	ldrb	r3, [r7, #7]
 800026e:	492e      	ldr	r1, [pc, #184]	@ (8000328 <button_reading+0x118>)
 8000270:	5ccb      	ldrb	r3, [r1, r3]
 8000272:	429a      	cmp	r2, r3
 8000274:	d149      	bne.n	800030a <button_reading+0xfa>
        	// If the stable state differs from the previously stored state (last filter)
            if(buttonBuffer[i] != debounceButtonBuffer2[i]){
 8000276:	79fb      	ldrb	r3, [r7, #7]
 8000278:	4a2e      	ldr	r2, [pc, #184]	@ (8000334 <button_reading+0x124>)
 800027a:	5cd2      	ldrb	r2, [r2, r3]
 800027c:	79fb      	ldrb	r3, [r7, #7]
 800027e:	492a      	ldr	r1, [pc, #168]	@ (8000328 <button_reading+0x118>)
 8000280:	5ccb      	ldrb	r3, [r1, r3]
 8000282:	429a      	cmp	r2, r3
 8000284:	d01e      	beq.n	80002c4 <button_reading+0xb4>
            	// Update the latest state to the stable state buffer
                buttonBuffer[i] = debounceButtonBuffer2[i];
 8000286:	79fa      	ldrb	r2, [r7, #7]
 8000288:	79fb      	ldrb	r3, [r7, #7]
 800028a:	4927      	ldr	r1, [pc, #156]	@ (8000328 <button_reading+0x118>)
 800028c:	5c89      	ldrb	r1, [r1, r2]
 800028e:	4a29      	ldr	r2, [pc, #164]	@ (8000334 <button_reading+0x124>)
 8000290:	54d1      	strb	r1, [r2, r3]
                // Button changed from 'released' to 'pressed'
                if(debounceButtonBuffer2[i] == BUTTON_IS_PRESSED){
 8000292:	79fb      	ldrb	r3, [r7, #7]
 8000294:	4a24      	ldr	r2, [pc, #144]	@ (8000328 <button_reading+0x118>)
 8000296:	5cd3      	ldrb	r3, [r2, r3]
 8000298:	2b00      	cmp	r3, #0
 800029a:	d109      	bne.n	80002b0 <button_reading+0xa0>
                    // Turn on the Button 'Press' flag
                    flagForButtonPress[i] = 1;
 800029c:	79fb      	ldrb	r3, [r7, #7]
 800029e:	4a26      	ldr	r2, [pc, #152]	@ (8000338 <button_reading+0x128>)
 80002a0:	2101      	movs	r1, #1
 80002a2:	54d1      	strb	r1, [r2, r3]
                    // Initialize the counter for Button 'Press'
                    counterForButtonPress_2s[i] = DURATION_FOR_AUTO_INCREASING;
 80002a4:	79fb      	ldrb	r3, [r7, #7]
 80002a6:	4a25      	ldr	r2, [pc, #148]	@ (800033c <button_reading+0x12c>)
 80002a8:	21c8      	movs	r1, #200	@ 0xc8
 80002aa:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80002ae:	e02c      	b.n	800030a <button_reading+0xfa>
                } else {
                	// Button changed from 'pressed' to 'released', free all the counter and flag
                    counterForButtonPress_2s[i] = 0;
 80002b0:	79fb      	ldrb	r3, [r7, #7]
 80002b2:	4a22      	ldr	r2, [pc, #136]	@ (800033c <button_reading+0x12c>)
 80002b4:	2100      	movs	r1, #0
 80002b6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
                    flagForButtonPress[i] = 0;
 80002ba:	79fb      	ldrb	r3, [r7, #7]
 80002bc:	4a1e      	ldr	r2, [pc, #120]	@ (8000338 <button_reading+0x128>)
 80002be:	2100      	movs	r1, #0
 80002c0:	54d1      	strb	r1, [r2, r3]
 80002c2:	e022      	b.n	800030a <button_reading+0xfa>
                	}
            	}
            	// If the button is still pressed and the counter is running
				else if(debounceButtonBuffer2[i] == BUTTON_IS_PRESSED && counterForButtonPress_2s[i] > 0){
 80002c4:	79fb      	ldrb	r3, [r7, #7]
 80002c6:	4a18      	ldr	r2, [pc, #96]	@ (8000328 <button_reading+0x118>)
 80002c8:	5cd3      	ldrb	r3, [r2, r3]
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d11d      	bne.n	800030a <button_reading+0xfa>
 80002ce:	79fb      	ldrb	r3, [r7, #7]
 80002d0:	4a1a      	ldr	r2, [pc, #104]	@ (800033c <button_reading+0x12c>)
 80002d2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80002d6:	2b00      	cmp	r3, #0
 80002d8:	d017      	beq.n	800030a <button_reading+0xfa>
								counterForButtonPress_2s[i]--;
 80002da:	79fb      	ldrb	r3, [r7, #7]
 80002dc:	4a17      	ldr	r2, [pc, #92]	@ (800033c <button_reading+0x12c>)
 80002de:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 80002e2:	3a01      	subs	r2, #1
 80002e4:	b291      	uxth	r1, r2
 80002e6:	4a15      	ldr	r2, [pc, #84]	@ (800033c <button_reading+0x12c>)
 80002e8:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
								// Button press more than 2 seconds, turn on the Button 'Press' flag
								if(counterForButtonPress_2s[i] == 0){
 80002ec:	79fb      	ldrb	r3, [r7, #7]
 80002ee:	4a13      	ldr	r2, [pc, #76]	@ (800033c <button_reading+0x12c>)
 80002f0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80002f4:	2b00      	cmp	r3, #0
 80002f6:	d108      	bne.n	800030a <button_reading+0xfa>
									flagForButtonPress[i] = 1;
 80002f8:	79fb      	ldrb	r3, [r7, #7]
 80002fa:	4a0f      	ldr	r2, [pc, #60]	@ (8000338 <button_reading+0x128>)
 80002fc:	2101      	movs	r1, #1
 80002fe:	54d1      	strb	r1, [r2, r3]
									counterForButtonPress_2s[i] = DURATION_FOR_AUTO_INCREASING;
 8000300:	79fb      	ldrb	r3, [r7, #7]
 8000302:	4a0e      	ldr	r2, [pc, #56]	@ (800033c <button_reading+0x12c>)
 8000304:	21c8      	movs	r1, #200	@ 0xc8
 8000306:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
    for(uint8_t i = 0; i < NO_OF_BUTTONS; i++) {
 800030a:	79fb      	ldrb	r3, [r7, #7]
 800030c:	3301      	adds	r3, #1
 800030e:	71fb      	strb	r3, [r7, #7]
 8000310:	79fb      	ldrb	r3, [r7, #7]
 8000312:	2b02      	cmp	r3, #2
 8000314:	d982      	bls.n	800021c <button_reading+0xc>

				}
			}
        }
    }
}
 8000316:	bf00      	nop
 8000318:	bf00      	nop
 800031a:	370c      	adds	r7, #12
 800031c:	46bd      	mov	sp, r7
 800031e:	bd90      	pop	{r4, r7, pc}
 8000320:	200000a4 	.word	0x200000a4
 8000324:	200000a0 	.word	0x200000a0
 8000328:	200000a8 	.word	0x200000a8
 800032c:	20000000 	.word	0x20000000
 8000330:	2000000c 	.word	0x2000000c
 8000334:	200000ac 	.word	0x200000ac
 8000338:	200000b0 	.word	0x200000b0
 800033c:	200000b4 	.word	0x200000b4

08000340 <fsm_automatic_run>:
 8000340:	b580      	push	{r7, lr}
 8000342:	af00      	add	r7, sp, #0
 8000344:	4b28      	ldr	r3, [pc, #160]	@ (80003e8 <fsm_automatic_run+0xa8>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	3b0b      	subs	r3, #11
 800034a:	2b03      	cmp	r3, #3
 800034c:	d842      	bhi.n	80003d4 <fsm_automatic_run+0x94>
 800034e:	a201      	add	r2, pc, #4	@ (adr r2, 8000354 <fsm_automatic_run+0x14>)
 8000350:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000354:	0800037b 	.word	0x0800037b
 8000358:	08000399 	.word	0x08000399
 800035c:	080003b7 	.word	0x080003b7
 8000360:	08000365 	.word	0x08000365
 8000364:	f000 fba6 	bl	8000ab4 <state_init>
 8000368:	4b1f      	ldr	r3, [pc, #124]	@ (80003e8 <fsm_automatic_run+0xa8>)
 800036a:	220b      	movs	r2, #11
 800036c:	601a      	str	r2, [r3, #0]
 800036e:	4b1f      	ldr	r3, [pc, #124]	@ (80003ec <fsm_automatic_run+0xac>)
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	4618      	mov	r0, r3
 8000374:	f000 fe00 	bl	8000f78 <setTimer1>
 8000378:	e033      	b.n	80003e2 <fsm_automatic_run+0xa2>
 800037a:	f000 fbab 	bl	8000ad4 <state_red>
 800037e:	4b1c      	ldr	r3, [pc, #112]	@ (80003f0 <fsm_automatic_run+0xb0>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	2b01      	cmp	r3, #1
 8000384:	d128      	bne.n	80003d8 <fsm_automatic_run+0x98>
 8000386:	4b18      	ldr	r3, [pc, #96]	@ (80003e8 <fsm_automatic_run+0xa8>)
 8000388:	220c      	movs	r2, #12
 800038a:	601a      	str	r2, [r3, #0]
 800038c:	4b19      	ldr	r3, [pc, #100]	@ (80003f4 <fsm_automatic_run+0xb4>)
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	4618      	mov	r0, r3
 8000392:	f000 fdf1 	bl	8000f78 <setTimer1>
 8000396:	e01f      	b.n	80003d8 <fsm_automatic_run+0x98>
 8000398:	f000 fbac 	bl	8000af4 <state_green>
 800039c:	4b14      	ldr	r3, [pc, #80]	@ (80003f0 <fsm_automatic_run+0xb0>)
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	2b01      	cmp	r3, #1
 80003a2:	d11b      	bne.n	80003dc <fsm_automatic_run+0x9c>
 80003a4:	4b10      	ldr	r3, [pc, #64]	@ (80003e8 <fsm_automatic_run+0xa8>)
 80003a6:	220d      	movs	r2, #13
 80003a8:	601a      	str	r2, [r3, #0]
 80003aa:	4b13      	ldr	r3, [pc, #76]	@ (80003f8 <fsm_automatic_run+0xb8>)
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	4618      	mov	r0, r3
 80003b0:	f000 fde2 	bl	8000f78 <setTimer1>
 80003b4:	e012      	b.n	80003dc <fsm_automatic_run+0x9c>
 80003b6:	f000 fbad 	bl	8000b14 <state_yellow>
 80003ba:	4b0d      	ldr	r3, [pc, #52]	@ (80003f0 <fsm_automatic_run+0xb0>)
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	2b01      	cmp	r3, #1
 80003c0:	d10e      	bne.n	80003e0 <fsm_automatic_run+0xa0>
 80003c2:	4b09      	ldr	r3, [pc, #36]	@ (80003e8 <fsm_automatic_run+0xa8>)
 80003c4:	220b      	movs	r2, #11
 80003c6:	601a      	str	r2, [r3, #0]
 80003c8:	4b08      	ldr	r3, [pc, #32]	@ (80003ec <fsm_automatic_run+0xac>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	4618      	mov	r0, r3
 80003ce:	f000 fdd3 	bl	8000f78 <setTimer1>
 80003d2:	e005      	b.n	80003e0 <fsm_automatic_run+0xa0>
 80003d4:	bf00      	nop
 80003d6:	e004      	b.n	80003e2 <fsm_automatic_run+0xa2>
 80003d8:	bf00      	nop
 80003da:	e002      	b.n	80003e2 <fsm_automatic_run+0xa2>
 80003dc:	bf00      	nop
 80003de:	e000      	b.n	80003e2 <fsm_automatic_run+0xa2>
 80003e0:	bf00      	nop
 80003e2:	bf00      	nop
 80003e4:	bd80      	pop	{r7, pc}
 80003e6:	bf00      	nop
 80003e8:	20000120 	.word	0x20000120
 80003ec:	20000014 	.word	0x20000014
 80003f0:	200001e0 	.word	0x200001e0
 80003f4:	2000001c 	.word	0x2000001c
 80003f8:	20000018 	.word	0x20000018

080003fc <fsm_automatic_run1>:
 80003fc:	b580      	push	{r7, lr}
 80003fe:	af00      	add	r7, sp, #0
 8000400:	4b29      	ldr	r3, [pc, #164]	@ (80004a8 <fsm_automatic_run1+0xac>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	3b0b      	subs	r3, #11
 8000406:	2b04      	cmp	r3, #4
 8000408:	d844      	bhi.n	8000494 <fsm_automatic_run1+0x98>
 800040a:	a201      	add	r2, pc, #4	@ (adr r2, 8000410 <fsm_automatic_run1+0x14>)
 800040c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000410:	0800043b 	.word	0x0800043b
 8000414:	08000459 	.word	0x08000459
 8000418:	08000477 	.word	0x08000477
 800041c:	08000495 	.word	0x08000495
 8000420:	08000425 	.word	0x08000425
 8000424:	f000 fb86 	bl	8000b34 <state_init1>
 8000428:	4b1f      	ldr	r3, [pc, #124]	@ (80004a8 <fsm_automatic_run1+0xac>)
 800042a:	220c      	movs	r2, #12
 800042c:	601a      	str	r2, [r3, #0]
 800042e:	4b1f      	ldr	r3, [pc, #124]	@ (80004ac <fsm_automatic_run1+0xb0>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4618      	mov	r0, r3
 8000434:	f000 fdba 	bl	8000fac <setTimer2>
 8000438:	e033      	b.n	80004a2 <fsm_automatic_run1+0xa6>
 800043a:	f000 fb8d 	bl	8000b58 <state_red1>
 800043e:	4b1c      	ldr	r3, [pc, #112]	@ (80004b0 <fsm_automatic_run1+0xb4>)
 8000440:	681b      	ldr	r3, [r3, #0]
 8000442:	2b01      	cmp	r3, #1
 8000444:	d128      	bne.n	8000498 <fsm_automatic_run1+0x9c>
 8000446:	4b18      	ldr	r3, [pc, #96]	@ (80004a8 <fsm_automatic_run1+0xac>)
 8000448:	220c      	movs	r2, #12
 800044a:	601a      	str	r2, [r3, #0]
 800044c:	4b17      	ldr	r3, [pc, #92]	@ (80004ac <fsm_automatic_run1+0xb0>)
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	4618      	mov	r0, r3
 8000452:	f000 fdab 	bl	8000fac <setTimer2>
 8000456:	e01f      	b.n	8000498 <fsm_automatic_run1+0x9c>
 8000458:	f000 fb90 	bl	8000b7c <state_green1>
 800045c:	4b14      	ldr	r3, [pc, #80]	@ (80004b0 <fsm_automatic_run1+0xb4>)
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	2b01      	cmp	r3, #1
 8000462:	d11b      	bne.n	800049c <fsm_automatic_run1+0xa0>
 8000464:	4b10      	ldr	r3, [pc, #64]	@ (80004a8 <fsm_automatic_run1+0xac>)
 8000466:	220d      	movs	r2, #13
 8000468:	601a      	str	r2, [r3, #0]
 800046a:	4b12      	ldr	r3, [pc, #72]	@ (80004b4 <fsm_automatic_run1+0xb8>)
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	4618      	mov	r0, r3
 8000470:	f000 fd9c 	bl	8000fac <setTimer2>
 8000474:	e012      	b.n	800049c <fsm_automatic_run1+0xa0>
 8000476:	f000 fb93 	bl	8000ba0 <state_yellow1>
 800047a:	4b0d      	ldr	r3, [pc, #52]	@ (80004b0 <fsm_automatic_run1+0xb4>)
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	2b01      	cmp	r3, #1
 8000480:	d10e      	bne.n	80004a0 <fsm_automatic_run1+0xa4>
 8000482:	4b09      	ldr	r3, [pc, #36]	@ (80004a8 <fsm_automatic_run1+0xac>)
 8000484:	220b      	movs	r2, #11
 8000486:	601a      	str	r2, [r3, #0]
 8000488:	4b0b      	ldr	r3, [pc, #44]	@ (80004b8 <fsm_automatic_run1+0xbc>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	4618      	mov	r0, r3
 800048e:	f000 fd8d 	bl	8000fac <setTimer2>
 8000492:	e005      	b.n	80004a0 <fsm_automatic_run1+0xa4>
 8000494:	bf00      	nop
 8000496:	e004      	b.n	80004a2 <fsm_automatic_run1+0xa6>
 8000498:	bf00      	nop
 800049a:	e002      	b.n	80004a2 <fsm_automatic_run1+0xa6>
 800049c:	bf00      	nop
 800049e:	e000      	b.n	80004a2 <fsm_automatic_run1+0xa6>
 80004a0:	bf00      	nop
 80004a2:	bf00      	nop
 80004a4:	bd80      	pop	{r7, pc}
 80004a6:	bf00      	nop
 80004a8:	20000124 	.word	0x20000124
 80004ac:	2000001c 	.word	0x2000001c
 80004b0:	200001e4 	.word	0x200001e4
 80004b4:	20000018 	.word	0x20000018
 80004b8:	20000014 	.word	0x20000014

080004bc <fsm_manual_run>:
char buffer[30];




void fsm_manual_run(){
 80004bc:	b580      	push	{r7, lr}
 80004be:	af00      	add	r7, sp, #0
	switch(mode){
 80004c0:	4bba      	ldr	r3, [pc, #744]	@ (80007ac <fsm_manual_run+0x2f0>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	2b04      	cmp	r3, #4
 80004c6:	f200 8204 	bhi.w	80008d2 <fsm_manual_run+0x416>
 80004ca:	a201      	add	r2, pc, #4	@ (adr r2, 80004d0 <fsm_manual_run+0x14>)
 80004cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004d0:	080004e5 	.word	0x080004e5
 80004d4:	08000513 	.word	0x08000513
 80004d8:	080005e9 	.word	0x080005e9
 80004dc:	08000805 	.word	0x08000805
 80004e0:	080006b9 	.word	0x080006b9
		case INIT_SYSTEM:
			  button_init();
 80004e4:	f7ff fe32 	bl	800014c <button_init>
			  status = INIT;
 80004e8:	4bb1      	ldr	r3, [pc, #708]	@ (80007b0 <fsm_manual_run+0x2f4>)
 80004ea:	220e      	movs	r2, #14
 80004ec:	601a      	str	r2, [r3, #0]
			  status1 = INIT1;
 80004ee:	4bb1      	ldr	r3, [pc, #708]	@ (80007b4 <fsm_manual_run+0x2f8>)
 80004f0:	220f      	movs	r2, #15
 80004f2:	601a      	str	r2, [r3, #0]
			  setTimer0(25);
 80004f4:	2019      	movs	r0, #25
 80004f6:	f000 fd25 	bl	8000f44 <setTimer0>
			  setTimer6(50);
 80004fa:	2032      	movs	r0, #50	@ 0x32
 80004fc:	f000 fd70 	bl	8000fe0 <setTimer6>

			  	lcd_init();
 8000500:	f000 fa6c 	bl	80009dc <lcd_init>
				HAL_Delay(25);
 8000504:	2019      	movs	r0, #25
 8000506:	f000 ffbf 	bl	8001488 <HAL_Delay>

			  mode = NORMAL_MODE;
 800050a:	4ba8      	ldr	r3, [pc, #672]	@ (80007ac <fsm_manual_run+0x2f0>)
 800050c:	2201      	movs	r2, #1
 800050e:	601a      	str	r2, [r3, #0]


			break;
 8000510:	e1e8      	b.n	80008e4 <fsm_manual_run+0x428>
		case NORMAL_MODE:
				  sprintf(buffer1, "%d ", timer1_counter/100);
 8000512:	4ba9      	ldr	r3, [pc, #676]	@ (80007b8 <fsm_manual_run+0x2fc>)
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	4aa9      	ldr	r2, [pc, #676]	@ (80007bc <fsm_manual_run+0x300>)
 8000518:	fb82 1203 	smull	r1, r2, r2, r3
 800051c:	1152      	asrs	r2, r2, #5
 800051e:	17db      	asrs	r3, r3, #31
 8000520:	1ad3      	subs	r3, r2, r3
 8000522:	461a      	mov	r2, r3
 8000524:	49a6      	ldr	r1, [pc, #664]	@ (80007c0 <fsm_manual_run+0x304>)
 8000526:	48a7      	ldr	r0, [pc, #668]	@ (80007c4 <fsm_manual_run+0x308>)
 8000528:	f002 ff36 	bl	8003398 <siprintf>
				  sprintf(buffer2, "%d ", timer2_counter/100);
 800052c:	4ba6      	ldr	r3, [pc, #664]	@ (80007c8 <fsm_manual_run+0x30c>)
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	4aa2      	ldr	r2, [pc, #648]	@ (80007bc <fsm_manual_run+0x300>)
 8000532:	fb82 1203 	smull	r1, r2, r2, r3
 8000536:	1152      	asrs	r2, r2, #5
 8000538:	17db      	asrs	r3, r3, #31
 800053a:	1ad3      	subs	r3, r2, r3
 800053c:	461a      	mov	r2, r3
 800053e:	49a0      	ldr	r1, [pc, #640]	@ (80007c0 <fsm_manual_run+0x304>)
 8000540:	48a2      	ldr	r0, [pc, #648]	@ (80007cc <fsm_manual_run+0x310>)
 8000542:	f002 ff29 	bl	8003398 <siprintf>


				  lcd_goto_XY(1, 0);
 8000546:	2100      	movs	r1, #0
 8000548:	2001      	movs	r0, #1
 800054a:	f000 fa91 	bl	8000a70 <lcd_goto_XY>
				  lcd_send_string("Lane 1:");
 800054e:	48a0      	ldr	r0, [pc, #640]	@ (80007d0 <fsm_manual_run+0x314>)
 8000550:	f000 fa72 	bl	8000a38 <lcd_send_string>


				  lcd_goto_XY(1, 8);
 8000554:	2108      	movs	r1, #8
 8000556:	2001      	movs	r0, #1
 8000558:	f000 fa8a 	bl	8000a70 <lcd_goto_XY>
				  lcd_send_string(buffer1);
 800055c:	4899      	ldr	r0, [pc, #612]	@ (80007c4 <fsm_manual_run+0x308>)
 800055e:	f000 fa6b 	bl	8000a38 <lcd_send_string>


				  lcd_goto_XY(2, 0);
 8000562:	2100      	movs	r1, #0
 8000564:	2002      	movs	r0, #2
 8000566:	f000 fa83 	bl	8000a70 <lcd_goto_XY>
				  lcd_send_string("Lane 2:");
 800056a:	489a      	ldr	r0, [pc, #616]	@ (80007d4 <fsm_manual_run+0x318>)
 800056c:	f000 fa64 	bl	8000a38 <lcd_send_string>


				  lcd_goto_XY(2, 8);
 8000570:	2108      	movs	r1, #8
 8000572:	2002      	movs	r0, #2
 8000574:	f000 fa7c 	bl	8000a70 <lcd_goto_XY>
				  lcd_send_string(buffer2);
 8000578:	4894      	ldr	r0, [pc, #592]	@ (80007cc <fsm_manual_run+0x310>)
 800057a:	f000 fa5d 	bl	8000a38 <lcd_send_string>



				  fsm_automatic_run();
 800057e:	f7ff fedf 	bl	8000340 <fsm_automatic_run>
				  fsm_automatic_run1();
 8000582:	f7ff ff3b 	bl	80003fc <fsm_automatic_run1>


					if(is_button_pressed(0) == 1){
 8000586:	2000      	movs	r0, #0
 8000588:	f7ff fe24 	bl	80001d4 <is_button_pressed>
 800058c:	4603      	mov	r3, r0
 800058e:	2b01      	cmp	r3, #1
 8000590:	f040 81a1 	bne.w	80008d6 <fsm_manual_run+0x41a>
						clearTimer1();
 8000594:	f000 fd3e 	bl	8001014 <clearTimer1>
						clearTimer2();
 8000598:	f000 fd4c 	bl	8001034 <clearTimer2>
						status = AUTO_RED;
 800059c:	4b84      	ldr	r3, [pc, #528]	@ (80007b0 <fsm_manual_run+0x2f4>)
 800059e:	220b      	movs	r2, #11
 80005a0:	601a      	str	r2, [r3, #0]
						status1 = AUTO_RED;
 80005a2:	4b84      	ldr	r3, [pc, #528]	@ (80007b4 <fsm_manual_run+0x2f8>)
 80005a4:	220b      	movs	r2, #11
 80005a6:	601a      	str	r2, [r3, #0]

						HAL_GPIO_WritePin(GPIOB, D3_Pin, 1);
 80005a8:	2201      	movs	r2, #1
 80005aa:	2108      	movs	r1, #8
 80005ac:	488a      	ldr	r0, [pc, #552]	@ (80007d8 <fsm_manual_run+0x31c>)
 80005ae:	f001 fa38 	bl	8001a22 <HAL_GPIO_WritePin>
						HAL_GPIO_WritePin(GPIOB, D4_Pin, 1);
 80005b2:	2201      	movs	r2, #1
 80005b4:	2120      	movs	r1, #32
 80005b6:	4888      	ldr	r0, [pc, #544]	@ (80007d8 <fsm_manual_run+0x31c>)
 80005b8:	f001 fa33 	bl	8001a22 <HAL_GPIO_WritePin>
						HAL_GPIO_WritePin(GPIOB, D6_Pin, 1);
 80005bc:	2201      	movs	r2, #1
 80005be:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80005c2:	4885      	ldr	r0, [pc, #532]	@ (80007d8 <fsm_manual_run+0x31c>)
 80005c4:	f001 fa2d 	bl	8001a22 <HAL_GPIO_WritePin>
						HAL_GPIO_WritePin(GPIOB, D5_Pin, 1);
 80005c8:	2201      	movs	r2, #1
 80005ca:	2110      	movs	r1, #16
 80005cc:	4882      	ldr	r0, [pc, #520]	@ (80007d8 <fsm_manual_run+0x31c>)
 80005ce:	f001 fa28 	bl	8001a22 <HAL_GPIO_WritePin>
					    setTimer6(50);
 80005d2:	2032      	movs	r0, #50	@ 0x32
 80005d4:	f000 fd04 	bl	8000fe0 <setTimer6>


					    buffer_duration_time = duration_time_of_AUTO_RED;
 80005d8:	4b80      	ldr	r3, [pc, #512]	@ (80007dc <fsm_manual_run+0x320>)
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4a80      	ldr	r2, [pc, #512]	@ (80007e0 <fsm_manual_run+0x324>)
 80005de:	6013      	str	r3, [r2, #0]


					    mode = MAN_RED_MODE;
 80005e0:	4b72      	ldr	r3, [pc, #456]	@ (80007ac <fsm_manual_run+0x2f0>)
 80005e2:	2202      	movs	r2, #2
 80005e4:	601a      	str	r2, [r3, #0]

					}

			break;
 80005e6:	e176      	b.n	80008d6 <fsm_manual_run+0x41a>
		case MAN_RED_MODE:
					sprintf(buffer, "%d ", buffer_duration_time/100);
 80005e8:	4b7d      	ldr	r3, [pc, #500]	@ (80007e0 <fsm_manual_run+0x324>)
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	4a73      	ldr	r2, [pc, #460]	@ (80007bc <fsm_manual_run+0x300>)
 80005ee:	fb82 1203 	smull	r1, r2, r2, r3
 80005f2:	1152      	asrs	r2, r2, #5
 80005f4:	17db      	asrs	r3, r3, #31
 80005f6:	1ad3      	subs	r3, r2, r3
 80005f8:	461a      	mov	r2, r3
 80005fa:	4971      	ldr	r1, [pc, #452]	@ (80007c0 <fsm_manual_run+0x304>)
 80005fc:	4879      	ldr	r0, [pc, #484]	@ (80007e4 <fsm_manual_run+0x328>)
 80005fe:	f002 fecb 	bl	8003398 <siprintf>


					lcd_goto_XY(1, 0);
 8000602:	2100      	movs	r1, #0
 8000604:	2001      	movs	r0, #1
 8000606:	f000 fa33 	bl	8000a70 <lcd_goto_XY>
					lcd_send_string("Mode2: MAN_RED");
 800060a:	4877      	ldr	r0, [pc, #476]	@ (80007e8 <fsm_manual_run+0x32c>)
 800060c:	f000 fa14 	bl	8000a38 <lcd_send_string>


					lcd_goto_XY(2, 0);
 8000610:	2100      	movs	r1, #0
 8000612:	2002      	movs	r0, #2
 8000614:	f000 fa2c 	bl	8000a70 <lcd_goto_XY>
					lcd_send_string("Time");
 8000618:	4874      	ldr	r0, [pc, #464]	@ (80007ec <fsm_manual_run+0x330>)
 800061a:	f000 fa0d 	bl	8000a38 <lcd_send_string>


					lcd_goto_XY(2, 8);
 800061e:	2108      	movs	r1, #8
 8000620:	2002      	movs	r0, #2
 8000622:	f000 fa25 	bl	8000a70 <lcd_goto_XY>

					lcd_send_string(buffer);
 8000626:	486f      	ldr	r0, [pc, #444]	@ (80007e4 <fsm_manual_run+0x328>)
 8000628:	f000 fa06 	bl	8000a38 <lcd_send_string>

					if(timer6_flag == 1){
 800062c:	4b70      	ldr	r3, [pc, #448]	@ (80007f0 <fsm_manual_run+0x334>)
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	2b01      	cmp	r3, #1
 8000632:	d106      	bne.n	8000642 <fsm_manual_run+0x186>
						blinkind_led_traffic_x();
 8000634:	f000 fac6 	bl	8000bc4 <blinkind_led_traffic_x>
						blinkind_led_traffic_y();
 8000638:	f000 faf6 	bl	8000c28 <blinkind_led_traffic_y>
						setTimer6(50);
 800063c:	2032      	movs	r0, #50	@ 0x32
 800063e:	f000 fccf 	bl	8000fe0 <setTimer6>
					}

					if(is_button_pressed(0) == 1){
 8000642:	2000      	movs	r0, #0
 8000644:	f7ff fdc6 	bl	80001d4 <is_button_pressed>
 8000648:	4603      	mov	r3, r0
 800064a:	2b01      	cmp	r3, #1
 800064c:	d111      	bne.n	8000672 <fsm_manual_run+0x1b6>
						clearTimer6();
 800064e:	f000 fd01 	bl	8001054 <clearTimer6>
						status = AUTO_YELLOW;
 8000652:	4b57      	ldr	r3, [pc, #348]	@ (80007b0 <fsm_manual_run+0x2f4>)
 8000654:	220d      	movs	r2, #13
 8000656:	601a      	str	r2, [r3, #0]
						status1 = AUTO_YELLOW;
 8000658:	4b56      	ldr	r3, [pc, #344]	@ (80007b4 <fsm_manual_run+0x2f8>)
 800065a:	220d      	movs	r2, #13
 800065c:	601a      	str	r2, [r3, #0]
						setTimer6(50);
 800065e:	2032      	movs	r0, #50	@ 0x32
 8000660:	f000 fcbe 	bl	8000fe0 <setTimer6>
						buffer_duration_time = duration_time_of_AUTO_YELLOW;
 8000664:	4b63      	ldr	r3, [pc, #396]	@ (80007f4 <fsm_manual_run+0x338>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	4a5d      	ldr	r2, [pc, #372]	@ (80007e0 <fsm_manual_run+0x324>)
 800066a:	6013      	str	r3, [r2, #0]
						mode = MAN_YELLOW_MODE;
 800066c:	4b4f      	ldr	r3, [pc, #316]	@ (80007ac <fsm_manual_run+0x2f0>)
 800066e:	2203      	movs	r2, #3
 8000670:	601a      	str	r2, [r3, #0]
					}

					if(is_button_pressed(1) == 1){
 8000672:	2001      	movs	r0, #1
 8000674:	f7ff fdae 	bl	80001d4 <is_button_pressed>
 8000678:	4603      	mov	r3, r0
 800067a:	2b01      	cmp	r3, #1
 800067c:	d110      	bne.n	80006a0 <fsm_manual_run+0x1e4>
						buffer_duration_time = (buffer_duration_time + 100) % 10000;
 800067e:	4b58      	ldr	r3, [pc, #352]	@ (80007e0 <fsm_manual_run+0x324>)
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	f103 0264 	add.w	r2, r3, #100	@ 0x64
 8000686:	4b5c      	ldr	r3, [pc, #368]	@ (80007f8 <fsm_manual_run+0x33c>)
 8000688:	fb83 1302 	smull	r1, r3, r3, r2
 800068c:	1319      	asrs	r1, r3, #12
 800068e:	17d3      	asrs	r3, r2, #31
 8000690:	1acb      	subs	r3, r1, r3
 8000692:	f242 7110 	movw	r1, #10000	@ 0x2710
 8000696:	fb01 f303 	mul.w	r3, r1, r3
 800069a:	1ad3      	subs	r3, r2, r3
 800069c:	4a50      	ldr	r2, [pc, #320]	@ (80007e0 <fsm_manual_run+0x324>)
 800069e:	6013      	str	r3, [r2, #0]

					}

					if(is_button_pressed(2) == 1){
 80006a0:	2002      	movs	r0, #2
 80006a2:	f7ff fd97 	bl	80001d4 <is_button_pressed>
 80006a6:	4603      	mov	r3, r0
 80006a8:	2b01      	cmp	r3, #1
 80006aa:	f040 8116 	bne.w	80008da <fsm_manual_run+0x41e>
						duration_time_of_AUTO_RED = buffer_duration_time;
 80006ae:	4b4c      	ldr	r3, [pc, #304]	@ (80007e0 <fsm_manual_run+0x324>)
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	4a4a      	ldr	r2, [pc, #296]	@ (80007dc <fsm_manual_run+0x320>)
 80006b4:	6013      	str	r3, [r2, #0]
					}

			break;
 80006b6:	e110      	b.n	80008da <fsm_manual_run+0x41e>
		case MAN_GREEN_MODE:
			sprintf(buffer, "%d ", buffer_duration_time/100);
 80006b8:	4b49      	ldr	r3, [pc, #292]	@ (80007e0 <fsm_manual_run+0x324>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	4a3f      	ldr	r2, [pc, #252]	@ (80007bc <fsm_manual_run+0x300>)
 80006be:	fb82 1203 	smull	r1, r2, r2, r3
 80006c2:	1152      	asrs	r2, r2, #5
 80006c4:	17db      	asrs	r3, r3, #31
 80006c6:	1ad3      	subs	r3, r2, r3
 80006c8:	461a      	mov	r2, r3
 80006ca:	493d      	ldr	r1, [pc, #244]	@ (80007c0 <fsm_manual_run+0x304>)
 80006cc:	4845      	ldr	r0, [pc, #276]	@ (80007e4 <fsm_manual_run+0x328>)
 80006ce:	f002 fe63 	bl	8003398 <siprintf>


			lcd_goto_XY(1, 0);
 80006d2:	2100      	movs	r1, #0
 80006d4:	2001      	movs	r0, #1
 80006d6:	f000 f9cb 	bl	8000a70 <lcd_goto_XY>
			lcd_send_string("Mode4: MAN_GREEN");
 80006da:	4848      	ldr	r0, [pc, #288]	@ (80007fc <fsm_manual_run+0x340>)
 80006dc:	f000 f9ac 	bl	8000a38 <lcd_send_string>


			lcd_goto_XY(2, 0);
 80006e0:	2100      	movs	r1, #0
 80006e2:	2002      	movs	r0, #2
 80006e4:	f000 f9c4 	bl	8000a70 <lcd_goto_XY>
			lcd_send_string("Time");
 80006e8:	4840      	ldr	r0, [pc, #256]	@ (80007ec <fsm_manual_run+0x330>)
 80006ea:	f000 f9a5 	bl	8000a38 <lcd_send_string>


			lcd_goto_XY(2, 8);
 80006ee:	2108      	movs	r1, #8
 80006f0:	2002      	movs	r0, #2
 80006f2:	f000 f9bd 	bl	8000a70 <lcd_goto_XY>

			lcd_send_string(buffer);
 80006f6:	483b      	ldr	r0, [pc, #236]	@ (80007e4 <fsm_manual_run+0x328>)
 80006f8:	f000 f99e 	bl	8000a38 <lcd_send_string>




					if(timer6_flag == 1){
 80006fc:	4b3c      	ldr	r3, [pc, #240]	@ (80007f0 <fsm_manual_run+0x334>)
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	2b01      	cmp	r3, #1
 8000702:	d106      	bne.n	8000712 <fsm_manual_run+0x256>
						blinkind_led_traffic_x();
 8000704:	f000 fa5e 	bl	8000bc4 <blinkind_led_traffic_x>
						blinkind_led_traffic_y();
 8000708:	f000 fa8e 	bl	8000c28 <blinkind_led_traffic_y>
						setTimer6(50);
 800070c:	2032      	movs	r0, #50	@ 0x32
 800070e:	f000 fc67 	bl	8000fe0 <setTimer6>
					}
					if(is_button_pressed(0) == 1){
 8000712:	2000      	movs	r0, #0
 8000714:	f7ff fd5e 	bl	80001d4 <is_button_pressed>
 8000718:	4603      	mov	r3, r0
 800071a:	2b01      	cmp	r3, #1
 800071c:	d112      	bne.n	8000744 <fsm_manual_run+0x288>
						clearTimer6();
 800071e:	f000 fc99 	bl	8001054 <clearTimer6>
						status = INIT;
 8000722:	4b23      	ldr	r3, [pc, #140]	@ (80007b0 <fsm_manual_run+0x2f4>)
 8000724:	220e      	movs	r2, #14
 8000726:	601a      	str	r2, [r3, #0]
						status1 = INIT1;
 8000728:	4b22      	ldr	r3, [pc, #136]	@ (80007b4 <fsm_manual_run+0x2f8>)
 800072a:	220f      	movs	r2, #15
 800072c:	601a      	str	r2, [r3, #0]
						setTimer6(50);
 800072e:	2032      	movs	r0, #50	@ 0x32
 8000730:	f000 fc56 	bl	8000fe0 <setTimer6>

						lcd_init();
 8000734:	f000 f952 	bl	80009dc <lcd_init>
						HAL_Delay(25);
 8000738:	2019      	movs	r0, #25
 800073a:	f000 fea5 	bl	8001488 <HAL_Delay>

						mode = NORMAL_MODE;
 800073e:	4b1b      	ldr	r3, [pc, #108]	@ (80007ac <fsm_manual_run+0x2f0>)
 8000740:	2201      	movs	r2, #1
 8000742:	601a      	str	r2, [r3, #0]




					}
					if(is_button_pressed(1) == 1){
 8000744:	2001      	movs	r0, #1
 8000746:	f7ff fd45 	bl	80001d4 <is_button_pressed>
 800074a:	4603      	mov	r3, r0
 800074c:	2b01      	cmp	r3, #1
 800074e:	d110      	bne.n	8000772 <fsm_manual_run+0x2b6>
						buffer_duration_time = (buffer_duration_time + 100) % 10000;
 8000750:	4b23      	ldr	r3, [pc, #140]	@ (80007e0 <fsm_manual_run+0x324>)
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	f103 0264 	add.w	r2, r3, #100	@ 0x64
 8000758:	4b27      	ldr	r3, [pc, #156]	@ (80007f8 <fsm_manual_run+0x33c>)
 800075a:	fb83 1302 	smull	r1, r3, r3, r2
 800075e:	1319      	asrs	r1, r3, #12
 8000760:	17d3      	asrs	r3, r2, #31
 8000762:	1acb      	subs	r3, r1, r3
 8000764:	f242 7110 	movw	r1, #10000	@ 0x2710
 8000768:	fb01 f303 	mul.w	r3, r1, r3
 800076c:	1ad3      	subs	r3, r2, r3
 800076e:	4a1c      	ldr	r2, [pc, #112]	@ (80007e0 <fsm_manual_run+0x324>)
 8000770:	6013      	str	r3, [r2, #0]

					}
					if(is_button_pressed(2) == 1){
 8000772:	2002      	movs	r0, #2
 8000774:	f7ff fd2e 	bl	80001d4 <is_button_pressed>
 8000778:	4603      	mov	r3, r0
 800077a:	2b01      	cmp	r3, #1
 800077c:	f040 80af 	bne.w	80008de <fsm_manual_run+0x422>
						duration_time_of_AUTO_GREEN = buffer_duration_time;
 8000780:	4b17      	ldr	r3, [pc, #92]	@ (80007e0 <fsm_manual_run+0x324>)
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	4a1e      	ldr	r2, [pc, #120]	@ (8000800 <fsm_manual_run+0x344>)
 8000786:	6013      	str	r3, [r2, #0]
						if(duration_time_of_AUTO_RED != duration_time_of_AUTO_GREEN + duration_time_of_AUTO_YELLOW){
 8000788:	4b1d      	ldr	r3, [pc, #116]	@ (8000800 <fsm_manual_run+0x344>)
 800078a:	681a      	ldr	r2, [r3, #0]
 800078c:	4b19      	ldr	r3, [pc, #100]	@ (80007f4 <fsm_manual_run+0x338>)
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	441a      	add	r2, r3
 8000792:	4b12      	ldr	r3, [pc, #72]	@ (80007dc <fsm_manual_run+0x320>)
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	429a      	cmp	r2, r3
 8000798:	f000 80a1 	beq.w	80008de <fsm_manual_run+0x422>
							duration_time_of_AUTO_RED = duration_time_of_AUTO_GREEN + duration_time_of_AUTO_YELLOW;
 800079c:	4b18      	ldr	r3, [pc, #96]	@ (8000800 <fsm_manual_run+0x344>)
 800079e:	681a      	ldr	r2, [r3, #0]
 80007a0:	4b14      	ldr	r3, [pc, #80]	@ (80007f4 <fsm_manual_run+0x338>)
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	4413      	add	r3, r2
 80007a6:	4a0d      	ldr	r2, [pc, #52]	@ (80007dc <fsm_manual_run+0x320>)
 80007a8:	6013      	str	r3, [r2, #0]
						}
					}

			break;
 80007aa:	e098      	b.n	80008de <fsm_manual_run+0x422>
 80007ac:	20000128 	.word	0x20000128
 80007b0:	20000120 	.word	0x20000120
 80007b4:	20000124 	.word	0x20000124
 80007b8:	200001cc 	.word	0x200001cc
 80007bc:	51eb851f 	.word	0x51eb851f
 80007c0:	08003d10 	.word	0x08003d10
 80007c4:	200000c0 	.word	0x200000c0
 80007c8:	200001d0 	.word	0x200001d0
 80007cc:	200000e0 	.word	0x200000e0
 80007d0:	08003d14 	.word	0x08003d14
 80007d4:	08003d1c 	.word	0x08003d1c
 80007d8:	40010c00 	.word	0x40010c00
 80007dc:	20000014 	.word	0x20000014
 80007e0:	20000020 	.word	0x20000020
 80007e4:	20000100 	.word	0x20000100
 80007e8:	08003d24 	.word	0x08003d24
 80007ec:	08003d34 	.word	0x08003d34
 80007f0:	200001ec 	.word	0x200001ec
 80007f4:	20000018 	.word	0x20000018
 80007f8:	68db8bad 	.word	0x68db8bad
 80007fc:	08003d3c 	.word	0x08003d3c
 8000800:	2000001c 	.word	0x2000001c
		case MAN_YELLOW_MODE:
			sprintf(buffer, "%d ", buffer_duration_time/100);
 8000804:	4b38      	ldr	r3, [pc, #224]	@ (80008e8 <fsm_manual_run+0x42c>)
 8000806:	681b      	ldr	r3, [r3, #0]
 8000808:	4a38      	ldr	r2, [pc, #224]	@ (80008ec <fsm_manual_run+0x430>)
 800080a:	fb82 1203 	smull	r1, r2, r2, r3
 800080e:	1152      	asrs	r2, r2, #5
 8000810:	17db      	asrs	r3, r3, #31
 8000812:	1ad3      	subs	r3, r2, r3
 8000814:	461a      	mov	r2, r3
 8000816:	4936      	ldr	r1, [pc, #216]	@ (80008f0 <fsm_manual_run+0x434>)
 8000818:	4836      	ldr	r0, [pc, #216]	@ (80008f4 <fsm_manual_run+0x438>)
 800081a:	f002 fdbd 	bl	8003398 <siprintf>


			lcd_goto_XY(1, 0);
 800081e:	2100      	movs	r1, #0
 8000820:	2001      	movs	r0, #1
 8000822:	f000 f925 	bl	8000a70 <lcd_goto_XY>
			lcd_send_string("Mode3:MAN_YELLOW");
 8000826:	4834      	ldr	r0, [pc, #208]	@ (80008f8 <fsm_manual_run+0x43c>)
 8000828:	f000 f906 	bl	8000a38 <lcd_send_string>


			lcd_goto_XY(2, 0);
 800082c:	2100      	movs	r1, #0
 800082e:	2002      	movs	r0, #2
 8000830:	f000 f91e 	bl	8000a70 <lcd_goto_XY>
			lcd_send_string("Time");
 8000834:	4831      	ldr	r0, [pc, #196]	@ (80008fc <fsm_manual_run+0x440>)
 8000836:	f000 f8ff 	bl	8000a38 <lcd_send_string>


			lcd_goto_XY(2, 8);
 800083a:	2108      	movs	r1, #8
 800083c:	2002      	movs	r0, #2
 800083e:	f000 f917 	bl	8000a70 <lcd_goto_XY>

			lcd_send_string(buffer);
 8000842:	482c      	ldr	r0, [pc, #176]	@ (80008f4 <fsm_manual_run+0x438>)
 8000844:	f000 f8f8 	bl	8000a38 <lcd_send_string>


			if(timer6_flag == 1){
 8000848:	4b2d      	ldr	r3, [pc, #180]	@ (8000900 <fsm_manual_run+0x444>)
 800084a:	681b      	ldr	r3, [r3, #0]
 800084c:	2b01      	cmp	r3, #1
 800084e:	d106      	bne.n	800085e <fsm_manual_run+0x3a2>
				blinkind_led_traffic_x();
 8000850:	f000 f9b8 	bl	8000bc4 <blinkind_led_traffic_x>
				blinkind_led_traffic_y();
 8000854:	f000 f9e8 	bl	8000c28 <blinkind_led_traffic_y>
				setTimer6(50);
 8000858:	2032      	movs	r0, #50	@ 0x32
 800085a:	f000 fbc1 	bl	8000fe0 <setTimer6>
			}
			if(is_button_pressed(0) == 1){
 800085e:	2000      	movs	r0, #0
 8000860:	f7ff fcb8 	bl	80001d4 <is_button_pressed>
 8000864:	4603      	mov	r3, r0
 8000866:	2b01      	cmp	r3, #1
 8000868:	d111      	bne.n	800088e <fsm_manual_run+0x3d2>
				clearTimer6();
 800086a:	f000 fbf3 	bl	8001054 <clearTimer6>
				status = AUTO_GREEN;
 800086e:	4b25      	ldr	r3, [pc, #148]	@ (8000904 <fsm_manual_run+0x448>)
 8000870:	220c      	movs	r2, #12
 8000872:	601a      	str	r2, [r3, #0]
				status1 = AUTO_GREEN;
 8000874:	4b24      	ldr	r3, [pc, #144]	@ (8000908 <fsm_manual_run+0x44c>)
 8000876:	220c      	movs	r2, #12
 8000878:	601a      	str	r2, [r3, #0]
				setTimer6(50);
 800087a:	2032      	movs	r0, #50	@ 0x32
 800087c:	f000 fbb0 	bl	8000fe0 <setTimer6>
				buffer_duration_time = duration_time_of_AUTO_GREEN;
 8000880:	4b22      	ldr	r3, [pc, #136]	@ (800090c <fsm_manual_run+0x450>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	4a18      	ldr	r2, [pc, #96]	@ (80008e8 <fsm_manual_run+0x42c>)
 8000886:	6013      	str	r3, [r2, #0]
				mode = MAN_GREEN_MODE;
 8000888:	4b21      	ldr	r3, [pc, #132]	@ (8000910 <fsm_manual_run+0x454>)
 800088a:	2204      	movs	r2, #4
 800088c:	601a      	str	r2, [r3, #0]



			}
			if(is_button_pressed(1) == 1){
 800088e:	2001      	movs	r0, #1
 8000890:	f7ff fca0 	bl	80001d4 <is_button_pressed>
 8000894:	4603      	mov	r3, r0
 8000896:	2b01      	cmp	r3, #1
 8000898:	d110      	bne.n	80008bc <fsm_manual_run+0x400>
				buffer_duration_time = (buffer_duration_time + 100) % 10000;
 800089a:	4b13      	ldr	r3, [pc, #76]	@ (80008e8 <fsm_manual_run+0x42c>)
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	f103 0264 	add.w	r2, r3, #100	@ 0x64
 80008a2:	4b1c      	ldr	r3, [pc, #112]	@ (8000914 <fsm_manual_run+0x458>)
 80008a4:	fb83 1302 	smull	r1, r3, r3, r2
 80008a8:	1319      	asrs	r1, r3, #12
 80008aa:	17d3      	asrs	r3, r2, #31
 80008ac:	1acb      	subs	r3, r1, r3
 80008ae:	f242 7110 	movw	r1, #10000	@ 0x2710
 80008b2:	fb01 f303 	mul.w	r3, r1, r3
 80008b6:	1ad3      	subs	r3, r2, r3
 80008b8:	4a0b      	ldr	r2, [pc, #44]	@ (80008e8 <fsm_manual_run+0x42c>)
 80008ba:	6013      	str	r3, [r2, #0]

			}
			if(is_button_pressed(2) == 1){
 80008bc:	2002      	movs	r0, #2
 80008be:	f7ff fc89 	bl	80001d4 <is_button_pressed>
 80008c2:	4603      	mov	r3, r0
 80008c4:	2b01      	cmp	r3, #1
 80008c6:	d10c      	bne.n	80008e2 <fsm_manual_run+0x426>
				duration_time_of_AUTO_YELLOW = buffer_duration_time;
 80008c8:	4b07      	ldr	r3, [pc, #28]	@ (80008e8 <fsm_manual_run+0x42c>)
 80008ca:	681b      	ldr	r3, [r3, #0]
 80008cc:	4a12      	ldr	r2, [pc, #72]	@ (8000918 <fsm_manual_run+0x45c>)
 80008ce:	6013      	str	r3, [r2, #0]
			}

			break;
 80008d0:	e007      	b.n	80008e2 <fsm_manual_run+0x426>
		default:
			break;
 80008d2:	bf00      	nop
 80008d4:	e006      	b.n	80008e4 <fsm_manual_run+0x428>
			break;
 80008d6:	bf00      	nop
 80008d8:	e004      	b.n	80008e4 <fsm_manual_run+0x428>
			break;
 80008da:	bf00      	nop
 80008dc:	e002      	b.n	80008e4 <fsm_manual_run+0x428>
			break;
 80008de:	bf00      	nop
 80008e0:	e000      	b.n	80008e4 <fsm_manual_run+0x428>
			break;
 80008e2:	bf00      	nop
	}
}
 80008e4:	bf00      	nop
 80008e6:	bd80      	pop	{r7, pc}
 80008e8:	20000020 	.word	0x20000020
 80008ec:	51eb851f 	.word	0x51eb851f
 80008f0:	08003d10 	.word	0x08003d10
 80008f4:	20000100 	.word	0x20000100
 80008f8:	08003d50 	.word	0x08003d50
 80008fc:	08003d34 	.word	0x08003d34
 8000900:	200001ec 	.word	0x200001ec
 8000904:	20000120 	.word	0x20000120
 8000908:	20000124 	.word	0x20000124
 800090c:	2000001c 	.word	0x2000001c
 8000910:	20000128 	.word	0x20000128
 8000914:	68db8bad 	.word	0x68db8bad
 8000918:	20000018 	.word	0x20000018

0800091c <lcd_send_cmd>:

#define SLAVE_ADDRESS_LCD (0x21 << 1) // change this according to your setup


void lcd_send_cmd (char cmd)
{
 800091c:	b580      	push	{r7, lr}
 800091e:	b086      	sub	sp, #24
 8000920:	af02      	add	r7, sp, #8
 8000922:	4603      	mov	r3, r0
 8000924:	71fb      	strb	r3, [r7, #7]
  char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 8000926:	79fb      	ldrb	r3, [r7, #7]
 8000928:	f023 030f 	bic.w	r3, r3, #15
 800092c:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 800092e:	79fb      	ldrb	r3, [r7, #7]
 8000930:	011b      	lsls	r3, r3, #4
 8000932:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0
 8000934:	7bfb      	ldrb	r3, [r7, #15]
 8000936:	f043 030c 	orr.w	r3, r3, #12
 800093a:	b2db      	uxtb	r3, r3
 800093c:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0
 800093e:	7bfb      	ldrb	r3, [r7, #15]
 8000940:	f043 0308 	orr.w	r3, r3, #8
 8000944:	b2db      	uxtb	r3, r3
 8000946:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0
 8000948:	7bbb      	ldrb	r3, [r7, #14]
 800094a:	f043 030c 	orr.w	r3, r3, #12
 800094e:	b2db      	uxtb	r3, r3
 8000950:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0
 8000952:	7bbb      	ldrb	r3, [r7, #14]
 8000954:	f043 0308 	orr.w	r3, r3, #8
 8000958:	b2db      	uxtb	r3, r3
 800095a:	72fb      	strb	r3, [r7, #11]

	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 800095c:	f107 0208 	add.w	r2, r7, #8
 8000960:	2364      	movs	r3, #100	@ 0x64
 8000962:	9300      	str	r3, [sp, #0]
 8000964:	2304      	movs	r3, #4
 8000966:	2142      	movs	r1, #66	@ 0x42
 8000968:	4803      	ldr	r0, [pc, #12]	@ (8000978 <lcd_send_cmd+0x5c>)
 800096a:	f001 f9cf 	bl	8001d0c <HAL_I2C_Master_Transmit>
}
 800096e:	bf00      	nop
 8000970:	3710      	adds	r7, #16
 8000972:	46bd      	mov	sp, r7
 8000974:	bd80      	pop	{r7, pc}
 8000976:	bf00      	nop
 8000978:	2000012c 	.word	0x2000012c

0800097c <lcd_send_data>:

void lcd_send_data (char data)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	b086      	sub	sp, #24
 8000980:	af02      	add	r7, sp, #8
 8000982:	4603      	mov	r3, r0
 8000984:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 8000986:	79fb      	ldrb	r3, [r7, #7]
 8000988:	f023 030f 	bic.w	r3, r3, #15
 800098c:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 800098e:	79fb      	ldrb	r3, [r7, #7]
 8000990:	011b      	lsls	r3, r3, #4
 8000992:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=0
 8000994:	7bfb      	ldrb	r3, [r7, #15]
 8000996:	f043 030d 	orr.w	r3, r3, #13
 800099a:	b2db      	uxtb	r3, r3
 800099c:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=0
 800099e:	7bfb      	ldrb	r3, [r7, #15]
 80009a0:	f043 0309 	orr.w	r3, r3, #9
 80009a4:	b2db      	uxtb	r3, r3
 80009a6:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=0
 80009a8:	7bbb      	ldrb	r3, [r7, #14]
 80009aa:	f043 030d 	orr.w	r3, r3, #13
 80009ae:	b2db      	uxtb	r3, r3
 80009b0:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=0
 80009b2:	7bbb      	ldrb	r3, [r7, #14]
 80009b4:	f043 0309 	orr.w	r3, r3, #9
 80009b8:	b2db      	uxtb	r3, r3
 80009ba:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 80009bc:	f107 0208 	add.w	r2, r7, #8
 80009c0:	2364      	movs	r3, #100	@ 0x64
 80009c2:	9300      	str	r3, [sp, #0]
 80009c4:	2304      	movs	r3, #4
 80009c6:	2142      	movs	r1, #66	@ 0x42
 80009c8:	4803      	ldr	r0, [pc, #12]	@ (80009d8 <lcd_send_data+0x5c>)
 80009ca:	f001 f99f 	bl	8001d0c <HAL_I2C_Master_Transmit>
}
 80009ce:	bf00      	nop
 80009d0:	3710      	adds	r7, #16
 80009d2:	46bd      	mov	sp, r7
 80009d4:	bd80      	pop	{r7, pc}
 80009d6:	bf00      	nop
 80009d8:	2000012c 	.word	0x2000012c

080009dc <lcd_init>:

void lcd_init (void) {
 80009dc:	b580      	push	{r7, lr}
 80009de:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x33); /* set 4-bits interface */
 80009e0:	2033      	movs	r0, #51	@ 0x33
 80009e2:	f7ff ff9b 	bl	800091c <lcd_send_cmd>
	lcd_send_cmd (0x32);
 80009e6:	2032      	movs	r0, #50	@ 0x32
 80009e8:	f7ff ff98 	bl	800091c <lcd_send_cmd>
	HAL_Delay(50);
 80009ec:	2032      	movs	r0, #50	@ 0x32
 80009ee:	f000 fd4b 	bl	8001488 <HAL_Delay>
	lcd_send_cmd (0x28); /* start to set LCD function */
 80009f2:	2028      	movs	r0, #40	@ 0x28
 80009f4:	f7ff ff92 	bl	800091c <lcd_send_cmd>
	HAL_Delay(50);
 80009f8:	2032      	movs	r0, #50	@ 0x32
 80009fa:	f000 fd45 	bl	8001488 <HAL_Delay>
	lcd_send_cmd (0x01); /* clear display */
 80009fe:	2001      	movs	r0, #1
 8000a00:	f7ff ff8c 	bl	800091c <lcd_send_cmd>
	HAL_Delay(50);
 8000a04:	2032      	movs	r0, #50	@ 0x32
 8000a06:	f000 fd3f 	bl	8001488 <HAL_Delay>
	lcd_send_cmd (0x06); /* set entry mode */
 8000a0a:	2006      	movs	r0, #6
 8000a0c:	f7ff ff86 	bl	800091c <lcd_send_cmd>
	HAL_Delay(50);
 8000a10:	2032      	movs	r0, #50	@ 0x32
 8000a12:	f000 fd39 	bl	8001488 <HAL_Delay>
	lcd_send_cmd (0x0c); /* set display to on */
 8000a16:	200c      	movs	r0, #12
 8000a18:	f7ff ff80 	bl	800091c <lcd_send_cmd>
	HAL_Delay(50);
 8000a1c:	2032      	movs	r0, #50	@ 0x32
 8000a1e:	f000 fd33 	bl	8001488 <HAL_Delay>
	lcd_send_cmd (0x02); /* move cursor to home and set data address to 0 */
 8000a22:	2002      	movs	r0, #2
 8000a24:	f7ff ff7a 	bl	800091c <lcd_send_cmd>
	HAL_Delay(50);
 8000a28:	2032      	movs	r0, #50	@ 0x32
 8000a2a:	f000 fd2d 	bl	8001488 <HAL_Delay>
	lcd_send_cmd (0x80);
 8000a2e:	2080      	movs	r0, #128	@ 0x80
 8000a30:	f7ff ff74 	bl	800091c <lcd_send_cmd>
}
 8000a34:	bf00      	nop
 8000a36:	bd80      	pop	{r7, pc}

08000a38 <lcd_send_string>:

void lcd_send_string (char *str)
{
 8000a38:	b580      	push	{r7, lr}
 8000a3a:	b082      	sub	sp, #8
 8000a3c:	af00      	add	r7, sp, #0
 8000a3e:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 8000a40:	e006      	b.n	8000a50 <lcd_send_string+0x18>
 8000a42:	687b      	ldr	r3, [r7, #4]
 8000a44:	1c5a      	adds	r2, r3, #1
 8000a46:	607a      	str	r2, [r7, #4]
 8000a48:	781b      	ldrb	r3, [r3, #0]
 8000a4a:	4618      	mov	r0, r3
 8000a4c:	f7ff ff96 	bl	800097c <lcd_send_data>
 8000a50:	687b      	ldr	r3, [r7, #4]
 8000a52:	781b      	ldrb	r3, [r3, #0]
 8000a54:	2b00      	cmp	r3, #0
 8000a56:	d1f4      	bne.n	8000a42 <lcd_send_string+0xa>
}
 8000a58:	bf00      	nop
 8000a5a:	bf00      	nop
 8000a5c:	3708      	adds	r7, #8
 8000a5e:	46bd      	mov	sp, r7
 8000a60:	bd80      	pop	{r7, pc}

08000a62 <lcd_clear_display>:

void lcd_clear_display (void)
{
 8000a62:	b580      	push	{r7, lr}
 8000a64:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x01); //clear display
 8000a66:	2001      	movs	r0, #1
 8000a68:	f7ff ff58 	bl	800091c <lcd_send_cmd>
}
 8000a6c:	bf00      	nop
 8000a6e:	bd80      	pop	{r7, pc}

08000a70 <lcd_goto_XY>:

void lcd_goto_XY (int row, int col)
{
 8000a70:	b580      	push	{r7, lr}
 8000a72:	b084      	sub	sp, #16
 8000a74:	af00      	add	r7, sp, #0
 8000a76:	6078      	str	r0, [r7, #4]
 8000a78:	6039      	str	r1, [r7, #0]
	uint8_t pos_Addr;
	if(row == 1)
 8000a7a:	687b      	ldr	r3, [r7, #4]
 8000a7c:	2b01      	cmp	r3, #1
 8000a7e:	d108      	bne.n	8000a92 <lcd_goto_XY+0x22>
	{
		pos_Addr = 0x80 + row - 1 + col;
 8000a80:	687b      	ldr	r3, [r7, #4]
 8000a82:	b2da      	uxtb	r2, r3
 8000a84:	683b      	ldr	r3, [r7, #0]
 8000a86:	b2db      	uxtb	r3, r3
 8000a88:	4413      	add	r3, r2
 8000a8a:	b2db      	uxtb	r3, r3
 8000a8c:	337f      	adds	r3, #127	@ 0x7f
 8000a8e:	73fb      	strb	r3, [r7, #15]
 8000a90:	e008      	b.n	8000aa4 <lcd_goto_XY+0x34>
	}
	else
	{
		pos_Addr = 0x80 | (0x40 + col);
 8000a92:	683b      	ldr	r3, [r7, #0]
 8000a94:	b2db      	uxtb	r3, r3
 8000a96:	3340      	adds	r3, #64	@ 0x40
 8000a98:	b2db      	uxtb	r3, r3
 8000a9a:	b25b      	sxtb	r3, r3
 8000a9c:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8000aa0:	b25b      	sxtb	r3, r3
 8000aa2:	73fb      	strb	r3, [r7, #15]
	}
	lcd_send_cmd(pos_Addr);
 8000aa4:	7bfb      	ldrb	r3, [r7, #15]
 8000aa6:	4618      	mov	r0, r3
 8000aa8:	f7ff ff38 	bl	800091c <lcd_send_cmd>
}
 8000aac:	bf00      	nop
 8000aae:	3710      	adds	r7, #16
 8000ab0:	46bd      	mov	sp, r7
 8000ab2:	bd80      	pop	{r7, pc}

08000ab4 <state_init>:
#include "led_states.h"
#include "global.h"



void state_init(){
 8000ab4:	b580      	push	{r7, lr}
 8000ab6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, D3_Pin, 0);
 8000ab8:	2200      	movs	r2, #0
 8000aba:	2108      	movs	r1, #8
 8000abc:	4804      	ldr	r0, [pc, #16]	@ (8000ad0 <state_init+0x1c>)
 8000abe:	f000 ffb0 	bl	8001a22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, D4_Pin, 0);
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	2120      	movs	r1, #32
 8000ac6:	4802      	ldr	r0, [pc, #8]	@ (8000ad0 <state_init+0x1c>)
 8000ac8:	f000 ffab 	bl	8001a22 <HAL_GPIO_WritePin>
}
 8000acc:	bf00      	nop
 8000ace:	bd80      	pop	{r7, pc}
 8000ad0:	40010c00 	.word	0x40010c00

08000ad4 <state_red>:

void state_red(){
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, D3_Pin, 1);
 8000ad8:	2201      	movs	r2, #1
 8000ada:	2108      	movs	r1, #8
 8000adc:	4804      	ldr	r0, [pc, #16]	@ (8000af0 <state_red+0x1c>)
 8000ade:	f000 ffa0 	bl	8001a22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, D4_Pin, 1);
 8000ae2:	2201      	movs	r2, #1
 8000ae4:	2120      	movs	r1, #32
 8000ae6:	4802      	ldr	r0, [pc, #8]	@ (8000af0 <state_red+0x1c>)
 8000ae8:	f000 ff9b 	bl	8001a22 <HAL_GPIO_WritePin>
}
 8000aec:	bf00      	nop
 8000aee:	bd80      	pop	{r7, pc}
 8000af0:	40010c00 	.word	0x40010c00

08000af4 <state_green>:

void state_green(){
 8000af4:	b580      	push	{r7, lr}
 8000af6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, D3_Pin, 1);
 8000af8:	2201      	movs	r2, #1
 8000afa:	2108      	movs	r1, #8
 8000afc:	4804      	ldr	r0, [pc, #16]	@ (8000b10 <state_green+0x1c>)
 8000afe:	f000 ff90 	bl	8001a22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, D4_Pin, 0);
 8000b02:	2200      	movs	r2, #0
 8000b04:	2120      	movs	r1, #32
 8000b06:	4802      	ldr	r0, [pc, #8]	@ (8000b10 <state_green+0x1c>)
 8000b08:	f000 ff8b 	bl	8001a22 <HAL_GPIO_WritePin>


}
 8000b0c:	bf00      	nop
 8000b0e:	bd80      	pop	{r7, pc}
 8000b10:	40010c00 	.word	0x40010c00

08000b14 <state_yellow>:

void state_yellow(){
 8000b14:	b580      	push	{r7, lr}
 8000b16:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, D3_Pin, 0);
 8000b18:	2200      	movs	r2, #0
 8000b1a:	2108      	movs	r1, #8
 8000b1c:	4804      	ldr	r0, [pc, #16]	@ (8000b30 <state_yellow+0x1c>)
 8000b1e:	f000 ff80 	bl	8001a22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, D4_Pin, 1);
 8000b22:	2201      	movs	r2, #1
 8000b24:	2120      	movs	r1, #32
 8000b26:	4802      	ldr	r0, [pc, #8]	@ (8000b30 <state_yellow+0x1c>)
 8000b28:	f000 ff7b 	bl	8001a22 <HAL_GPIO_WritePin>
}
 8000b2c:	bf00      	nop
 8000b2e:	bd80      	pop	{r7, pc}
 8000b30:	40010c00 	.word	0x40010c00

08000b34 <state_init1>:


void state_init1(){
 8000b34:	b580      	push	{r7, lr}
 8000b36:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, D5_Pin, 0);
 8000b38:	2200      	movs	r2, #0
 8000b3a:	2110      	movs	r1, #16
 8000b3c:	4805      	ldr	r0, [pc, #20]	@ (8000b54 <state_init1+0x20>)
 8000b3e:	f000 ff70 	bl	8001a22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, D6_Pin, 0);
 8000b42:	2200      	movs	r2, #0
 8000b44:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000b48:	4802      	ldr	r0, [pc, #8]	@ (8000b54 <state_init1+0x20>)
 8000b4a:	f000 ff6a 	bl	8001a22 <HAL_GPIO_WritePin>
}
 8000b4e:	bf00      	nop
 8000b50:	bd80      	pop	{r7, pc}
 8000b52:	bf00      	nop
 8000b54:	40010c00 	.word	0x40010c00

08000b58 <state_red1>:


void state_red1(){
 8000b58:	b580      	push	{r7, lr}
 8000b5a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, D5_Pin, 1);
 8000b5c:	2201      	movs	r2, #1
 8000b5e:	2110      	movs	r1, #16
 8000b60:	4805      	ldr	r0, [pc, #20]	@ (8000b78 <state_red1+0x20>)
 8000b62:	f000 ff5e 	bl	8001a22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, D6_Pin, 1);
 8000b66:	2201      	movs	r2, #1
 8000b68:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000b6c:	4802      	ldr	r0, [pc, #8]	@ (8000b78 <state_red1+0x20>)
 8000b6e:	f000 ff58 	bl	8001a22 <HAL_GPIO_WritePin>
}
 8000b72:	bf00      	nop
 8000b74:	bd80      	pop	{r7, pc}
 8000b76:	bf00      	nop
 8000b78:	40010c00 	.word	0x40010c00

08000b7c <state_green1>:
void state_green1(){
 8000b7c:	b580      	push	{r7, lr}
 8000b7e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, D5_Pin, 1);
 8000b80:	2201      	movs	r2, #1
 8000b82:	2110      	movs	r1, #16
 8000b84:	4805      	ldr	r0, [pc, #20]	@ (8000b9c <state_green1+0x20>)
 8000b86:	f000 ff4c 	bl	8001a22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, D6_Pin, 0);
 8000b8a:	2200      	movs	r2, #0
 8000b8c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000b90:	4802      	ldr	r0, [pc, #8]	@ (8000b9c <state_green1+0x20>)
 8000b92:	f000 ff46 	bl	8001a22 <HAL_GPIO_WritePin>
}
 8000b96:	bf00      	nop
 8000b98:	bd80      	pop	{r7, pc}
 8000b9a:	bf00      	nop
 8000b9c:	40010c00 	.word	0x40010c00

08000ba0 <state_yellow1>:
void state_yellow1(){
 8000ba0:	b580      	push	{r7, lr}
 8000ba2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOB, D5_Pin, 0);
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	2110      	movs	r1, #16
 8000ba8:	4805      	ldr	r0, [pc, #20]	@ (8000bc0 <state_yellow1+0x20>)
 8000baa:	f000 ff3a 	bl	8001a22 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, D6_Pin, 1);
 8000bae:	2201      	movs	r2, #1
 8000bb0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000bb4:	4802      	ldr	r0, [pc, #8]	@ (8000bc0 <state_yellow1+0x20>)
 8000bb6:	f000 ff34 	bl	8001a22 <HAL_GPIO_WritePin>
}
 8000bba:	bf00      	nop
 8000bbc:	bd80      	pop	{r7, pc}
 8000bbe:	bf00      	nop
 8000bc0:	40010c00 	.word	0x40010c00

08000bc4 <blinkind_led_traffic_x>:

void blinkind_led_traffic_x(){
 8000bc4:	b580      	push	{r7, lr}
 8000bc6:	af00      	add	r7, sp, #0
	switch(status){
 8000bc8:	4b15      	ldr	r3, [pc, #84]	@ (8000c20 <blinkind_led_traffic_x+0x5c>)
 8000bca:	681b      	ldr	r3, [r3, #0]
 8000bcc:	2b0d      	cmp	r3, #13
 8000bce:	d00f      	beq.n	8000bf0 <blinkind_led_traffic_x+0x2c>
 8000bd0:	2b0d      	cmp	r3, #13
 8000bd2:	dc21      	bgt.n	8000c18 <blinkind_led_traffic_x+0x54>
 8000bd4:	2b0b      	cmp	r3, #11
 8000bd6:	d002      	beq.n	8000bde <blinkind_led_traffic_x+0x1a>
 8000bd8:	2b0c      	cmp	r3, #12
 8000bda:	d013      	beq.n	8000c04 <blinkind_led_traffic_x+0x40>
		case AUTO_GREEN:
			HAL_GPIO_WritePin(GPIOB, D4_Pin, 0);
			HAL_GPIO_TogglePin(GPIOB, D3_Pin);
			break;
		default:
			break;
 8000bdc:	e01c      	b.n	8000c18 <blinkind_led_traffic_x+0x54>
			HAL_GPIO_TogglePin(GPIOB, D3_Pin);
 8000bde:	2108      	movs	r1, #8
 8000be0:	4810      	ldr	r0, [pc, #64]	@ (8000c24 <blinkind_led_traffic_x+0x60>)
 8000be2:	f000 ff36 	bl	8001a52 <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(GPIOB, D4_Pin);
 8000be6:	2120      	movs	r1, #32
 8000be8:	480e      	ldr	r0, [pc, #56]	@ (8000c24 <blinkind_led_traffic_x+0x60>)
 8000bea:	f000 ff32 	bl	8001a52 <HAL_GPIO_TogglePin>
			break;
 8000bee:	e014      	b.n	8000c1a <blinkind_led_traffic_x+0x56>
			HAL_GPIO_WritePin(GPIOB, D3_Pin, 0);
 8000bf0:	2200      	movs	r2, #0
 8000bf2:	2108      	movs	r1, #8
 8000bf4:	480b      	ldr	r0, [pc, #44]	@ (8000c24 <blinkind_led_traffic_x+0x60>)
 8000bf6:	f000 ff14 	bl	8001a22 <HAL_GPIO_WritePin>
			HAL_GPIO_TogglePin(GPIOB, D4_Pin);
 8000bfa:	2120      	movs	r1, #32
 8000bfc:	4809      	ldr	r0, [pc, #36]	@ (8000c24 <blinkind_led_traffic_x+0x60>)
 8000bfe:	f000 ff28 	bl	8001a52 <HAL_GPIO_TogglePin>
			break;
 8000c02:	e00a      	b.n	8000c1a <blinkind_led_traffic_x+0x56>
			HAL_GPIO_WritePin(GPIOB, D4_Pin, 0);
 8000c04:	2200      	movs	r2, #0
 8000c06:	2120      	movs	r1, #32
 8000c08:	4806      	ldr	r0, [pc, #24]	@ (8000c24 <blinkind_led_traffic_x+0x60>)
 8000c0a:	f000 ff0a 	bl	8001a22 <HAL_GPIO_WritePin>
			HAL_GPIO_TogglePin(GPIOB, D3_Pin);
 8000c0e:	2108      	movs	r1, #8
 8000c10:	4804      	ldr	r0, [pc, #16]	@ (8000c24 <blinkind_led_traffic_x+0x60>)
 8000c12:	f000 ff1e 	bl	8001a52 <HAL_GPIO_TogglePin>
			break;
 8000c16:	e000      	b.n	8000c1a <blinkind_led_traffic_x+0x56>
			break;
 8000c18:	bf00      	nop
		}
}
 8000c1a:	bf00      	nop
 8000c1c:	bd80      	pop	{r7, pc}
 8000c1e:	bf00      	nop
 8000c20:	20000120 	.word	0x20000120
 8000c24:	40010c00 	.word	0x40010c00

08000c28 <blinkind_led_traffic_y>:

void blinkind_led_traffic_y(){
 8000c28:	b580      	push	{r7, lr}
 8000c2a:	af00      	add	r7, sp, #0
	switch(status1){
 8000c2c:	4b16      	ldr	r3, [pc, #88]	@ (8000c88 <blinkind_led_traffic_y+0x60>)
 8000c2e:	681b      	ldr	r3, [r3, #0]
 8000c30:	2b0d      	cmp	r3, #13
 8000c32:	d010      	beq.n	8000c56 <blinkind_led_traffic_y+0x2e>
 8000c34:	2b0d      	cmp	r3, #13
 8000c36:	dc24      	bgt.n	8000c82 <blinkind_led_traffic_y+0x5a>
 8000c38:	2b0b      	cmp	r3, #11
 8000c3a:	d002      	beq.n	8000c42 <blinkind_led_traffic_y+0x1a>
 8000c3c:	2b0c      	cmp	r3, #12
 8000c3e:	d015      	beq.n	8000c6c <blinkind_led_traffic_y+0x44>
			case AUTO_GREEN:
				HAL_GPIO_WritePin(GPIOB, D6_Pin, 0);
				HAL_GPIO_TogglePin(GPIOB, D5_Pin);
			break;
			default:
			break;
 8000c40:	e01f      	b.n	8000c82 <blinkind_led_traffic_y+0x5a>
				HAL_GPIO_TogglePin(GPIOB, D5_Pin);
 8000c42:	2110      	movs	r1, #16
 8000c44:	4811      	ldr	r0, [pc, #68]	@ (8000c8c <blinkind_led_traffic_y+0x64>)
 8000c46:	f000 ff04 	bl	8001a52 <HAL_GPIO_TogglePin>
				HAL_GPIO_TogglePin(GPIOB, D6_Pin);
 8000c4a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000c4e:	480f      	ldr	r0, [pc, #60]	@ (8000c8c <blinkind_led_traffic_y+0x64>)
 8000c50:	f000 feff 	bl	8001a52 <HAL_GPIO_TogglePin>
			break;
 8000c54:	e016      	b.n	8000c84 <blinkind_led_traffic_y+0x5c>
				HAL_GPIO_WritePin(GPIOB, D5_Pin, 0);
 8000c56:	2200      	movs	r2, #0
 8000c58:	2110      	movs	r1, #16
 8000c5a:	480c      	ldr	r0, [pc, #48]	@ (8000c8c <blinkind_led_traffic_y+0x64>)
 8000c5c:	f000 fee1 	bl	8001a22 <HAL_GPIO_WritePin>
				HAL_GPIO_TogglePin(GPIOB, D6_Pin);
 8000c60:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000c64:	4809      	ldr	r0, [pc, #36]	@ (8000c8c <blinkind_led_traffic_y+0x64>)
 8000c66:	f000 fef4 	bl	8001a52 <HAL_GPIO_TogglePin>
			break;
 8000c6a:	e00b      	b.n	8000c84 <blinkind_led_traffic_y+0x5c>
				HAL_GPIO_WritePin(GPIOB, D6_Pin, 0);
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8000c72:	4806      	ldr	r0, [pc, #24]	@ (8000c8c <blinkind_led_traffic_y+0x64>)
 8000c74:	f000 fed5 	bl	8001a22 <HAL_GPIO_WritePin>
				HAL_GPIO_TogglePin(GPIOB, D5_Pin);
 8000c78:	2110      	movs	r1, #16
 8000c7a:	4804      	ldr	r0, [pc, #16]	@ (8000c8c <blinkind_led_traffic_y+0x64>)
 8000c7c:	f000 fee9 	bl	8001a52 <HAL_GPIO_TogglePin>
			break;
 8000c80:	e000      	b.n	8000c84 <blinkind_led_traffic_y+0x5c>
			break;
 8000c82:	bf00      	nop
		}
}
 8000c84:	bf00      	nop
 8000c86:	bd80      	pop	{r7, pc}
 8000c88:	20000124 	.word	0x20000124
 8000c8c:	40010c00 	.word	0x40010c00

08000c90 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000c90:	b580      	push	{r7, lr}
 8000c92:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000c94:	f000 fb96 	bl	80013c4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000c98:	f000 f810 	bl	8000cbc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000c9c:	f000 f8ca 	bl	8000e34 <MX_GPIO_Init>
  MX_TIM2_Init();
 8000ca0:	f000 f87c 	bl	8000d9c <MX_TIM2_Init>
  MX_I2C1_Init();
 8000ca4:	f000 f84c 	bl	8000d40 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000ca8:	4803      	ldr	r0, [pc, #12]	@ (8000cb8 <main+0x28>)
 8000caa:	f001 ffd3 	bl	8002c54 <HAL_TIM_Base_Start_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  fsm_manual_run();
 8000cae:	f7ff fc05 	bl	80004bc <fsm_manual_run>
  {
 8000cb2:	bf00      	nop
 8000cb4:	e7fb      	b.n	8000cae <main+0x1e>
 8000cb6:	bf00      	nop
 8000cb8:	20000180 	.word	0x20000180

08000cbc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000cbc:	b580      	push	{r7, lr}
 8000cbe:	b090      	sub	sp, #64	@ 0x40
 8000cc0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000cc2:	f107 0318 	add.w	r3, r7, #24
 8000cc6:	2228      	movs	r2, #40	@ 0x28
 8000cc8:	2100      	movs	r1, #0
 8000cca:	4618      	mov	r0, r3
 8000ccc:	f002 fb84 	bl	80033d8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000cd0:	1d3b      	adds	r3, r7, #4
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	601a      	str	r2, [r3, #0]
 8000cd6:	605a      	str	r2, [r3, #4]
 8000cd8:	609a      	str	r2, [r3, #8]
 8000cda:	60da      	str	r2, [r3, #12]
 8000cdc:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000cde:	2302      	movs	r3, #2
 8000ce0:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000ce2:	2301      	movs	r3, #1
 8000ce4:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ce6:	2310      	movs	r3, #16
 8000ce8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000cea:	2302      	movs	r3, #2
 8000cec:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000cee:	2300      	movs	r3, #0
 8000cf0:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000cf2:	f44f 1360 	mov.w	r3, #3670016	@ 0x380000
 8000cf6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000cf8:	f107 0318 	add.w	r3, r7, #24
 8000cfc:	4618      	mov	r0, r3
 8000cfe:	f001 fb5d 	bl	80023bc <HAL_RCC_OscConfig>
 8000d02:	4603      	mov	r3, r0
 8000d04:	2b00      	cmp	r3, #0
 8000d06:	d001      	beq.n	8000d0c <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000d08:	f000 f916 	bl	8000f38 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000d0c:	230f      	movs	r3, #15
 8000d0e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000d10:	2302      	movs	r3, #2
 8000d12:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000d14:	2300      	movs	r3, #0
 8000d16:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000d18:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000d1c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000d1e:	2300      	movs	r3, #0
 8000d20:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000d22:	1d3b      	adds	r3, r7, #4
 8000d24:	2102      	movs	r1, #2
 8000d26:	4618      	mov	r0, r3
 8000d28:	f001 fdca 	bl	80028c0 <HAL_RCC_ClockConfig>
 8000d2c:	4603      	mov	r3, r0
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d001      	beq.n	8000d36 <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000d32:	f000 f901 	bl	8000f38 <Error_Handler>
  }
}
 8000d36:	bf00      	nop
 8000d38:	3740      	adds	r7, #64	@ 0x40
 8000d3a:	46bd      	mov	sp, r7
 8000d3c:	bd80      	pop	{r7, pc}
	...

08000d40 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000d40:	b580      	push	{r7, lr}
 8000d42:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000d44:	4b12      	ldr	r3, [pc, #72]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d46:	4a13      	ldr	r2, [pc, #76]	@ (8000d94 <MX_I2C1_Init+0x54>)
 8000d48:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8000d4a:	4b11      	ldr	r3, [pc, #68]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d4c:	4a12      	ldr	r2, [pc, #72]	@ (8000d98 <MX_I2C1_Init+0x58>)
 8000d4e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000d50:	4b0f      	ldr	r3, [pc, #60]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d52:	2200      	movs	r2, #0
 8000d54:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000d56:	4b0e      	ldr	r3, [pc, #56]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d58:	2200      	movs	r2, #0
 8000d5a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d5c:	4b0c      	ldr	r3, [pc, #48]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d5e:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000d62:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000d64:	4b0a      	ldr	r3, [pc, #40]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d66:	2200      	movs	r2, #0
 8000d68:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000d6a:	4b09      	ldr	r3, [pc, #36]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d6c:	2200      	movs	r2, #0
 8000d6e:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000d70:	4b07      	ldr	r3, [pc, #28]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d72:	2200      	movs	r2, #0
 8000d74:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d76:	4b06      	ldr	r3, [pc, #24]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d78:	2200      	movs	r2, #0
 8000d7a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000d7c:	4804      	ldr	r0, [pc, #16]	@ (8000d90 <MX_I2C1_Init+0x50>)
 8000d7e:	f000 fe81 	bl	8001a84 <HAL_I2C_Init>
 8000d82:	4603      	mov	r3, r0
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	d001      	beq.n	8000d8c <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000d88:	f000 f8d6 	bl	8000f38 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000d8c:	bf00      	nop
 8000d8e:	bd80      	pop	{r7, pc}
 8000d90:	2000012c 	.word	0x2000012c
 8000d94:	40005400 	.word	0x40005400
 8000d98:	000186a0 	.word	0x000186a0

08000d9c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000d9c:	b580      	push	{r7, lr}
 8000d9e:	b086      	sub	sp, #24
 8000da0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000da2:	f107 0308 	add.w	r3, r7, #8
 8000da6:	2200      	movs	r2, #0
 8000da8:	601a      	str	r2, [r3, #0]
 8000daa:	605a      	str	r2, [r3, #4]
 8000dac:	609a      	str	r2, [r3, #8]
 8000dae:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000db0:	463b      	mov	r3, r7
 8000db2:	2200      	movs	r2, #0
 8000db4:	601a      	str	r2, [r3, #0]
 8000db6:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000db8:	4b1d      	ldr	r3, [pc, #116]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000dba:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000dbe:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 63999;
 8000dc0:	4b1b      	ldr	r3, [pc, #108]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000dc2:	f64f 12ff 	movw	r2, #63999	@ 0xf9ff
 8000dc6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000dc8:	4b19      	ldr	r3, [pc, #100]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000dca:	2200      	movs	r2, #0
 8000dcc:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8000dce:	4b18      	ldr	r3, [pc, #96]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000dd0:	2209      	movs	r2, #9
 8000dd2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000dd4:	4b16      	ldr	r3, [pc, #88]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000dd6:	2200      	movs	r2, #0
 8000dd8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000dda:	4b15      	ldr	r3, [pc, #84]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000ddc:	2200      	movs	r2, #0
 8000dde:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000de0:	4813      	ldr	r0, [pc, #76]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000de2:	f001 fee7 	bl	8002bb4 <HAL_TIM_Base_Init>
 8000de6:	4603      	mov	r3, r0
 8000de8:	2b00      	cmp	r3, #0
 8000dea:	d001      	beq.n	8000df0 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000dec:	f000 f8a4 	bl	8000f38 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000df0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000df4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000df6:	f107 0308 	add.w	r3, r7, #8
 8000dfa:	4619      	mov	r1, r3
 8000dfc:	480c      	ldr	r0, [pc, #48]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000dfe:	f002 f86b 	bl	8002ed8 <HAL_TIM_ConfigClockSource>
 8000e02:	4603      	mov	r3, r0
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	d001      	beq.n	8000e0c <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000e08:	f000 f896 	bl	8000f38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000e10:	2300      	movs	r3, #0
 8000e12:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000e14:	463b      	mov	r3, r7
 8000e16:	4619      	mov	r1, r3
 8000e18:	4805      	ldr	r0, [pc, #20]	@ (8000e30 <MX_TIM2_Init+0x94>)
 8000e1a:	f002 fa4d 	bl	80032b8 <HAL_TIMEx_MasterConfigSynchronization>
 8000e1e:	4603      	mov	r3, r0
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	d001      	beq.n	8000e28 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000e24:	f000 f888 	bl	8000f38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000e28:	bf00      	nop
 8000e2a:	3718      	adds	r7, #24
 8000e2c:	46bd      	mov	sp, r7
 8000e2e:	bd80      	pop	{r7, pc}
 8000e30:	20000180 	.word	0x20000180

08000e34 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000e34:	b580      	push	{r7, lr}
 8000e36:	b088      	sub	sp, #32
 8000e38:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e3a:	f107 0310 	add.w	r3, r7, #16
 8000e3e:	2200      	movs	r2, #0
 8000e40:	601a      	str	r2, [r3, #0]
 8000e42:	605a      	str	r2, [r3, #4]
 8000e44:	609a      	str	r2, [r3, #8]
 8000e46:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e48:	4b31      	ldr	r3, [pc, #196]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e4a:	699b      	ldr	r3, [r3, #24]
 8000e4c:	4a30      	ldr	r2, [pc, #192]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e4e:	f043 0308 	orr.w	r3, r3, #8
 8000e52:	6193      	str	r3, [r2, #24]
 8000e54:	4b2e      	ldr	r3, [pc, #184]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e56:	699b      	ldr	r3, [r3, #24]
 8000e58:	f003 0308 	and.w	r3, r3, #8
 8000e5c:	60fb      	str	r3, [r7, #12]
 8000e5e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000e60:	4b2b      	ldr	r3, [pc, #172]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e62:	699b      	ldr	r3, [r3, #24]
 8000e64:	4a2a      	ldr	r2, [pc, #168]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e66:	f043 0310 	orr.w	r3, r3, #16
 8000e6a:	6193      	str	r3, [r2, #24]
 8000e6c:	4b28      	ldr	r3, [pc, #160]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e6e:	699b      	ldr	r3, [r3, #24]
 8000e70:	f003 0310 	and.w	r3, r3, #16
 8000e74:	60bb      	str	r3, [r7, #8]
 8000e76:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e78:	4b25      	ldr	r3, [pc, #148]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e7a:	699b      	ldr	r3, [r3, #24]
 8000e7c:	4a24      	ldr	r2, [pc, #144]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e7e:	f043 0304 	orr.w	r3, r3, #4
 8000e82:	6193      	str	r3, [r2, #24]
 8000e84:	4b22      	ldr	r3, [pc, #136]	@ (8000f10 <MX_GPIO_Init+0xdc>)
 8000e86:	699b      	ldr	r3, [r3, #24]
 8000e88:	f003 0304 	and.w	r3, r3, #4
 8000e8c:	607b      	str	r3, [r7, #4]
 8000e8e:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, D6_Pin|D3_Pin|D5_Pin|D4_Pin, GPIO_PIN_RESET);
 8000e90:	2200      	movs	r2, #0
 8000e92:	f44f 6187 	mov.w	r1, #1080	@ 0x438
 8000e96:	481f      	ldr	r0, [pc, #124]	@ (8000f14 <MX_GPIO_Init+0xe0>)
 8000e98:	f000 fdc3 	bl	8001a22 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : D6_Pin D3_Pin D5_Pin D4_Pin */
  GPIO_InitStruct.Pin = D6_Pin|D3_Pin|D5_Pin|D4_Pin;
 8000e9c:	f44f 6387 	mov.w	r3, #1080	@ 0x438
 8000ea0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ea2:	2301      	movs	r3, #1
 8000ea4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000eaa:	2302      	movs	r3, #2
 8000eac:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000eae:	f107 0310 	add.w	r3, r7, #16
 8000eb2:	4619      	mov	r1, r3
 8000eb4:	4817      	ldr	r0, [pc, #92]	@ (8000f14 <MX_GPIO_Init+0xe0>)
 8000eb6:	f000 fc19 	bl	80016ec <HAL_GPIO_Init>

  /*Configure GPIO pin : A2_Pin */
  GPIO_InitStruct.Pin = A2_Pin;
 8000eba:	2380      	movs	r3, #128	@ 0x80
 8000ebc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000ebe:	2300      	movs	r3, #0
 8000ec0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000ec2:	2301      	movs	r3, #1
 8000ec4:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(A2_GPIO_Port, &GPIO_InitStruct);
 8000ec6:	f107 0310 	add.w	r3, r7, #16
 8000eca:	4619      	mov	r1, r3
 8000ecc:	4812      	ldr	r0, [pc, #72]	@ (8000f18 <MX_GPIO_Init+0xe4>)
 8000ece:	f000 fc0d 	bl	80016ec <HAL_GPIO_Init>

  /*Configure GPIO pin : A0_Pin */
  GPIO_InitStruct.Pin = A0_Pin;
 8000ed2:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000ed6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000ed8:	2300      	movs	r3, #0
 8000eda:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000edc:	2301      	movs	r3, #1
 8000ede:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(A0_GPIO_Port, &GPIO_InitStruct);
 8000ee0:	f107 0310 	add.w	r3, r7, #16
 8000ee4:	4619      	mov	r1, r3
 8000ee6:	480d      	ldr	r0, [pc, #52]	@ (8000f1c <MX_GPIO_Init+0xe8>)
 8000ee8:	f000 fc00 	bl	80016ec <HAL_GPIO_Init>

  /*Configure GPIO pin : A1_Pin */
  GPIO_InitStruct.Pin = A1_Pin;
 8000eec:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8000ef0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000ef2:	2300      	movs	r3, #0
 8000ef4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ef6:	2300      	movs	r3, #0
 8000ef8:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(A1_GPIO_Port, &GPIO_InitStruct);
 8000efa:	f107 0310 	add.w	r3, r7, #16
 8000efe:	4619      	mov	r1, r3
 8000f00:	4806      	ldr	r0, [pc, #24]	@ (8000f1c <MX_GPIO_Init+0xe8>)
 8000f02:	f000 fbf3 	bl	80016ec <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000f06:	bf00      	nop
 8000f08:	3720      	adds	r7, #32
 8000f0a:	46bd      	mov	sp, r7
 8000f0c:	bd80      	pop	{r7, pc}
 8000f0e:	bf00      	nop
 8000f10:	40021000 	.word	0x40021000
 8000f14:	40010c00 	.word	0x40010c00
 8000f18:	40011000 	.word	0x40011000
 8000f1c:	40010800 	.word	0x40010800

08000f20 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8000f20:	b580      	push	{r7, lr}
 8000f22:	b082      	sub	sp, #8
 8000f24:	af00      	add	r7, sp, #0
 8000f26:	6078      	str	r0, [r7, #4]
	timer_run();
 8000f28:	f000 f8a4 	bl	8001074 <timer_run>
	button_reading();
 8000f2c:	f7ff f970 	bl	8000210 <button_reading>
 }
 8000f30:	bf00      	nop
 8000f32:	3708      	adds	r7, #8
 8000f34:	46bd      	mov	sp, r7
 8000f36:	bd80      	pop	{r7, pc}

08000f38 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000f38:	b480      	push	{r7}
 8000f3a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000f3c:	b672      	cpsid	i
}
 8000f3e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000f40:	bf00      	nop
 8000f42:	e7fd      	b.n	8000f40 <Error_Handler+0x8>

08000f44 <setTimer0>:
int timer0_counter = 0, timer1_counter = 0, timer2_counter = 0, timer3_counter = 0, timer4_counter, timer5_counter, timer6_counter;
int timer0_flag = 0, timer1_flag = 0, timer2_flag = 0, timer3_flag = 0, timer4_flag = 0, timer5_flag = 0, timer6_flag = 0;
int TIMER_CYCLE = 1;


void setTimer0(int duration) {
 8000f44:	b480      	push	{r7}
 8000f46:	b083      	sub	sp, #12
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	6078      	str	r0, [r7, #4]
    timer0_counter = duration / TIMER_CYCLE;
 8000f4c:	4b07      	ldr	r3, [pc, #28]	@ (8000f6c <setTimer0+0x28>)
 8000f4e:	681b      	ldr	r3, [r3, #0]
 8000f50:	687a      	ldr	r2, [r7, #4]
 8000f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8000f56:	4a06      	ldr	r2, [pc, #24]	@ (8000f70 <setTimer0+0x2c>)
 8000f58:	6013      	str	r3, [r2, #0]
    timer0_flag = 0;
 8000f5a:	4b06      	ldr	r3, [pc, #24]	@ (8000f74 <setTimer0+0x30>)
 8000f5c:	2200      	movs	r2, #0
 8000f5e:	601a      	str	r2, [r3, #0]
}
 8000f60:	bf00      	nop
 8000f62:	370c      	adds	r7, #12
 8000f64:	46bd      	mov	sp, r7
 8000f66:	bc80      	pop	{r7}
 8000f68:	4770      	bx	lr
 8000f6a:	bf00      	nop
 8000f6c:	20000024 	.word	0x20000024
 8000f70:	200001c8 	.word	0x200001c8
 8000f74:	200001dc 	.word	0x200001dc

08000f78 <setTimer1>:
void setTimer1(int duration) {
 8000f78:	b480      	push	{r7}
 8000f7a:	b083      	sub	sp, #12
 8000f7c:	af00      	add	r7, sp, #0
 8000f7e:	6078      	str	r0, [r7, #4]
    timer1_counter = duration / TIMER_CYCLE;
 8000f80:	4b07      	ldr	r3, [pc, #28]	@ (8000fa0 <setTimer1+0x28>)
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	687a      	ldr	r2, [r7, #4]
 8000f86:	fb92 f3f3 	sdiv	r3, r2, r3
 8000f8a:	4a06      	ldr	r2, [pc, #24]	@ (8000fa4 <setTimer1+0x2c>)
 8000f8c:	6013      	str	r3, [r2, #0]
    timer1_flag = 0;
 8000f8e:	4b06      	ldr	r3, [pc, #24]	@ (8000fa8 <setTimer1+0x30>)
 8000f90:	2200      	movs	r2, #0
 8000f92:	601a      	str	r2, [r3, #0]
}
 8000f94:	bf00      	nop
 8000f96:	370c      	adds	r7, #12
 8000f98:	46bd      	mov	sp, r7
 8000f9a:	bc80      	pop	{r7}
 8000f9c:	4770      	bx	lr
 8000f9e:	bf00      	nop
 8000fa0:	20000024 	.word	0x20000024
 8000fa4:	200001cc 	.word	0x200001cc
 8000fa8:	200001e0 	.word	0x200001e0

08000fac <setTimer2>:
void setTimer2(int duration) {
 8000fac:	b480      	push	{r7}
 8000fae:	b083      	sub	sp, #12
 8000fb0:	af00      	add	r7, sp, #0
 8000fb2:	6078      	str	r0, [r7, #4]
    timer2_counter = duration / TIMER_CYCLE;
 8000fb4:	4b07      	ldr	r3, [pc, #28]	@ (8000fd4 <setTimer2+0x28>)
 8000fb6:	681b      	ldr	r3, [r3, #0]
 8000fb8:	687a      	ldr	r2, [r7, #4]
 8000fba:	fb92 f3f3 	sdiv	r3, r2, r3
 8000fbe:	4a06      	ldr	r2, [pc, #24]	@ (8000fd8 <setTimer2+0x2c>)
 8000fc0:	6013      	str	r3, [r2, #0]
    timer2_flag = 0;
 8000fc2:	4b06      	ldr	r3, [pc, #24]	@ (8000fdc <setTimer2+0x30>)
 8000fc4:	2200      	movs	r2, #0
 8000fc6:	601a      	str	r2, [r3, #0]
}
 8000fc8:	bf00      	nop
 8000fca:	370c      	adds	r7, #12
 8000fcc:	46bd      	mov	sp, r7
 8000fce:	bc80      	pop	{r7}
 8000fd0:	4770      	bx	lr
 8000fd2:	bf00      	nop
 8000fd4:	20000024 	.word	0x20000024
 8000fd8:	200001d0 	.word	0x200001d0
 8000fdc:	200001e4 	.word	0x200001e4

08000fe0 <setTimer6>:
}
//void setTimer5(int duration){
//	timer5_counter = duration / TIMER_CYCLE;
//	timer5_flag = 0;
//}
void setTimer6(int duration){
 8000fe0:	b480      	push	{r7}
 8000fe2:	b083      	sub	sp, #12
 8000fe4:	af00      	add	r7, sp, #0
 8000fe6:	6078      	str	r0, [r7, #4]
	timer6_counter = duration / TIMER_CYCLE;
 8000fe8:	4b07      	ldr	r3, [pc, #28]	@ (8001008 <setTimer6+0x28>)
 8000fea:	681b      	ldr	r3, [r3, #0]
 8000fec:	687a      	ldr	r2, [r7, #4]
 8000fee:	fb92 f3f3 	sdiv	r3, r2, r3
 8000ff2:	4a06      	ldr	r2, [pc, #24]	@ (800100c <setTimer6+0x2c>)
 8000ff4:	6013      	str	r3, [r2, #0]
	timer6_flag = 0;
 8000ff6:	4b06      	ldr	r3, [pc, #24]	@ (8001010 <setTimer6+0x30>)
 8000ff8:	2200      	movs	r2, #0
 8000ffa:	601a      	str	r2, [r3, #0]
}
 8000ffc:	bf00      	nop
 8000ffe:	370c      	adds	r7, #12
 8001000:	46bd      	mov	sp, r7
 8001002:	bc80      	pop	{r7}
 8001004:	4770      	bx	lr
 8001006:	bf00      	nop
 8001008:	20000024 	.word	0x20000024
 800100c:	200001d8 	.word	0x200001d8
 8001010:	200001ec 	.word	0x200001ec

08001014 <clearTimer1>:

//void clearTimer0(){
//	timer0_counter = 0;
//	timer0_flag = 0;
//}
void clearTimer1(){
 8001014:	b480      	push	{r7}
 8001016:	af00      	add	r7, sp, #0
	timer1_counter = 0;
 8001018:	4b04      	ldr	r3, [pc, #16]	@ (800102c <clearTimer1+0x18>)
 800101a:	2200      	movs	r2, #0
 800101c:	601a      	str	r2, [r3, #0]
	timer1_flag = 0;
 800101e:	4b04      	ldr	r3, [pc, #16]	@ (8001030 <clearTimer1+0x1c>)
 8001020:	2200      	movs	r2, #0
 8001022:	601a      	str	r2, [r3, #0]
}
 8001024:	bf00      	nop
 8001026:	46bd      	mov	sp, r7
 8001028:	bc80      	pop	{r7}
 800102a:	4770      	bx	lr
 800102c:	200001cc 	.word	0x200001cc
 8001030:	200001e0 	.word	0x200001e0

08001034 <clearTimer2>:
void clearTimer2(){
 8001034:	b480      	push	{r7}
 8001036:	af00      	add	r7, sp, #0
	timer2_counter = 0;
 8001038:	4b04      	ldr	r3, [pc, #16]	@ (800104c <clearTimer2+0x18>)
 800103a:	2200      	movs	r2, #0
 800103c:	601a      	str	r2, [r3, #0]
	timer2_flag = 0;
 800103e:	4b04      	ldr	r3, [pc, #16]	@ (8001050 <clearTimer2+0x1c>)
 8001040:	2200      	movs	r2, #0
 8001042:	601a      	str	r2, [r3, #0]
}
 8001044:	bf00      	nop
 8001046:	46bd      	mov	sp, r7
 8001048:	bc80      	pop	{r7}
 800104a:	4770      	bx	lr
 800104c:	200001d0 	.word	0x200001d0
 8001050:	200001e4 	.word	0x200001e4

08001054 <clearTimer6>:
//}
//void clearTimer5(){
//	timer5_counter = 0;
//	timer5_flag = 0;
//}
void clearTimer6(){
 8001054:	b480      	push	{r7}
 8001056:	af00      	add	r7, sp, #0
	timer6_counter = 0;
 8001058:	4b04      	ldr	r3, [pc, #16]	@ (800106c <clearTimer6+0x18>)
 800105a:	2200      	movs	r2, #0
 800105c:	601a      	str	r2, [r3, #0]
	timer6_flag = 0;
 800105e:	4b04      	ldr	r3, [pc, #16]	@ (8001070 <clearTimer6+0x1c>)
 8001060:	2200      	movs	r2, #0
 8001062:	601a      	str	r2, [r3, #0]
}
 8001064:	bf00      	nop
 8001066:	46bd      	mov	sp, r7
 8001068:	bc80      	pop	{r7}
 800106a:	4770      	bx	lr
 800106c:	200001d8 	.word	0x200001d8
 8001070:	200001ec 	.word	0x200001ec

08001074 <timer_run>:



void timer_run() {
 8001074:	b480      	push	{r7}
 8001076:	af00      	add	r7, sp, #0
    if (timer0_counter > 0) {
 8001078:	4b29      	ldr	r3, [pc, #164]	@ (8001120 <timer_run+0xac>)
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	2b00      	cmp	r3, #0
 800107e:	dd0b      	ble.n	8001098 <timer_run+0x24>
        timer0_counter--;
 8001080:	4b27      	ldr	r3, [pc, #156]	@ (8001120 <timer_run+0xac>)
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	3b01      	subs	r3, #1
 8001086:	4a26      	ldr	r2, [pc, #152]	@ (8001120 <timer_run+0xac>)
 8001088:	6013      	str	r3, [r2, #0]
        if (timer0_counter == 0) timer0_flag = 1;
 800108a:	4b25      	ldr	r3, [pc, #148]	@ (8001120 <timer_run+0xac>)
 800108c:	681b      	ldr	r3, [r3, #0]
 800108e:	2b00      	cmp	r3, #0
 8001090:	d102      	bne.n	8001098 <timer_run+0x24>
 8001092:	4b24      	ldr	r3, [pc, #144]	@ (8001124 <timer_run+0xb0>)
 8001094:	2201      	movs	r2, #1
 8001096:	601a      	str	r2, [r3, #0]
    }
    if (timer1_counter > 0) {
 8001098:	4b23      	ldr	r3, [pc, #140]	@ (8001128 <timer_run+0xb4>)
 800109a:	681b      	ldr	r3, [r3, #0]
 800109c:	2b00      	cmp	r3, #0
 800109e:	dd0b      	ble.n	80010b8 <timer_run+0x44>
        timer1_counter--;
 80010a0:	4b21      	ldr	r3, [pc, #132]	@ (8001128 <timer_run+0xb4>)
 80010a2:	681b      	ldr	r3, [r3, #0]
 80010a4:	3b01      	subs	r3, #1
 80010a6:	4a20      	ldr	r2, [pc, #128]	@ (8001128 <timer_run+0xb4>)
 80010a8:	6013      	str	r3, [r2, #0]
        if (timer1_counter == 0) timer1_flag = 1;
 80010aa:	4b1f      	ldr	r3, [pc, #124]	@ (8001128 <timer_run+0xb4>)
 80010ac:	681b      	ldr	r3, [r3, #0]
 80010ae:	2b00      	cmp	r3, #0
 80010b0:	d102      	bne.n	80010b8 <timer_run+0x44>
 80010b2:	4b1e      	ldr	r3, [pc, #120]	@ (800112c <timer_run+0xb8>)
 80010b4:	2201      	movs	r2, #1
 80010b6:	601a      	str	r2, [r3, #0]
    }
    if (timer2_counter > 0) {
 80010b8:	4b1d      	ldr	r3, [pc, #116]	@ (8001130 <timer_run+0xbc>)
 80010ba:	681b      	ldr	r3, [r3, #0]
 80010bc:	2b00      	cmp	r3, #0
 80010be:	dd0b      	ble.n	80010d8 <timer_run+0x64>
        timer2_counter--;
 80010c0:	4b1b      	ldr	r3, [pc, #108]	@ (8001130 <timer_run+0xbc>)
 80010c2:	681b      	ldr	r3, [r3, #0]
 80010c4:	3b01      	subs	r3, #1
 80010c6:	4a1a      	ldr	r2, [pc, #104]	@ (8001130 <timer_run+0xbc>)
 80010c8:	6013      	str	r3, [r2, #0]
        if (timer2_counter == 0) timer2_flag = 1;
 80010ca:	4b19      	ldr	r3, [pc, #100]	@ (8001130 <timer_run+0xbc>)
 80010cc:	681b      	ldr	r3, [r3, #0]
 80010ce:	2b00      	cmp	r3, #0
 80010d0:	d102      	bne.n	80010d8 <timer_run+0x64>
 80010d2:	4b18      	ldr	r3, [pc, #96]	@ (8001134 <timer_run+0xc0>)
 80010d4:	2201      	movs	r2, #1
 80010d6:	601a      	str	r2, [r3, #0]
//        timer3_counter--;
//        if (timer3_counter == 0){
//        	timer3_flag = 1;
//        }
//    }
    if (timer4_counter > 0) {
 80010d8:	4b17      	ldr	r3, [pc, #92]	@ (8001138 <timer_run+0xc4>)
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	2b00      	cmp	r3, #0
 80010de:	dd0b      	ble.n	80010f8 <timer_run+0x84>
        timer4_counter--;
 80010e0:	4b15      	ldr	r3, [pc, #84]	@ (8001138 <timer_run+0xc4>)
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	3b01      	subs	r3, #1
 80010e6:	4a14      	ldr	r2, [pc, #80]	@ (8001138 <timer_run+0xc4>)
 80010e8:	6013      	str	r3, [r2, #0]
        if (timer4_counter == 0){
 80010ea:	4b13      	ldr	r3, [pc, #76]	@ (8001138 <timer_run+0xc4>)
 80010ec:	681b      	ldr	r3, [r3, #0]
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	d102      	bne.n	80010f8 <timer_run+0x84>
        	timer4_flag = 1;
 80010f2:	4b12      	ldr	r3, [pc, #72]	@ (800113c <timer_run+0xc8>)
 80010f4:	2201      	movs	r2, #1
 80010f6:	601a      	str	r2, [r3, #0]
//        timer5_counter--;
//        if (timer5_counter == 0){
//        	timer5_flag = 1;
//        }
//    }
    if (timer6_counter > 0) {
 80010f8:	4b11      	ldr	r3, [pc, #68]	@ (8001140 <timer_run+0xcc>)
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	2b00      	cmp	r3, #0
 80010fe:	dd0b      	ble.n	8001118 <timer_run+0xa4>
        timer6_counter--;
 8001100:	4b0f      	ldr	r3, [pc, #60]	@ (8001140 <timer_run+0xcc>)
 8001102:	681b      	ldr	r3, [r3, #0]
 8001104:	3b01      	subs	r3, #1
 8001106:	4a0e      	ldr	r2, [pc, #56]	@ (8001140 <timer_run+0xcc>)
 8001108:	6013      	str	r3, [r2, #0]
        if (timer6_counter == 0){
 800110a:	4b0d      	ldr	r3, [pc, #52]	@ (8001140 <timer_run+0xcc>)
 800110c:	681b      	ldr	r3, [r3, #0]
 800110e:	2b00      	cmp	r3, #0
 8001110:	d102      	bne.n	8001118 <timer_run+0xa4>
        	timer6_flag = 1;
 8001112:	4b0c      	ldr	r3, [pc, #48]	@ (8001144 <timer_run+0xd0>)
 8001114:	2201      	movs	r2, #1
 8001116:	601a      	str	r2, [r3, #0]
        }
    }

}
 8001118:	bf00      	nop
 800111a:	46bd      	mov	sp, r7
 800111c:	bc80      	pop	{r7}
 800111e:	4770      	bx	lr
 8001120:	200001c8 	.word	0x200001c8
 8001124:	200001dc 	.word	0x200001dc
 8001128:	200001cc 	.word	0x200001cc
 800112c:	200001e0 	.word	0x200001e0
 8001130:	200001d0 	.word	0x200001d0
 8001134:	200001e4 	.word	0x200001e4
 8001138:	200001d4 	.word	0x200001d4
 800113c:	200001e8 	.word	0x200001e8
 8001140:	200001d8 	.word	0x200001d8
 8001144:	200001ec 	.word	0x200001ec

08001148 <HAL_MspInit>:
 8001148:	b480      	push	{r7}
 800114a:	b085      	sub	sp, #20
 800114c:	af00      	add	r7, sp, #0
 800114e:	4b15      	ldr	r3, [pc, #84]	@ (80011a4 <HAL_MspInit+0x5c>)
 8001150:	699b      	ldr	r3, [r3, #24]
 8001152:	4a14      	ldr	r2, [pc, #80]	@ (80011a4 <HAL_MspInit+0x5c>)
 8001154:	f043 0301 	orr.w	r3, r3, #1
 8001158:	6193      	str	r3, [r2, #24]
 800115a:	4b12      	ldr	r3, [pc, #72]	@ (80011a4 <HAL_MspInit+0x5c>)
 800115c:	699b      	ldr	r3, [r3, #24]
 800115e:	f003 0301 	and.w	r3, r3, #1
 8001162:	60bb      	str	r3, [r7, #8]
 8001164:	68bb      	ldr	r3, [r7, #8]
 8001166:	4b0f      	ldr	r3, [pc, #60]	@ (80011a4 <HAL_MspInit+0x5c>)
 8001168:	69db      	ldr	r3, [r3, #28]
 800116a:	4a0e      	ldr	r2, [pc, #56]	@ (80011a4 <HAL_MspInit+0x5c>)
 800116c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001170:	61d3      	str	r3, [r2, #28]
 8001172:	4b0c      	ldr	r3, [pc, #48]	@ (80011a4 <HAL_MspInit+0x5c>)
 8001174:	69db      	ldr	r3, [r3, #28]
 8001176:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800117a:	607b      	str	r3, [r7, #4]
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	4b0a      	ldr	r3, [pc, #40]	@ (80011a8 <HAL_MspInit+0x60>)
 8001180:	685b      	ldr	r3, [r3, #4]
 8001182:	60fb      	str	r3, [r7, #12]
 8001184:	68fb      	ldr	r3, [r7, #12]
 8001186:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 800118a:	60fb      	str	r3, [r7, #12]
 800118c:	68fb      	ldr	r3, [r7, #12]
 800118e:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8001192:	60fb      	str	r3, [r7, #12]
 8001194:	4a04      	ldr	r2, [pc, #16]	@ (80011a8 <HAL_MspInit+0x60>)
 8001196:	68fb      	ldr	r3, [r7, #12]
 8001198:	6053      	str	r3, [r2, #4]
 800119a:	bf00      	nop
 800119c:	3714      	adds	r7, #20
 800119e:	46bd      	mov	sp, r7
 80011a0:	bc80      	pop	{r7}
 80011a2:	4770      	bx	lr
 80011a4:	40021000 	.word	0x40021000
 80011a8:	40010000 	.word	0x40010000

080011ac <HAL_I2C_MspInit>:
 80011ac:	b580      	push	{r7, lr}
 80011ae:	b08a      	sub	sp, #40	@ 0x28
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	6078      	str	r0, [r7, #4]
 80011b4:	f107 0314 	add.w	r3, r7, #20
 80011b8:	2200      	movs	r2, #0
 80011ba:	601a      	str	r2, [r3, #0]
 80011bc:	605a      	str	r2, [r3, #4]
 80011be:	609a      	str	r2, [r3, #8]
 80011c0:	60da      	str	r2, [r3, #12]
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	681b      	ldr	r3, [r3, #0]
 80011c6:	4a1d      	ldr	r2, [pc, #116]	@ (800123c <HAL_I2C_MspInit+0x90>)
 80011c8:	4293      	cmp	r3, r2
 80011ca:	d132      	bne.n	8001232 <HAL_I2C_MspInit+0x86>
 80011cc:	4b1c      	ldr	r3, [pc, #112]	@ (8001240 <HAL_I2C_MspInit+0x94>)
 80011ce:	699b      	ldr	r3, [r3, #24]
 80011d0:	4a1b      	ldr	r2, [pc, #108]	@ (8001240 <HAL_I2C_MspInit+0x94>)
 80011d2:	f043 0308 	orr.w	r3, r3, #8
 80011d6:	6193      	str	r3, [r2, #24]
 80011d8:	4b19      	ldr	r3, [pc, #100]	@ (8001240 <HAL_I2C_MspInit+0x94>)
 80011da:	699b      	ldr	r3, [r3, #24]
 80011dc:	f003 0308 	and.w	r3, r3, #8
 80011e0:	613b      	str	r3, [r7, #16]
 80011e2:	693b      	ldr	r3, [r7, #16]
 80011e4:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80011e8:	617b      	str	r3, [r7, #20]
 80011ea:	2312      	movs	r3, #18
 80011ec:	61bb      	str	r3, [r7, #24]
 80011ee:	2303      	movs	r3, #3
 80011f0:	623b      	str	r3, [r7, #32]
 80011f2:	f107 0314 	add.w	r3, r7, #20
 80011f6:	4619      	mov	r1, r3
 80011f8:	4812      	ldr	r0, [pc, #72]	@ (8001244 <HAL_I2C_MspInit+0x98>)
 80011fa:	f000 fa77 	bl	80016ec <HAL_GPIO_Init>
 80011fe:	4b12      	ldr	r3, [pc, #72]	@ (8001248 <HAL_I2C_MspInit+0x9c>)
 8001200:	685b      	ldr	r3, [r3, #4]
 8001202:	627b      	str	r3, [r7, #36]	@ 0x24
 8001204:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001206:	f043 63e0 	orr.w	r3, r3, #117440512	@ 0x7000000
 800120a:	627b      	str	r3, [r7, #36]	@ 0x24
 800120c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800120e:	f043 0302 	orr.w	r3, r3, #2
 8001212:	627b      	str	r3, [r7, #36]	@ 0x24
 8001214:	4a0c      	ldr	r2, [pc, #48]	@ (8001248 <HAL_I2C_MspInit+0x9c>)
 8001216:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001218:	6053      	str	r3, [r2, #4]
 800121a:	4b09      	ldr	r3, [pc, #36]	@ (8001240 <HAL_I2C_MspInit+0x94>)
 800121c:	69db      	ldr	r3, [r3, #28]
 800121e:	4a08      	ldr	r2, [pc, #32]	@ (8001240 <HAL_I2C_MspInit+0x94>)
 8001220:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001224:	61d3      	str	r3, [r2, #28]
 8001226:	4b06      	ldr	r3, [pc, #24]	@ (8001240 <HAL_I2C_MspInit+0x94>)
 8001228:	69db      	ldr	r3, [r3, #28]
 800122a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800122e:	60fb      	str	r3, [r7, #12]
 8001230:	68fb      	ldr	r3, [r7, #12]
 8001232:	bf00      	nop
 8001234:	3728      	adds	r7, #40	@ 0x28
 8001236:	46bd      	mov	sp, r7
 8001238:	bd80      	pop	{r7, pc}
 800123a:	bf00      	nop
 800123c:	40005400 	.word	0x40005400
 8001240:	40021000 	.word	0x40021000
 8001244:	40010c00 	.word	0x40010c00
 8001248:	40010000 	.word	0x40010000

0800124c <HAL_TIM_Base_MspInit>:
 800124c:	b580      	push	{r7, lr}
 800124e:	b084      	sub	sp, #16
 8001250:	af00      	add	r7, sp, #0
 8001252:	6078      	str	r0, [r7, #4]
 8001254:	687b      	ldr	r3, [r7, #4]
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800125c:	d113      	bne.n	8001286 <HAL_TIM_Base_MspInit+0x3a>
 800125e:	4b0c      	ldr	r3, [pc, #48]	@ (8001290 <HAL_TIM_Base_MspInit+0x44>)
 8001260:	69db      	ldr	r3, [r3, #28]
 8001262:	4a0b      	ldr	r2, [pc, #44]	@ (8001290 <HAL_TIM_Base_MspInit+0x44>)
 8001264:	f043 0301 	orr.w	r3, r3, #1
 8001268:	61d3      	str	r3, [r2, #28]
 800126a:	4b09      	ldr	r3, [pc, #36]	@ (8001290 <HAL_TIM_Base_MspInit+0x44>)
 800126c:	69db      	ldr	r3, [r3, #28]
 800126e:	f003 0301 	and.w	r3, r3, #1
 8001272:	60fb      	str	r3, [r7, #12]
 8001274:	68fb      	ldr	r3, [r7, #12]
 8001276:	2200      	movs	r2, #0
 8001278:	2100      	movs	r1, #0
 800127a:	201c      	movs	r0, #28
 800127c:	f000 f9ff 	bl	800167e <HAL_NVIC_SetPriority>
 8001280:	201c      	movs	r0, #28
 8001282:	f000 fa18 	bl	80016b6 <HAL_NVIC_EnableIRQ>
 8001286:	bf00      	nop
 8001288:	3710      	adds	r7, #16
 800128a:	46bd      	mov	sp, r7
 800128c:	bd80      	pop	{r7, pc}
 800128e:	bf00      	nop
 8001290:	40021000 	.word	0x40021000

08001294 <NMI_Handler>:
 8001294:	b480      	push	{r7}
 8001296:	af00      	add	r7, sp, #0
 8001298:	bf00      	nop
 800129a:	e7fd      	b.n	8001298 <NMI_Handler+0x4>

0800129c <HardFault_Handler>:
 800129c:	b480      	push	{r7}
 800129e:	af00      	add	r7, sp, #0
 80012a0:	bf00      	nop
 80012a2:	e7fd      	b.n	80012a0 <HardFault_Handler+0x4>

080012a4 <MemManage_Handler>:
 80012a4:	b480      	push	{r7}
 80012a6:	af00      	add	r7, sp, #0
 80012a8:	bf00      	nop
 80012aa:	e7fd      	b.n	80012a8 <MemManage_Handler+0x4>

080012ac <BusFault_Handler>:
 80012ac:	b480      	push	{r7}
 80012ae:	af00      	add	r7, sp, #0
 80012b0:	bf00      	nop
 80012b2:	e7fd      	b.n	80012b0 <BusFault_Handler+0x4>

080012b4 <UsageFault_Handler>:
 80012b4:	b480      	push	{r7}
 80012b6:	af00      	add	r7, sp, #0
 80012b8:	bf00      	nop
 80012ba:	e7fd      	b.n	80012b8 <UsageFault_Handler+0x4>

080012bc <SVC_Handler>:
 80012bc:	b480      	push	{r7}
 80012be:	af00      	add	r7, sp, #0
 80012c0:	bf00      	nop
 80012c2:	46bd      	mov	sp, r7
 80012c4:	bc80      	pop	{r7}
 80012c6:	4770      	bx	lr

080012c8 <DebugMon_Handler>:
 80012c8:	b480      	push	{r7}
 80012ca:	af00      	add	r7, sp, #0
 80012cc:	bf00      	nop
 80012ce:	46bd      	mov	sp, r7
 80012d0:	bc80      	pop	{r7}
 80012d2:	4770      	bx	lr

080012d4 <PendSV_Handler>:
 80012d4:	b480      	push	{r7}
 80012d6:	af00      	add	r7, sp, #0
 80012d8:	bf00      	nop
 80012da:	46bd      	mov	sp, r7
 80012dc:	bc80      	pop	{r7}
 80012de:	4770      	bx	lr

080012e0 <SysTick_Handler>:
 80012e0:	b580      	push	{r7, lr}
 80012e2:	af00      	add	r7, sp, #0
 80012e4:	f000 f8b4 	bl	8001450 <HAL_IncTick>
 80012e8:	bf00      	nop
 80012ea:	bd80      	pop	{r7, pc}

080012ec <TIM2_IRQHandler>:
 80012ec:	b580      	push	{r7, lr}
 80012ee:	af00      	add	r7, sp, #0
 80012f0:	4802      	ldr	r0, [pc, #8]	@ (80012fc <TIM2_IRQHandler+0x10>)
 80012f2:	f001 fd01 	bl	8002cf8 <HAL_TIM_IRQHandler>
 80012f6:	bf00      	nop
 80012f8:	bd80      	pop	{r7, pc}
 80012fa:	bf00      	nop
 80012fc:	20000180 	.word	0x20000180

08001300 <_sbrk>:
 8001300:	b580      	push	{r7, lr}
 8001302:	b086      	sub	sp, #24
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]
 8001308:	4a14      	ldr	r2, [pc, #80]	@ (800135c <_sbrk+0x5c>)
 800130a:	4b15      	ldr	r3, [pc, #84]	@ (8001360 <_sbrk+0x60>)
 800130c:	1ad3      	subs	r3, r2, r3
 800130e:	617b      	str	r3, [r7, #20]
 8001310:	697b      	ldr	r3, [r7, #20]
 8001312:	613b      	str	r3, [r7, #16]
 8001314:	4b13      	ldr	r3, [pc, #76]	@ (8001364 <_sbrk+0x64>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	2b00      	cmp	r3, #0
 800131a:	d102      	bne.n	8001322 <_sbrk+0x22>
 800131c:	4b11      	ldr	r3, [pc, #68]	@ (8001364 <_sbrk+0x64>)
 800131e:	4a12      	ldr	r2, [pc, #72]	@ (8001368 <_sbrk+0x68>)
 8001320:	601a      	str	r2, [r3, #0]
 8001322:	4b10      	ldr	r3, [pc, #64]	@ (8001364 <_sbrk+0x64>)
 8001324:	681a      	ldr	r2, [r3, #0]
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	4413      	add	r3, r2
 800132a:	693a      	ldr	r2, [r7, #16]
 800132c:	429a      	cmp	r2, r3
 800132e:	d207      	bcs.n	8001340 <_sbrk+0x40>
 8001330:	f002 f85a 	bl	80033e8 <__errno>
 8001334:	4603      	mov	r3, r0
 8001336:	220c      	movs	r2, #12
 8001338:	601a      	str	r2, [r3, #0]
 800133a:	f04f 33ff 	mov.w	r3, #4294967295
 800133e:	e009      	b.n	8001354 <_sbrk+0x54>
 8001340:	4b08      	ldr	r3, [pc, #32]	@ (8001364 <_sbrk+0x64>)
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	60fb      	str	r3, [r7, #12]
 8001346:	4b07      	ldr	r3, [pc, #28]	@ (8001364 <_sbrk+0x64>)
 8001348:	681a      	ldr	r2, [r3, #0]
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	4413      	add	r3, r2
 800134e:	4a05      	ldr	r2, [pc, #20]	@ (8001364 <_sbrk+0x64>)
 8001350:	6013      	str	r3, [r2, #0]
 8001352:	68fb      	ldr	r3, [r7, #12]
 8001354:	4618      	mov	r0, r3
 8001356:	3718      	adds	r7, #24
 8001358:	46bd      	mov	sp, r7
 800135a:	bd80      	pop	{r7, pc}
 800135c:	20005000 	.word	0x20005000
 8001360:	00000400 	.word	0x00000400
 8001364:	200001f0 	.word	0x200001f0
 8001368:	20000340 	.word	0x20000340

0800136c <SystemInit>:
 800136c:	b480      	push	{r7}
 800136e:	af00      	add	r7, sp, #0
 8001370:	bf00      	nop
 8001372:	46bd      	mov	sp, r7
 8001374:	bc80      	pop	{r7}
 8001376:	4770      	bx	lr

08001378 <Reset_Handler>:
 8001378:	f7ff fff8 	bl	800136c <SystemInit>
 800137c:	480b      	ldr	r0, [pc, #44]	@ (80013ac <LoopFillZerobss+0xe>)
 800137e:	490c      	ldr	r1, [pc, #48]	@ (80013b0 <LoopFillZerobss+0x12>)
 8001380:	4a0c      	ldr	r2, [pc, #48]	@ (80013b4 <LoopFillZerobss+0x16>)
 8001382:	2300      	movs	r3, #0
 8001384:	e002      	b.n	800138c <LoopCopyDataInit>

08001386 <CopyDataInit>:
 8001386:	58d4      	ldr	r4, [r2, r3]
 8001388:	50c4      	str	r4, [r0, r3]
 800138a:	3304      	adds	r3, #4

0800138c <LoopCopyDataInit>:
 800138c:	18c4      	adds	r4, r0, r3
 800138e:	428c      	cmp	r4, r1
 8001390:	d3f9      	bcc.n	8001386 <CopyDataInit>
 8001392:	4a09      	ldr	r2, [pc, #36]	@ (80013b8 <LoopFillZerobss+0x1a>)
 8001394:	4c09      	ldr	r4, [pc, #36]	@ (80013bc <LoopFillZerobss+0x1e>)
 8001396:	2300      	movs	r3, #0
 8001398:	e001      	b.n	800139e <LoopFillZerobss>

0800139a <FillZerobss>:
 800139a:	6013      	str	r3, [r2, #0]
 800139c:	3204      	adds	r2, #4

0800139e <LoopFillZerobss>:
 800139e:	42a2      	cmp	r2, r4
 80013a0:	d3fb      	bcc.n	800139a <FillZerobss>
 80013a2:	f002 f827 	bl	80033f4 <__libc_init_array>
 80013a6:	f7ff fc73 	bl	8000c90 <main>
 80013aa:	4770      	bx	lr
 80013ac:	20000000 	.word	0x20000000
 80013b0:	20000084 	.word	0x20000084
 80013b4:	08003dcc 	.word	0x08003dcc
 80013b8:	20000084 	.word	0x20000084
 80013bc:	20000340 	.word	0x20000340

080013c0 <ADC1_2_IRQHandler>:
 80013c0:	e7fe      	b.n	80013c0 <ADC1_2_IRQHandler>
	...

080013c4 <HAL_Init>:
 80013c4:	b580      	push	{r7, lr}
 80013c6:	af00      	add	r7, sp, #0
 80013c8:	4b08      	ldr	r3, [pc, #32]	@ (80013ec <HAL_Init+0x28>)
 80013ca:	681b      	ldr	r3, [r3, #0]
 80013cc:	4a07      	ldr	r2, [pc, #28]	@ (80013ec <HAL_Init+0x28>)
 80013ce:	f043 0310 	orr.w	r3, r3, #16
 80013d2:	6013      	str	r3, [r2, #0]
 80013d4:	2003      	movs	r0, #3
 80013d6:	f000 f947 	bl	8001668 <HAL_NVIC_SetPriorityGrouping>
 80013da:	200f      	movs	r0, #15
 80013dc:	f000 f808 	bl	80013f0 <HAL_InitTick>
 80013e0:	f7ff feb2 	bl	8001148 <HAL_MspInit>
 80013e4:	2300      	movs	r3, #0
 80013e6:	4618      	mov	r0, r3
 80013e8:	bd80      	pop	{r7, pc}
 80013ea:	bf00      	nop
 80013ec:	40022000 	.word	0x40022000

080013f0 <HAL_InitTick>:
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b082      	sub	sp, #8
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	6078      	str	r0, [r7, #4]
 80013f8:	4b12      	ldr	r3, [pc, #72]	@ (8001444 <HAL_InitTick+0x54>)
 80013fa:	681a      	ldr	r2, [r3, #0]
 80013fc:	4b12      	ldr	r3, [pc, #72]	@ (8001448 <HAL_InitTick+0x58>)
 80013fe:	781b      	ldrb	r3, [r3, #0]
 8001400:	4619      	mov	r1, r3
 8001402:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001406:	fbb3 f3f1 	udiv	r3, r3, r1
 800140a:	fbb2 f3f3 	udiv	r3, r2, r3
 800140e:	4618      	mov	r0, r3
 8001410:	f000 f95f 	bl	80016d2 <HAL_SYSTICK_Config>
 8001414:	4603      	mov	r3, r0
 8001416:	2b00      	cmp	r3, #0
 8001418:	d001      	beq.n	800141e <HAL_InitTick+0x2e>
 800141a:	2301      	movs	r3, #1
 800141c:	e00e      	b.n	800143c <HAL_InitTick+0x4c>
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	2b0f      	cmp	r3, #15
 8001422:	d80a      	bhi.n	800143a <HAL_InitTick+0x4a>
 8001424:	2200      	movs	r2, #0
 8001426:	6879      	ldr	r1, [r7, #4]
 8001428:	f04f 30ff 	mov.w	r0, #4294967295
 800142c:	f000 f927 	bl	800167e <HAL_NVIC_SetPriority>
 8001430:	4a06      	ldr	r2, [pc, #24]	@ (800144c <HAL_InitTick+0x5c>)
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	6013      	str	r3, [r2, #0]
 8001436:	2300      	movs	r3, #0
 8001438:	e000      	b.n	800143c <HAL_InitTick+0x4c>
 800143a:	2301      	movs	r3, #1
 800143c:	4618      	mov	r0, r3
 800143e:	3708      	adds	r7, #8
 8001440:	46bd      	mov	sp, r7
 8001442:	bd80      	pop	{r7, pc}
 8001444:	20000028 	.word	0x20000028
 8001448:	20000030 	.word	0x20000030
 800144c:	2000002c 	.word	0x2000002c

08001450 <HAL_IncTick>:
 8001450:	b480      	push	{r7}
 8001452:	af00      	add	r7, sp, #0
 8001454:	4b05      	ldr	r3, [pc, #20]	@ (800146c <HAL_IncTick+0x1c>)
 8001456:	781b      	ldrb	r3, [r3, #0]
 8001458:	461a      	mov	r2, r3
 800145a:	4b05      	ldr	r3, [pc, #20]	@ (8001470 <HAL_IncTick+0x20>)
 800145c:	681b      	ldr	r3, [r3, #0]
 800145e:	4413      	add	r3, r2
 8001460:	4a03      	ldr	r2, [pc, #12]	@ (8001470 <HAL_IncTick+0x20>)
 8001462:	6013      	str	r3, [r2, #0]
 8001464:	bf00      	nop
 8001466:	46bd      	mov	sp, r7
 8001468:	bc80      	pop	{r7}
 800146a:	4770      	bx	lr
 800146c:	20000030 	.word	0x20000030
 8001470:	200001f4 	.word	0x200001f4

08001474 <HAL_GetTick>:
 8001474:	b480      	push	{r7}
 8001476:	af00      	add	r7, sp, #0
 8001478:	4b02      	ldr	r3, [pc, #8]	@ (8001484 <HAL_GetTick+0x10>)
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	4618      	mov	r0, r3
 800147e:	46bd      	mov	sp, r7
 8001480:	bc80      	pop	{r7}
 8001482:	4770      	bx	lr
 8001484:	200001f4 	.word	0x200001f4

08001488 <HAL_Delay>:
 8001488:	b580      	push	{r7, lr}
 800148a:	b084      	sub	sp, #16
 800148c:	af00      	add	r7, sp, #0
 800148e:	6078      	str	r0, [r7, #4]
 8001490:	f7ff fff0 	bl	8001474 <HAL_GetTick>
 8001494:	60b8      	str	r0, [r7, #8]
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	60fb      	str	r3, [r7, #12]
 800149a:	68fb      	ldr	r3, [r7, #12]
 800149c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80014a0:	d005      	beq.n	80014ae <HAL_Delay+0x26>
 80014a2:	4b0a      	ldr	r3, [pc, #40]	@ (80014cc <HAL_Delay+0x44>)
 80014a4:	781b      	ldrb	r3, [r3, #0]
 80014a6:	461a      	mov	r2, r3
 80014a8:	68fb      	ldr	r3, [r7, #12]
 80014aa:	4413      	add	r3, r2
 80014ac:	60fb      	str	r3, [r7, #12]
 80014ae:	bf00      	nop
 80014b0:	f7ff ffe0 	bl	8001474 <HAL_GetTick>
 80014b4:	4602      	mov	r2, r0
 80014b6:	68bb      	ldr	r3, [r7, #8]
 80014b8:	1ad3      	subs	r3, r2, r3
 80014ba:	68fa      	ldr	r2, [r7, #12]
 80014bc:	429a      	cmp	r2, r3
 80014be:	d8f7      	bhi.n	80014b0 <HAL_Delay+0x28>
 80014c0:	bf00      	nop
 80014c2:	bf00      	nop
 80014c4:	3710      	adds	r7, #16
 80014c6:	46bd      	mov	sp, r7
 80014c8:	bd80      	pop	{r7, pc}
 80014ca:	bf00      	nop
 80014cc:	20000030 	.word	0x20000030

080014d0 <__NVIC_SetPriorityGrouping>:
 80014d0:	b480      	push	{r7}
 80014d2:	b085      	sub	sp, #20
 80014d4:	af00      	add	r7, sp, #0
 80014d6:	6078      	str	r0, [r7, #4]
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	f003 0307 	and.w	r3, r3, #7
 80014de:	60fb      	str	r3, [r7, #12]
 80014e0:	4b0c      	ldr	r3, [pc, #48]	@ (8001514 <__NVIC_SetPriorityGrouping+0x44>)
 80014e2:	68db      	ldr	r3, [r3, #12]
 80014e4:	60bb      	str	r3, [r7, #8]
 80014e6:	68ba      	ldr	r2, [r7, #8]
 80014e8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80014ec:	4013      	ands	r3, r2
 80014ee:	60bb      	str	r3, [r7, #8]
 80014f0:	68fb      	ldr	r3, [r7, #12]
 80014f2:	021a      	lsls	r2, r3, #8
 80014f4:	68bb      	ldr	r3, [r7, #8]
 80014f6:	4313      	orrs	r3, r2
 80014f8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80014fc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001500:	60bb      	str	r3, [r7, #8]
 8001502:	4a04      	ldr	r2, [pc, #16]	@ (8001514 <__NVIC_SetPriorityGrouping+0x44>)
 8001504:	68bb      	ldr	r3, [r7, #8]
 8001506:	60d3      	str	r3, [r2, #12]
 8001508:	bf00      	nop
 800150a:	3714      	adds	r7, #20
 800150c:	46bd      	mov	sp, r7
 800150e:	bc80      	pop	{r7}
 8001510:	4770      	bx	lr
 8001512:	bf00      	nop
 8001514:	e000ed00 	.word	0xe000ed00

08001518 <__NVIC_GetPriorityGrouping>:
 8001518:	b480      	push	{r7}
 800151a:	af00      	add	r7, sp, #0
 800151c:	4b04      	ldr	r3, [pc, #16]	@ (8001530 <__NVIC_GetPriorityGrouping+0x18>)
 800151e:	68db      	ldr	r3, [r3, #12]
 8001520:	0a1b      	lsrs	r3, r3, #8
 8001522:	f003 0307 	and.w	r3, r3, #7
 8001526:	4618      	mov	r0, r3
 8001528:	46bd      	mov	sp, r7
 800152a:	bc80      	pop	{r7}
 800152c:	4770      	bx	lr
 800152e:	bf00      	nop
 8001530:	e000ed00 	.word	0xe000ed00

08001534 <__NVIC_EnableIRQ>:
 8001534:	b480      	push	{r7}
 8001536:	b083      	sub	sp, #12
 8001538:	af00      	add	r7, sp, #0
 800153a:	4603      	mov	r3, r0
 800153c:	71fb      	strb	r3, [r7, #7]
 800153e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001542:	2b00      	cmp	r3, #0
 8001544:	db0b      	blt.n	800155e <__NVIC_EnableIRQ+0x2a>
 8001546:	79fb      	ldrb	r3, [r7, #7]
 8001548:	f003 021f 	and.w	r2, r3, #31
 800154c:	4906      	ldr	r1, [pc, #24]	@ (8001568 <__NVIC_EnableIRQ+0x34>)
 800154e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001552:	095b      	lsrs	r3, r3, #5
 8001554:	2001      	movs	r0, #1
 8001556:	fa00 f202 	lsl.w	r2, r0, r2
 800155a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800155e:	bf00      	nop
 8001560:	370c      	adds	r7, #12
 8001562:	46bd      	mov	sp, r7
 8001564:	bc80      	pop	{r7}
 8001566:	4770      	bx	lr
 8001568:	e000e100 	.word	0xe000e100

0800156c <__NVIC_SetPriority>:
 800156c:	b480      	push	{r7}
 800156e:	b083      	sub	sp, #12
 8001570:	af00      	add	r7, sp, #0
 8001572:	4603      	mov	r3, r0
 8001574:	6039      	str	r1, [r7, #0]
 8001576:	71fb      	strb	r3, [r7, #7]
 8001578:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800157c:	2b00      	cmp	r3, #0
 800157e:	db0a      	blt.n	8001596 <__NVIC_SetPriority+0x2a>
 8001580:	683b      	ldr	r3, [r7, #0]
 8001582:	b2da      	uxtb	r2, r3
 8001584:	490c      	ldr	r1, [pc, #48]	@ (80015b8 <__NVIC_SetPriority+0x4c>)
 8001586:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800158a:	0112      	lsls	r2, r2, #4
 800158c:	b2d2      	uxtb	r2, r2
 800158e:	440b      	add	r3, r1
 8001590:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001594:	e00a      	b.n	80015ac <__NVIC_SetPriority+0x40>
 8001596:	683b      	ldr	r3, [r7, #0]
 8001598:	b2da      	uxtb	r2, r3
 800159a:	4908      	ldr	r1, [pc, #32]	@ (80015bc <__NVIC_SetPriority+0x50>)
 800159c:	79fb      	ldrb	r3, [r7, #7]
 800159e:	f003 030f 	and.w	r3, r3, #15
 80015a2:	3b04      	subs	r3, #4
 80015a4:	0112      	lsls	r2, r2, #4
 80015a6:	b2d2      	uxtb	r2, r2
 80015a8:	440b      	add	r3, r1
 80015aa:	761a      	strb	r2, [r3, #24]
 80015ac:	bf00      	nop
 80015ae:	370c      	adds	r7, #12
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bc80      	pop	{r7}
 80015b4:	4770      	bx	lr
 80015b6:	bf00      	nop
 80015b8:	e000e100 	.word	0xe000e100
 80015bc:	e000ed00 	.word	0xe000ed00

080015c0 <NVIC_EncodePriority>:
 80015c0:	b480      	push	{r7}
 80015c2:	b089      	sub	sp, #36	@ 0x24
 80015c4:	af00      	add	r7, sp, #0
 80015c6:	60f8      	str	r0, [r7, #12]
 80015c8:	60b9      	str	r1, [r7, #8]
 80015ca:	607a      	str	r2, [r7, #4]
 80015cc:	68fb      	ldr	r3, [r7, #12]
 80015ce:	f003 0307 	and.w	r3, r3, #7
 80015d2:	61fb      	str	r3, [r7, #28]
 80015d4:	69fb      	ldr	r3, [r7, #28]
 80015d6:	f1c3 0307 	rsb	r3, r3, #7
 80015da:	2b04      	cmp	r3, #4
 80015dc:	bf28      	it	cs
 80015de:	2304      	movcs	r3, #4
 80015e0:	61bb      	str	r3, [r7, #24]
 80015e2:	69fb      	ldr	r3, [r7, #28]
 80015e4:	3304      	adds	r3, #4
 80015e6:	2b06      	cmp	r3, #6
 80015e8:	d902      	bls.n	80015f0 <NVIC_EncodePriority+0x30>
 80015ea:	69fb      	ldr	r3, [r7, #28]
 80015ec:	3b03      	subs	r3, #3
 80015ee:	e000      	b.n	80015f2 <NVIC_EncodePriority+0x32>
 80015f0:	2300      	movs	r3, #0
 80015f2:	617b      	str	r3, [r7, #20]
 80015f4:	f04f 32ff 	mov.w	r2, #4294967295
 80015f8:	69bb      	ldr	r3, [r7, #24]
 80015fa:	fa02 f303 	lsl.w	r3, r2, r3
 80015fe:	43da      	mvns	r2, r3
 8001600:	68bb      	ldr	r3, [r7, #8]
 8001602:	401a      	ands	r2, r3
 8001604:	697b      	ldr	r3, [r7, #20]
 8001606:	409a      	lsls	r2, r3
 8001608:	f04f 31ff 	mov.w	r1, #4294967295
 800160c:	697b      	ldr	r3, [r7, #20]
 800160e:	fa01 f303 	lsl.w	r3, r1, r3
 8001612:	43d9      	mvns	r1, r3
 8001614:	687b      	ldr	r3, [r7, #4]
 8001616:	400b      	ands	r3, r1
 8001618:	4313      	orrs	r3, r2
 800161a:	4618      	mov	r0, r3
 800161c:	3724      	adds	r7, #36	@ 0x24
 800161e:	46bd      	mov	sp, r7
 8001620:	bc80      	pop	{r7}
 8001622:	4770      	bx	lr

08001624 <SysTick_Config>:
 8001624:	b580      	push	{r7, lr}
 8001626:	b082      	sub	sp, #8
 8001628:	af00      	add	r7, sp, #0
 800162a:	6078      	str	r0, [r7, #4]
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	3b01      	subs	r3, #1
 8001630:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001634:	d301      	bcc.n	800163a <SysTick_Config+0x16>
 8001636:	2301      	movs	r3, #1
 8001638:	e00f      	b.n	800165a <SysTick_Config+0x36>
 800163a:	4a0a      	ldr	r2, [pc, #40]	@ (8001664 <SysTick_Config+0x40>)
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	3b01      	subs	r3, #1
 8001640:	6053      	str	r3, [r2, #4]
 8001642:	210f      	movs	r1, #15
 8001644:	f04f 30ff 	mov.w	r0, #4294967295
 8001648:	f7ff ff90 	bl	800156c <__NVIC_SetPriority>
 800164c:	4b05      	ldr	r3, [pc, #20]	@ (8001664 <SysTick_Config+0x40>)
 800164e:	2200      	movs	r2, #0
 8001650:	609a      	str	r2, [r3, #8]
 8001652:	4b04      	ldr	r3, [pc, #16]	@ (8001664 <SysTick_Config+0x40>)
 8001654:	2207      	movs	r2, #7
 8001656:	601a      	str	r2, [r3, #0]
 8001658:	2300      	movs	r3, #0
 800165a:	4618      	mov	r0, r3
 800165c:	3708      	adds	r7, #8
 800165e:	46bd      	mov	sp, r7
 8001660:	bd80      	pop	{r7, pc}
 8001662:	bf00      	nop
 8001664:	e000e010 	.word	0xe000e010

08001668 <HAL_NVIC_SetPriorityGrouping>:
 8001668:	b580      	push	{r7, lr}
 800166a:	b082      	sub	sp, #8
 800166c:	af00      	add	r7, sp, #0
 800166e:	6078      	str	r0, [r7, #4]
 8001670:	6878      	ldr	r0, [r7, #4]
 8001672:	f7ff ff2d 	bl	80014d0 <__NVIC_SetPriorityGrouping>
 8001676:	bf00      	nop
 8001678:	3708      	adds	r7, #8
 800167a:	46bd      	mov	sp, r7
 800167c:	bd80      	pop	{r7, pc}

0800167e <HAL_NVIC_SetPriority>:
 800167e:	b580      	push	{r7, lr}
 8001680:	b086      	sub	sp, #24
 8001682:	af00      	add	r7, sp, #0
 8001684:	4603      	mov	r3, r0
 8001686:	60b9      	str	r1, [r7, #8]
 8001688:	607a      	str	r2, [r7, #4]
 800168a:	73fb      	strb	r3, [r7, #15]
 800168c:	2300      	movs	r3, #0
 800168e:	617b      	str	r3, [r7, #20]
 8001690:	f7ff ff42 	bl	8001518 <__NVIC_GetPriorityGrouping>
 8001694:	6178      	str	r0, [r7, #20]
 8001696:	687a      	ldr	r2, [r7, #4]
 8001698:	68b9      	ldr	r1, [r7, #8]
 800169a:	6978      	ldr	r0, [r7, #20]
 800169c:	f7ff ff90 	bl	80015c0 <NVIC_EncodePriority>
 80016a0:	4602      	mov	r2, r0
 80016a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80016a6:	4611      	mov	r1, r2
 80016a8:	4618      	mov	r0, r3
 80016aa:	f7ff ff5f 	bl	800156c <__NVIC_SetPriority>
 80016ae:	bf00      	nop
 80016b0:	3718      	adds	r7, #24
 80016b2:	46bd      	mov	sp, r7
 80016b4:	bd80      	pop	{r7, pc}

080016b6 <HAL_NVIC_EnableIRQ>:
 80016b6:	b580      	push	{r7, lr}
 80016b8:	b082      	sub	sp, #8
 80016ba:	af00      	add	r7, sp, #0
 80016bc:	4603      	mov	r3, r0
 80016be:	71fb      	strb	r3, [r7, #7]
 80016c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016c4:	4618      	mov	r0, r3
 80016c6:	f7ff ff35 	bl	8001534 <__NVIC_EnableIRQ>
 80016ca:	bf00      	nop
 80016cc:	3708      	adds	r7, #8
 80016ce:	46bd      	mov	sp, r7
 80016d0:	bd80      	pop	{r7, pc}

080016d2 <HAL_SYSTICK_Config>:
 80016d2:	b580      	push	{r7, lr}
 80016d4:	b082      	sub	sp, #8
 80016d6:	af00      	add	r7, sp, #0
 80016d8:	6078      	str	r0, [r7, #4]
 80016da:	6878      	ldr	r0, [r7, #4]
 80016dc:	f7ff ffa2 	bl	8001624 <SysTick_Config>
 80016e0:	4603      	mov	r3, r0
 80016e2:	4618      	mov	r0, r3
 80016e4:	3708      	adds	r7, #8
 80016e6:	46bd      	mov	sp, r7
 80016e8:	bd80      	pop	{r7, pc}
	...

080016ec <HAL_GPIO_Init>:
 80016ec:	b480      	push	{r7}
 80016ee:	b08b      	sub	sp, #44	@ 0x2c
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	6078      	str	r0, [r7, #4]
 80016f4:	6039      	str	r1, [r7, #0]
 80016f6:	2300      	movs	r3, #0
 80016f8:	627b      	str	r3, [r7, #36]	@ 0x24
 80016fa:	2300      	movs	r3, #0
 80016fc:	623b      	str	r3, [r7, #32]
 80016fe:	e169      	b.n	80019d4 <HAL_GPIO_Init+0x2e8>
 8001700:	2201      	movs	r2, #1
 8001702:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001704:	fa02 f303 	lsl.w	r3, r2, r3
 8001708:	61fb      	str	r3, [r7, #28]
 800170a:	683b      	ldr	r3, [r7, #0]
 800170c:	681b      	ldr	r3, [r3, #0]
 800170e:	69fa      	ldr	r2, [r7, #28]
 8001710:	4013      	ands	r3, r2
 8001712:	61bb      	str	r3, [r7, #24]
 8001714:	69ba      	ldr	r2, [r7, #24]
 8001716:	69fb      	ldr	r3, [r7, #28]
 8001718:	429a      	cmp	r2, r3
 800171a:	f040 8158 	bne.w	80019ce <HAL_GPIO_Init+0x2e2>
 800171e:	683b      	ldr	r3, [r7, #0]
 8001720:	685b      	ldr	r3, [r3, #4]
 8001722:	4a9a      	ldr	r2, [pc, #616]	@ (800198c <HAL_GPIO_Init+0x2a0>)
 8001724:	4293      	cmp	r3, r2
 8001726:	d05e      	beq.n	80017e6 <HAL_GPIO_Init+0xfa>
 8001728:	4a98      	ldr	r2, [pc, #608]	@ (800198c <HAL_GPIO_Init+0x2a0>)
 800172a:	4293      	cmp	r3, r2
 800172c:	d875      	bhi.n	800181a <HAL_GPIO_Init+0x12e>
 800172e:	4a98      	ldr	r2, [pc, #608]	@ (8001990 <HAL_GPIO_Init+0x2a4>)
 8001730:	4293      	cmp	r3, r2
 8001732:	d058      	beq.n	80017e6 <HAL_GPIO_Init+0xfa>
 8001734:	4a96      	ldr	r2, [pc, #600]	@ (8001990 <HAL_GPIO_Init+0x2a4>)
 8001736:	4293      	cmp	r3, r2
 8001738:	d86f      	bhi.n	800181a <HAL_GPIO_Init+0x12e>
 800173a:	4a96      	ldr	r2, [pc, #600]	@ (8001994 <HAL_GPIO_Init+0x2a8>)
 800173c:	4293      	cmp	r3, r2
 800173e:	d052      	beq.n	80017e6 <HAL_GPIO_Init+0xfa>
 8001740:	4a94      	ldr	r2, [pc, #592]	@ (8001994 <HAL_GPIO_Init+0x2a8>)
 8001742:	4293      	cmp	r3, r2
 8001744:	d869      	bhi.n	800181a <HAL_GPIO_Init+0x12e>
 8001746:	4a94      	ldr	r2, [pc, #592]	@ (8001998 <HAL_GPIO_Init+0x2ac>)
 8001748:	4293      	cmp	r3, r2
 800174a:	d04c      	beq.n	80017e6 <HAL_GPIO_Init+0xfa>
 800174c:	4a92      	ldr	r2, [pc, #584]	@ (8001998 <HAL_GPIO_Init+0x2ac>)
 800174e:	4293      	cmp	r3, r2
 8001750:	d863      	bhi.n	800181a <HAL_GPIO_Init+0x12e>
 8001752:	4a92      	ldr	r2, [pc, #584]	@ (800199c <HAL_GPIO_Init+0x2b0>)
 8001754:	4293      	cmp	r3, r2
 8001756:	d046      	beq.n	80017e6 <HAL_GPIO_Init+0xfa>
 8001758:	4a90      	ldr	r2, [pc, #576]	@ (800199c <HAL_GPIO_Init+0x2b0>)
 800175a:	4293      	cmp	r3, r2
 800175c:	d85d      	bhi.n	800181a <HAL_GPIO_Init+0x12e>
 800175e:	2b12      	cmp	r3, #18
 8001760:	d82a      	bhi.n	80017b8 <HAL_GPIO_Init+0xcc>
 8001762:	2b12      	cmp	r3, #18
 8001764:	d859      	bhi.n	800181a <HAL_GPIO_Init+0x12e>
 8001766:	a201      	add	r2, pc, #4	@ (adr r2, 800176c <HAL_GPIO_Init+0x80>)
 8001768:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800176c:	080017e7 	.word	0x080017e7
 8001770:	080017c1 	.word	0x080017c1
 8001774:	080017d3 	.word	0x080017d3
 8001778:	08001815 	.word	0x08001815
 800177c:	0800181b 	.word	0x0800181b
 8001780:	0800181b 	.word	0x0800181b
 8001784:	0800181b 	.word	0x0800181b
 8001788:	0800181b 	.word	0x0800181b
 800178c:	0800181b 	.word	0x0800181b
 8001790:	0800181b 	.word	0x0800181b
 8001794:	0800181b 	.word	0x0800181b
 8001798:	0800181b 	.word	0x0800181b
 800179c:	0800181b 	.word	0x0800181b
 80017a0:	0800181b 	.word	0x0800181b
 80017a4:	0800181b 	.word	0x0800181b
 80017a8:	0800181b 	.word	0x0800181b
 80017ac:	0800181b 	.word	0x0800181b
 80017b0:	080017c9 	.word	0x080017c9
 80017b4:	080017dd 	.word	0x080017dd
 80017b8:	4a79      	ldr	r2, [pc, #484]	@ (80019a0 <HAL_GPIO_Init+0x2b4>)
 80017ba:	4293      	cmp	r3, r2
 80017bc:	d013      	beq.n	80017e6 <HAL_GPIO_Init+0xfa>
 80017be:	e02c      	b.n	800181a <HAL_GPIO_Init+0x12e>
 80017c0:	683b      	ldr	r3, [r7, #0]
 80017c2:	68db      	ldr	r3, [r3, #12]
 80017c4:	623b      	str	r3, [r7, #32]
 80017c6:	e029      	b.n	800181c <HAL_GPIO_Init+0x130>
 80017c8:	683b      	ldr	r3, [r7, #0]
 80017ca:	68db      	ldr	r3, [r3, #12]
 80017cc:	3304      	adds	r3, #4
 80017ce:	623b      	str	r3, [r7, #32]
 80017d0:	e024      	b.n	800181c <HAL_GPIO_Init+0x130>
 80017d2:	683b      	ldr	r3, [r7, #0]
 80017d4:	68db      	ldr	r3, [r3, #12]
 80017d6:	3308      	adds	r3, #8
 80017d8:	623b      	str	r3, [r7, #32]
 80017da:	e01f      	b.n	800181c <HAL_GPIO_Init+0x130>
 80017dc:	683b      	ldr	r3, [r7, #0]
 80017de:	68db      	ldr	r3, [r3, #12]
 80017e0:	330c      	adds	r3, #12
 80017e2:	623b      	str	r3, [r7, #32]
 80017e4:	e01a      	b.n	800181c <HAL_GPIO_Init+0x130>
 80017e6:	683b      	ldr	r3, [r7, #0]
 80017e8:	689b      	ldr	r3, [r3, #8]
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	d102      	bne.n	80017f4 <HAL_GPIO_Init+0x108>
 80017ee:	2304      	movs	r3, #4
 80017f0:	623b      	str	r3, [r7, #32]
 80017f2:	e013      	b.n	800181c <HAL_GPIO_Init+0x130>
 80017f4:	683b      	ldr	r3, [r7, #0]
 80017f6:	689b      	ldr	r3, [r3, #8]
 80017f8:	2b01      	cmp	r3, #1
 80017fa:	d105      	bne.n	8001808 <HAL_GPIO_Init+0x11c>
 80017fc:	2308      	movs	r3, #8
 80017fe:	623b      	str	r3, [r7, #32]
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	69fa      	ldr	r2, [r7, #28]
 8001804:	611a      	str	r2, [r3, #16]
 8001806:	e009      	b.n	800181c <HAL_GPIO_Init+0x130>
 8001808:	2308      	movs	r3, #8
 800180a:	623b      	str	r3, [r7, #32]
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	69fa      	ldr	r2, [r7, #28]
 8001810:	615a      	str	r2, [r3, #20]
 8001812:	e003      	b.n	800181c <HAL_GPIO_Init+0x130>
 8001814:	2300      	movs	r3, #0
 8001816:	623b      	str	r3, [r7, #32]
 8001818:	e000      	b.n	800181c <HAL_GPIO_Init+0x130>
 800181a:	bf00      	nop
 800181c:	69bb      	ldr	r3, [r7, #24]
 800181e:	2bff      	cmp	r3, #255	@ 0xff
 8001820:	d801      	bhi.n	8001826 <HAL_GPIO_Init+0x13a>
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	e001      	b.n	800182a <HAL_GPIO_Init+0x13e>
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	3304      	adds	r3, #4
 800182a:	617b      	str	r3, [r7, #20]
 800182c:	69bb      	ldr	r3, [r7, #24]
 800182e:	2bff      	cmp	r3, #255	@ 0xff
 8001830:	d802      	bhi.n	8001838 <HAL_GPIO_Init+0x14c>
 8001832:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001834:	009b      	lsls	r3, r3, #2
 8001836:	e002      	b.n	800183e <HAL_GPIO_Init+0x152>
 8001838:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800183a:	3b08      	subs	r3, #8
 800183c:	009b      	lsls	r3, r3, #2
 800183e:	613b      	str	r3, [r7, #16]
 8001840:	697b      	ldr	r3, [r7, #20]
 8001842:	681a      	ldr	r2, [r3, #0]
 8001844:	210f      	movs	r1, #15
 8001846:	693b      	ldr	r3, [r7, #16]
 8001848:	fa01 f303 	lsl.w	r3, r1, r3
 800184c:	43db      	mvns	r3, r3
 800184e:	401a      	ands	r2, r3
 8001850:	6a39      	ldr	r1, [r7, #32]
 8001852:	693b      	ldr	r3, [r7, #16]
 8001854:	fa01 f303 	lsl.w	r3, r1, r3
 8001858:	431a      	orrs	r2, r3
 800185a:	697b      	ldr	r3, [r7, #20]
 800185c:	601a      	str	r2, [r3, #0]
 800185e:	683b      	ldr	r3, [r7, #0]
 8001860:	685b      	ldr	r3, [r3, #4]
 8001862:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001866:	2b00      	cmp	r3, #0
 8001868:	f000 80b1 	beq.w	80019ce <HAL_GPIO_Init+0x2e2>
 800186c:	4b4d      	ldr	r3, [pc, #308]	@ (80019a4 <HAL_GPIO_Init+0x2b8>)
 800186e:	699b      	ldr	r3, [r3, #24]
 8001870:	4a4c      	ldr	r2, [pc, #304]	@ (80019a4 <HAL_GPIO_Init+0x2b8>)
 8001872:	f043 0301 	orr.w	r3, r3, #1
 8001876:	6193      	str	r3, [r2, #24]
 8001878:	4b4a      	ldr	r3, [pc, #296]	@ (80019a4 <HAL_GPIO_Init+0x2b8>)
 800187a:	699b      	ldr	r3, [r3, #24]
 800187c:	f003 0301 	and.w	r3, r3, #1
 8001880:	60bb      	str	r3, [r7, #8]
 8001882:	68bb      	ldr	r3, [r7, #8]
 8001884:	4a48      	ldr	r2, [pc, #288]	@ (80019a8 <HAL_GPIO_Init+0x2bc>)
 8001886:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001888:	089b      	lsrs	r3, r3, #2
 800188a:	3302      	adds	r3, #2
 800188c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001890:	60fb      	str	r3, [r7, #12]
 8001892:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001894:	f003 0303 	and.w	r3, r3, #3
 8001898:	009b      	lsls	r3, r3, #2
 800189a:	220f      	movs	r2, #15
 800189c:	fa02 f303 	lsl.w	r3, r2, r3
 80018a0:	43db      	mvns	r3, r3
 80018a2:	68fa      	ldr	r2, [r7, #12]
 80018a4:	4013      	ands	r3, r2
 80018a6:	60fb      	str	r3, [r7, #12]
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	4a40      	ldr	r2, [pc, #256]	@ (80019ac <HAL_GPIO_Init+0x2c0>)
 80018ac:	4293      	cmp	r3, r2
 80018ae:	d013      	beq.n	80018d8 <HAL_GPIO_Init+0x1ec>
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	4a3f      	ldr	r2, [pc, #252]	@ (80019b0 <HAL_GPIO_Init+0x2c4>)
 80018b4:	4293      	cmp	r3, r2
 80018b6:	d00d      	beq.n	80018d4 <HAL_GPIO_Init+0x1e8>
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	4a3e      	ldr	r2, [pc, #248]	@ (80019b4 <HAL_GPIO_Init+0x2c8>)
 80018bc:	4293      	cmp	r3, r2
 80018be:	d007      	beq.n	80018d0 <HAL_GPIO_Init+0x1e4>
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	4a3d      	ldr	r2, [pc, #244]	@ (80019b8 <HAL_GPIO_Init+0x2cc>)
 80018c4:	4293      	cmp	r3, r2
 80018c6:	d101      	bne.n	80018cc <HAL_GPIO_Init+0x1e0>
 80018c8:	2303      	movs	r3, #3
 80018ca:	e006      	b.n	80018da <HAL_GPIO_Init+0x1ee>
 80018cc:	2304      	movs	r3, #4
 80018ce:	e004      	b.n	80018da <HAL_GPIO_Init+0x1ee>
 80018d0:	2302      	movs	r3, #2
 80018d2:	e002      	b.n	80018da <HAL_GPIO_Init+0x1ee>
 80018d4:	2301      	movs	r3, #1
 80018d6:	e000      	b.n	80018da <HAL_GPIO_Init+0x1ee>
 80018d8:	2300      	movs	r3, #0
 80018da:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80018dc:	f002 0203 	and.w	r2, r2, #3
 80018e0:	0092      	lsls	r2, r2, #2
 80018e2:	4093      	lsls	r3, r2
 80018e4:	68fa      	ldr	r2, [r7, #12]
 80018e6:	4313      	orrs	r3, r2
 80018e8:	60fb      	str	r3, [r7, #12]
 80018ea:	492f      	ldr	r1, [pc, #188]	@ (80019a8 <HAL_GPIO_Init+0x2bc>)
 80018ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80018ee:	089b      	lsrs	r3, r3, #2
 80018f0:	3302      	adds	r3, #2
 80018f2:	68fa      	ldr	r2, [r7, #12]
 80018f4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80018f8:	683b      	ldr	r3, [r7, #0]
 80018fa:	685b      	ldr	r3, [r3, #4]
 80018fc:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001900:	2b00      	cmp	r3, #0
 8001902:	d006      	beq.n	8001912 <HAL_GPIO_Init+0x226>
 8001904:	4b2d      	ldr	r3, [pc, #180]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 8001906:	689a      	ldr	r2, [r3, #8]
 8001908:	492c      	ldr	r1, [pc, #176]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 800190a:	69bb      	ldr	r3, [r7, #24]
 800190c:	4313      	orrs	r3, r2
 800190e:	608b      	str	r3, [r1, #8]
 8001910:	e006      	b.n	8001920 <HAL_GPIO_Init+0x234>
 8001912:	4b2a      	ldr	r3, [pc, #168]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 8001914:	689a      	ldr	r2, [r3, #8]
 8001916:	69bb      	ldr	r3, [r7, #24]
 8001918:	43db      	mvns	r3, r3
 800191a:	4928      	ldr	r1, [pc, #160]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 800191c:	4013      	ands	r3, r2
 800191e:	608b      	str	r3, [r1, #8]
 8001920:	683b      	ldr	r3, [r7, #0]
 8001922:	685b      	ldr	r3, [r3, #4]
 8001924:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001928:	2b00      	cmp	r3, #0
 800192a:	d006      	beq.n	800193a <HAL_GPIO_Init+0x24e>
 800192c:	4b23      	ldr	r3, [pc, #140]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 800192e:	68da      	ldr	r2, [r3, #12]
 8001930:	4922      	ldr	r1, [pc, #136]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 8001932:	69bb      	ldr	r3, [r7, #24]
 8001934:	4313      	orrs	r3, r2
 8001936:	60cb      	str	r3, [r1, #12]
 8001938:	e006      	b.n	8001948 <HAL_GPIO_Init+0x25c>
 800193a:	4b20      	ldr	r3, [pc, #128]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 800193c:	68da      	ldr	r2, [r3, #12]
 800193e:	69bb      	ldr	r3, [r7, #24]
 8001940:	43db      	mvns	r3, r3
 8001942:	491e      	ldr	r1, [pc, #120]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 8001944:	4013      	ands	r3, r2
 8001946:	60cb      	str	r3, [r1, #12]
 8001948:	683b      	ldr	r3, [r7, #0]
 800194a:	685b      	ldr	r3, [r3, #4]
 800194c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001950:	2b00      	cmp	r3, #0
 8001952:	d006      	beq.n	8001962 <HAL_GPIO_Init+0x276>
 8001954:	4b19      	ldr	r3, [pc, #100]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 8001956:	685a      	ldr	r2, [r3, #4]
 8001958:	4918      	ldr	r1, [pc, #96]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 800195a:	69bb      	ldr	r3, [r7, #24]
 800195c:	4313      	orrs	r3, r2
 800195e:	604b      	str	r3, [r1, #4]
 8001960:	e006      	b.n	8001970 <HAL_GPIO_Init+0x284>
 8001962:	4b16      	ldr	r3, [pc, #88]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 8001964:	685a      	ldr	r2, [r3, #4]
 8001966:	69bb      	ldr	r3, [r7, #24]
 8001968:	43db      	mvns	r3, r3
 800196a:	4914      	ldr	r1, [pc, #80]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 800196c:	4013      	ands	r3, r2
 800196e:	604b      	str	r3, [r1, #4]
 8001970:	683b      	ldr	r3, [r7, #0]
 8001972:	685b      	ldr	r3, [r3, #4]
 8001974:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001978:	2b00      	cmp	r3, #0
 800197a:	d021      	beq.n	80019c0 <HAL_GPIO_Init+0x2d4>
 800197c:	4b0f      	ldr	r3, [pc, #60]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 800197e:	681a      	ldr	r2, [r3, #0]
 8001980:	490e      	ldr	r1, [pc, #56]	@ (80019bc <HAL_GPIO_Init+0x2d0>)
 8001982:	69bb      	ldr	r3, [r7, #24]
 8001984:	4313      	orrs	r3, r2
 8001986:	600b      	str	r3, [r1, #0]
 8001988:	e021      	b.n	80019ce <HAL_GPIO_Init+0x2e2>
 800198a:	bf00      	nop
 800198c:	10320000 	.word	0x10320000
 8001990:	10310000 	.word	0x10310000
 8001994:	10220000 	.word	0x10220000
 8001998:	10210000 	.word	0x10210000
 800199c:	10120000 	.word	0x10120000
 80019a0:	10110000 	.word	0x10110000
 80019a4:	40021000 	.word	0x40021000
 80019a8:	40010000 	.word	0x40010000
 80019ac:	40010800 	.word	0x40010800
 80019b0:	40010c00 	.word	0x40010c00
 80019b4:	40011000 	.word	0x40011000
 80019b8:	40011400 	.word	0x40011400
 80019bc:	40010400 	.word	0x40010400
 80019c0:	4b0b      	ldr	r3, [pc, #44]	@ (80019f0 <HAL_GPIO_Init+0x304>)
 80019c2:	681a      	ldr	r2, [r3, #0]
 80019c4:	69bb      	ldr	r3, [r7, #24]
 80019c6:	43db      	mvns	r3, r3
 80019c8:	4909      	ldr	r1, [pc, #36]	@ (80019f0 <HAL_GPIO_Init+0x304>)
 80019ca:	4013      	ands	r3, r2
 80019cc:	600b      	str	r3, [r1, #0]
 80019ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80019d0:	3301      	adds	r3, #1
 80019d2:	627b      	str	r3, [r7, #36]	@ 0x24
 80019d4:	683b      	ldr	r3, [r7, #0]
 80019d6:	681a      	ldr	r2, [r3, #0]
 80019d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80019da:	fa22 f303 	lsr.w	r3, r2, r3
 80019de:	2b00      	cmp	r3, #0
 80019e0:	f47f ae8e 	bne.w	8001700 <HAL_GPIO_Init+0x14>
 80019e4:	bf00      	nop
 80019e6:	bf00      	nop
 80019e8:	372c      	adds	r7, #44	@ 0x2c
 80019ea:	46bd      	mov	sp, r7
 80019ec:	bc80      	pop	{r7}
 80019ee:	4770      	bx	lr
 80019f0:	40010400 	.word	0x40010400

080019f4 <HAL_GPIO_ReadPin>:
 80019f4:	b480      	push	{r7}
 80019f6:	b085      	sub	sp, #20
 80019f8:	af00      	add	r7, sp, #0
 80019fa:	6078      	str	r0, [r7, #4]
 80019fc:	460b      	mov	r3, r1
 80019fe:	807b      	strh	r3, [r7, #2]
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	689a      	ldr	r2, [r3, #8]
 8001a04:	887b      	ldrh	r3, [r7, #2]
 8001a06:	4013      	ands	r3, r2
 8001a08:	2b00      	cmp	r3, #0
 8001a0a:	d002      	beq.n	8001a12 <HAL_GPIO_ReadPin+0x1e>
 8001a0c:	2301      	movs	r3, #1
 8001a0e:	73fb      	strb	r3, [r7, #15]
 8001a10:	e001      	b.n	8001a16 <HAL_GPIO_ReadPin+0x22>
 8001a12:	2300      	movs	r3, #0
 8001a14:	73fb      	strb	r3, [r7, #15]
 8001a16:	7bfb      	ldrb	r3, [r7, #15]
 8001a18:	4618      	mov	r0, r3
 8001a1a:	3714      	adds	r7, #20
 8001a1c:	46bd      	mov	sp, r7
 8001a1e:	bc80      	pop	{r7}
 8001a20:	4770      	bx	lr

08001a22 <HAL_GPIO_WritePin>:
 8001a22:	b480      	push	{r7}
 8001a24:	b083      	sub	sp, #12
 8001a26:	af00      	add	r7, sp, #0
 8001a28:	6078      	str	r0, [r7, #4]
 8001a2a:	460b      	mov	r3, r1
 8001a2c:	807b      	strh	r3, [r7, #2]
 8001a2e:	4613      	mov	r3, r2
 8001a30:	707b      	strb	r3, [r7, #1]
 8001a32:	787b      	ldrb	r3, [r7, #1]
 8001a34:	2b00      	cmp	r3, #0
 8001a36:	d003      	beq.n	8001a40 <HAL_GPIO_WritePin+0x1e>
 8001a38:	887a      	ldrh	r2, [r7, #2]
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	611a      	str	r2, [r3, #16]
 8001a3e:	e003      	b.n	8001a48 <HAL_GPIO_WritePin+0x26>
 8001a40:	887b      	ldrh	r3, [r7, #2]
 8001a42:	041a      	lsls	r2, r3, #16
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	611a      	str	r2, [r3, #16]
 8001a48:	bf00      	nop
 8001a4a:	370c      	adds	r7, #12
 8001a4c:	46bd      	mov	sp, r7
 8001a4e:	bc80      	pop	{r7}
 8001a50:	4770      	bx	lr

08001a52 <HAL_GPIO_TogglePin>:
 8001a52:	b480      	push	{r7}
 8001a54:	b085      	sub	sp, #20
 8001a56:	af00      	add	r7, sp, #0
 8001a58:	6078      	str	r0, [r7, #4]
 8001a5a:	460b      	mov	r3, r1
 8001a5c:	807b      	strh	r3, [r7, #2]
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	68db      	ldr	r3, [r3, #12]
 8001a62:	60fb      	str	r3, [r7, #12]
 8001a64:	887a      	ldrh	r2, [r7, #2]
 8001a66:	68fb      	ldr	r3, [r7, #12]
 8001a68:	4013      	ands	r3, r2
 8001a6a:	041a      	lsls	r2, r3, #16
 8001a6c:	68fb      	ldr	r3, [r7, #12]
 8001a6e:	43d9      	mvns	r1, r3
 8001a70:	887b      	ldrh	r3, [r7, #2]
 8001a72:	400b      	ands	r3, r1
 8001a74:	431a      	orrs	r2, r3
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	611a      	str	r2, [r3, #16]
 8001a7a:	bf00      	nop
 8001a7c:	3714      	adds	r7, #20
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	bc80      	pop	{r7}
 8001a82:	4770      	bx	lr

08001a84 <HAL_I2C_Init>:
 8001a84:	b580      	push	{r7, lr}
 8001a86:	b084      	sub	sp, #16
 8001a88:	af00      	add	r7, sp, #0
 8001a8a:	6078      	str	r0, [r7, #4]
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	2b00      	cmp	r3, #0
 8001a90:	d101      	bne.n	8001a96 <HAL_I2C_Init+0x12>
 8001a92:	2301      	movs	r3, #1
 8001a94:	e12b      	b.n	8001cee <HAL_I2C_Init+0x26a>
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001a9c:	b2db      	uxtb	r3, r3
 8001a9e:	2b00      	cmp	r3, #0
 8001aa0:	d106      	bne.n	8001ab0 <HAL_I2C_Init+0x2c>
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	2200      	movs	r2, #0
 8001aa6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001aaa:	6878      	ldr	r0, [r7, #4]
 8001aac:	f7ff fb7e 	bl	80011ac <HAL_I2C_MspInit>
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	2224      	movs	r2, #36	@ 0x24
 8001ab4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ab8:	687b      	ldr	r3, [r7, #4]
 8001aba:	681b      	ldr	r3, [r3, #0]
 8001abc:	681a      	ldr	r2, [r3, #0]
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	f022 0201 	bic.w	r2, r2, #1
 8001ac6:	601a      	str	r2, [r3, #0]
 8001ac8:	687b      	ldr	r3, [r7, #4]
 8001aca:	681b      	ldr	r3, [r3, #0]
 8001acc:	681a      	ldr	r2, [r3, #0]
 8001ace:	687b      	ldr	r3, [r7, #4]
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001ad6:	601a      	str	r2, [r3, #0]
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	681b      	ldr	r3, [r3, #0]
 8001adc:	681a      	ldr	r2, [r3, #0]
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8001ae6:	601a      	str	r2, [r3, #0]
 8001ae8:	f001 f832 	bl	8002b50 <HAL_RCC_GetPCLK1Freq>
 8001aec:	60f8      	str	r0, [r7, #12]
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	685b      	ldr	r3, [r3, #4]
 8001af2:	4a81      	ldr	r2, [pc, #516]	@ (8001cf8 <HAL_I2C_Init+0x274>)
 8001af4:	4293      	cmp	r3, r2
 8001af6:	d807      	bhi.n	8001b08 <HAL_I2C_Init+0x84>
 8001af8:	68fb      	ldr	r3, [r7, #12]
 8001afa:	4a80      	ldr	r2, [pc, #512]	@ (8001cfc <HAL_I2C_Init+0x278>)
 8001afc:	4293      	cmp	r3, r2
 8001afe:	bf94      	ite	ls
 8001b00:	2301      	movls	r3, #1
 8001b02:	2300      	movhi	r3, #0
 8001b04:	b2db      	uxtb	r3, r3
 8001b06:	e006      	b.n	8001b16 <HAL_I2C_Init+0x92>
 8001b08:	68fb      	ldr	r3, [r7, #12]
 8001b0a:	4a7d      	ldr	r2, [pc, #500]	@ (8001d00 <HAL_I2C_Init+0x27c>)
 8001b0c:	4293      	cmp	r3, r2
 8001b0e:	bf94      	ite	ls
 8001b10:	2301      	movls	r3, #1
 8001b12:	2300      	movhi	r3, #0
 8001b14:	b2db      	uxtb	r3, r3
 8001b16:	2b00      	cmp	r3, #0
 8001b18:	d001      	beq.n	8001b1e <HAL_I2C_Init+0x9a>
 8001b1a:	2301      	movs	r3, #1
 8001b1c:	e0e7      	b.n	8001cee <HAL_I2C_Init+0x26a>
 8001b1e:	68fb      	ldr	r3, [r7, #12]
 8001b20:	4a78      	ldr	r2, [pc, #480]	@ (8001d04 <HAL_I2C_Init+0x280>)
 8001b22:	fba2 2303 	umull	r2, r3, r2, r3
 8001b26:	0c9b      	lsrs	r3, r3, #18
 8001b28:	60bb      	str	r3, [r7, #8]
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	681b      	ldr	r3, [r3, #0]
 8001b2e:	685b      	ldr	r3, [r3, #4]
 8001b30:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	68ba      	ldr	r2, [r7, #8]
 8001b3a:	430a      	orrs	r2, r1
 8001b3c:	605a      	str	r2, [r3, #4]
 8001b3e:	687b      	ldr	r3, [r7, #4]
 8001b40:	681b      	ldr	r3, [r3, #0]
 8001b42:	6a1b      	ldr	r3, [r3, #32]
 8001b44:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	685b      	ldr	r3, [r3, #4]
 8001b4c:	4a6a      	ldr	r2, [pc, #424]	@ (8001cf8 <HAL_I2C_Init+0x274>)
 8001b4e:	4293      	cmp	r3, r2
 8001b50:	d802      	bhi.n	8001b58 <HAL_I2C_Init+0xd4>
 8001b52:	68bb      	ldr	r3, [r7, #8]
 8001b54:	3301      	adds	r3, #1
 8001b56:	e009      	b.n	8001b6c <HAL_I2C_Init+0xe8>
 8001b58:	68bb      	ldr	r3, [r7, #8]
 8001b5a:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001b5e:	fb02 f303 	mul.w	r3, r2, r3
 8001b62:	4a69      	ldr	r2, [pc, #420]	@ (8001d08 <HAL_I2C_Init+0x284>)
 8001b64:	fba2 2303 	umull	r2, r3, r2, r3
 8001b68:	099b      	lsrs	r3, r3, #6
 8001b6a:	3301      	adds	r3, #1
 8001b6c:	687a      	ldr	r2, [r7, #4]
 8001b6e:	6812      	ldr	r2, [r2, #0]
 8001b70:	430b      	orrs	r3, r1
 8001b72:	6213      	str	r3, [r2, #32]
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	69db      	ldr	r3, [r3, #28]
 8001b7a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8001b7e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	685b      	ldr	r3, [r3, #4]
 8001b86:	495c      	ldr	r1, [pc, #368]	@ (8001cf8 <HAL_I2C_Init+0x274>)
 8001b88:	428b      	cmp	r3, r1
 8001b8a:	d819      	bhi.n	8001bc0 <HAL_I2C_Init+0x13c>
 8001b8c:	68fb      	ldr	r3, [r7, #12]
 8001b8e:	1e59      	subs	r1, r3, #1
 8001b90:	687b      	ldr	r3, [r7, #4]
 8001b92:	685b      	ldr	r3, [r3, #4]
 8001b94:	005b      	lsls	r3, r3, #1
 8001b96:	fbb1 f3f3 	udiv	r3, r1, r3
 8001b9a:	1c59      	adds	r1, r3, #1
 8001b9c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8001ba0:	400b      	ands	r3, r1
 8001ba2:	2b00      	cmp	r3, #0
 8001ba4:	d00a      	beq.n	8001bbc <HAL_I2C_Init+0x138>
 8001ba6:	68fb      	ldr	r3, [r7, #12]
 8001ba8:	1e59      	subs	r1, r3, #1
 8001baa:	687b      	ldr	r3, [r7, #4]
 8001bac:	685b      	ldr	r3, [r3, #4]
 8001bae:	005b      	lsls	r3, r3, #1
 8001bb0:	fbb1 f3f3 	udiv	r3, r1, r3
 8001bb4:	3301      	adds	r3, #1
 8001bb6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001bba:	e051      	b.n	8001c60 <HAL_I2C_Init+0x1dc>
 8001bbc:	2304      	movs	r3, #4
 8001bbe:	e04f      	b.n	8001c60 <HAL_I2C_Init+0x1dc>
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	689b      	ldr	r3, [r3, #8]
 8001bc4:	2b00      	cmp	r3, #0
 8001bc6:	d111      	bne.n	8001bec <HAL_I2C_Init+0x168>
 8001bc8:	68fb      	ldr	r3, [r7, #12]
 8001bca:	1e58      	subs	r0, r3, #1
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	6859      	ldr	r1, [r3, #4]
 8001bd0:	460b      	mov	r3, r1
 8001bd2:	005b      	lsls	r3, r3, #1
 8001bd4:	440b      	add	r3, r1
 8001bd6:	fbb0 f3f3 	udiv	r3, r0, r3
 8001bda:	3301      	adds	r3, #1
 8001bdc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001be0:	2b00      	cmp	r3, #0
 8001be2:	bf0c      	ite	eq
 8001be4:	2301      	moveq	r3, #1
 8001be6:	2300      	movne	r3, #0
 8001be8:	b2db      	uxtb	r3, r3
 8001bea:	e012      	b.n	8001c12 <HAL_I2C_Init+0x18e>
 8001bec:	68fb      	ldr	r3, [r7, #12]
 8001bee:	1e58      	subs	r0, r3, #1
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	6859      	ldr	r1, [r3, #4]
 8001bf4:	460b      	mov	r3, r1
 8001bf6:	009b      	lsls	r3, r3, #2
 8001bf8:	440b      	add	r3, r1
 8001bfa:	0099      	lsls	r1, r3, #2
 8001bfc:	440b      	add	r3, r1
 8001bfe:	fbb0 f3f3 	udiv	r3, r0, r3
 8001c02:	3301      	adds	r3, #1
 8001c04:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c08:	2b00      	cmp	r3, #0
 8001c0a:	bf0c      	ite	eq
 8001c0c:	2301      	moveq	r3, #1
 8001c0e:	2300      	movne	r3, #0
 8001c10:	b2db      	uxtb	r3, r3
 8001c12:	2b00      	cmp	r3, #0
 8001c14:	d001      	beq.n	8001c1a <HAL_I2C_Init+0x196>
 8001c16:	2301      	movs	r3, #1
 8001c18:	e022      	b.n	8001c60 <HAL_I2C_Init+0x1dc>
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	689b      	ldr	r3, [r3, #8]
 8001c1e:	2b00      	cmp	r3, #0
 8001c20:	d10e      	bne.n	8001c40 <HAL_I2C_Init+0x1bc>
 8001c22:	68fb      	ldr	r3, [r7, #12]
 8001c24:	1e58      	subs	r0, r3, #1
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	6859      	ldr	r1, [r3, #4]
 8001c2a:	460b      	mov	r3, r1
 8001c2c:	005b      	lsls	r3, r3, #1
 8001c2e:	440b      	add	r3, r1
 8001c30:	fbb0 f3f3 	udiv	r3, r0, r3
 8001c34:	3301      	adds	r3, #1
 8001c36:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c3a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001c3e:	e00f      	b.n	8001c60 <HAL_I2C_Init+0x1dc>
 8001c40:	68fb      	ldr	r3, [r7, #12]
 8001c42:	1e58      	subs	r0, r3, #1
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	6859      	ldr	r1, [r3, #4]
 8001c48:	460b      	mov	r3, r1
 8001c4a:	009b      	lsls	r3, r3, #2
 8001c4c:	440b      	add	r3, r1
 8001c4e:	0099      	lsls	r1, r3, #2
 8001c50:	440b      	add	r3, r1
 8001c52:	fbb0 f3f3 	udiv	r3, r0, r3
 8001c56:	3301      	adds	r3, #1
 8001c58:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c5c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001c60:	6879      	ldr	r1, [r7, #4]
 8001c62:	6809      	ldr	r1, [r1, #0]
 8001c64:	4313      	orrs	r3, r2
 8001c66:	61cb      	str	r3, [r1, #28]
 8001c68:	687b      	ldr	r3, [r7, #4]
 8001c6a:	681b      	ldr	r3, [r3, #0]
 8001c6c:	681b      	ldr	r3, [r3, #0]
 8001c6e:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	69da      	ldr	r2, [r3, #28]
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	6a1b      	ldr	r3, [r3, #32]
 8001c7a:	431a      	orrs	r2, r3
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	430a      	orrs	r2, r1
 8001c82:	601a      	str	r2, [r3, #0]
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	689b      	ldr	r3, [r3, #8]
 8001c8a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8001c8e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8001c92:	687a      	ldr	r2, [r7, #4]
 8001c94:	6911      	ldr	r1, [r2, #16]
 8001c96:	687a      	ldr	r2, [r7, #4]
 8001c98:	68d2      	ldr	r2, [r2, #12]
 8001c9a:	4311      	orrs	r1, r2
 8001c9c:	687a      	ldr	r2, [r7, #4]
 8001c9e:	6812      	ldr	r2, [r2, #0]
 8001ca0:	430b      	orrs	r3, r1
 8001ca2:	6093      	str	r3, [r2, #8]
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	68db      	ldr	r3, [r3, #12]
 8001caa:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	695a      	ldr	r2, [r3, #20]
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	699b      	ldr	r3, [r3, #24]
 8001cb6:	431a      	orrs	r2, r3
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	430a      	orrs	r2, r1
 8001cbe:	60da      	str	r2, [r3, #12]
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	681a      	ldr	r2, [r3, #0]
 8001cc6:	687b      	ldr	r3, [r7, #4]
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	f042 0201 	orr.w	r2, r2, #1
 8001cce:	601a      	str	r2, [r3, #0]
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	2200      	movs	r2, #0
 8001cd4:	641a      	str	r2, [r3, #64]	@ 0x40
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	2220      	movs	r2, #32
 8001cda:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	2200      	movs	r2, #0
 8001ce2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001cec:	2300      	movs	r3, #0
 8001cee:	4618      	mov	r0, r3
 8001cf0:	3710      	adds	r7, #16
 8001cf2:	46bd      	mov	sp, r7
 8001cf4:	bd80      	pop	{r7, pc}
 8001cf6:	bf00      	nop
 8001cf8:	000186a0 	.word	0x000186a0
 8001cfc:	001e847f 	.word	0x001e847f
 8001d00:	003d08ff 	.word	0x003d08ff
 8001d04:	431bde83 	.word	0x431bde83
 8001d08:	10624dd3 	.word	0x10624dd3

08001d0c <HAL_I2C_Master_Transmit>:
 8001d0c:	b580      	push	{r7, lr}
 8001d0e:	b088      	sub	sp, #32
 8001d10:	af02      	add	r7, sp, #8
 8001d12:	60f8      	str	r0, [r7, #12]
 8001d14:	607a      	str	r2, [r7, #4]
 8001d16:	461a      	mov	r2, r3
 8001d18:	460b      	mov	r3, r1
 8001d1a:	817b      	strh	r3, [r7, #10]
 8001d1c:	4613      	mov	r3, r2
 8001d1e:	813b      	strh	r3, [r7, #8]
 8001d20:	f7ff fba8 	bl	8001474 <HAL_GetTick>
 8001d24:	6178      	str	r0, [r7, #20]
 8001d26:	68fb      	ldr	r3, [r7, #12]
 8001d28:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001d2c:	b2db      	uxtb	r3, r3
 8001d2e:	2b20      	cmp	r3, #32
 8001d30:	f040 80e0 	bne.w	8001ef4 <HAL_I2C_Master_Transmit+0x1e8>
 8001d34:	697b      	ldr	r3, [r7, #20]
 8001d36:	9300      	str	r3, [sp, #0]
 8001d38:	2319      	movs	r3, #25
 8001d3a:	2201      	movs	r2, #1
 8001d3c:	4970      	ldr	r1, [pc, #448]	@ (8001f00 <HAL_I2C_Master_Transmit+0x1f4>)
 8001d3e:	68f8      	ldr	r0, [r7, #12]
 8001d40:	f000 f964 	bl	800200c <I2C_WaitOnFlagUntilTimeout>
 8001d44:	4603      	mov	r3, r0
 8001d46:	2b00      	cmp	r3, #0
 8001d48:	d001      	beq.n	8001d4e <HAL_I2C_Master_Transmit+0x42>
 8001d4a:	2302      	movs	r3, #2
 8001d4c:	e0d3      	b.n	8001ef6 <HAL_I2C_Master_Transmit+0x1ea>
 8001d4e:	68fb      	ldr	r3, [r7, #12]
 8001d50:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001d54:	2b01      	cmp	r3, #1
 8001d56:	d101      	bne.n	8001d5c <HAL_I2C_Master_Transmit+0x50>
 8001d58:	2302      	movs	r3, #2
 8001d5a:	e0cc      	b.n	8001ef6 <HAL_I2C_Master_Transmit+0x1ea>
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	2201      	movs	r2, #1
 8001d60:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001d64:	68fb      	ldr	r3, [r7, #12]
 8001d66:	681b      	ldr	r3, [r3, #0]
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	f003 0301 	and.w	r3, r3, #1
 8001d6e:	2b01      	cmp	r3, #1
 8001d70:	d007      	beq.n	8001d82 <HAL_I2C_Master_Transmit+0x76>
 8001d72:	68fb      	ldr	r3, [r7, #12]
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	681a      	ldr	r2, [r3, #0]
 8001d78:	68fb      	ldr	r3, [r7, #12]
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	f042 0201 	orr.w	r2, r2, #1
 8001d80:	601a      	str	r2, [r3, #0]
 8001d82:	68fb      	ldr	r3, [r7, #12]
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	681a      	ldr	r2, [r3, #0]
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	681b      	ldr	r3, [r3, #0]
 8001d8c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001d90:	601a      	str	r2, [r3, #0]
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	2221      	movs	r2, #33	@ 0x21
 8001d96:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001d9a:	68fb      	ldr	r3, [r7, #12]
 8001d9c:	2210      	movs	r2, #16
 8001d9e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001da2:	68fb      	ldr	r3, [r7, #12]
 8001da4:	2200      	movs	r2, #0
 8001da6:	641a      	str	r2, [r3, #64]	@ 0x40
 8001da8:	68fb      	ldr	r3, [r7, #12]
 8001daa:	687a      	ldr	r2, [r7, #4]
 8001dac:	625a      	str	r2, [r3, #36]	@ 0x24
 8001dae:	68fb      	ldr	r3, [r7, #12]
 8001db0:	893a      	ldrh	r2, [r7, #8]
 8001db2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001db4:	68fb      	ldr	r3, [r7, #12]
 8001db6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001db8:	b29a      	uxth	r2, r3
 8001dba:	68fb      	ldr	r3, [r7, #12]
 8001dbc:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001dbe:	68fb      	ldr	r3, [r7, #12]
 8001dc0:	4a50      	ldr	r2, [pc, #320]	@ (8001f04 <HAL_I2C_Master_Transmit+0x1f8>)
 8001dc2:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001dc4:	8979      	ldrh	r1, [r7, #10]
 8001dc6:	697b      	ldr	r3, [r7, #20]
 8001dc8:	6a3a      	ldr	r2, [r7, #32]
 8001dca:	68f8      	ldr	r0, [r7, #12]
 8001dcc:	f000 f89c 	bl	8001f08 <I2C_MasterRequestWrite>
 8001dd0:	4603      	mov	r3, r0
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	d001      	beq.n	8001dda <HAL_I2C_Master_Transmit+0xce>
 8001dd6:	2301      	movs	r3, #1
 8001dd8:	e08d      	b.n	8001ef6 <HAL_I2C_Master_Transmit+0x1ea>
 8001dda:	2300      	movs	r3, #0
 8001ddc:	613b      	str	r3, [r7, #16]
 8001dde:	68fb      	ldr	r3, [r7, #12]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	695b      	ldr	r3, [r3, #20]
 8001de4:	613b      	str	r3, [r7, #16]
 8001de6:	68fb      	ldr	r3, [r7, #12]
 8001de8:	681b      	ldr	r3, [r3, #0]
 8001dea:	699b      	ldr	r3, [r3, #24]
 8001dec:	613b      	str	r3, [r7, #16]
 8001dee:	693b      	ldr	r3, [r7, #16]
 8001df0:	e066      	b.n	8001ec0 <HAL_I2C_Master_Transmit+0x1b4>
 8001df2:	697a      	ldr	r2, [r7, #20]
 8001df4:	6a39      	ldr	r1, [r7, #32]
 8001df6:	68f8      	ldr	r0, [r7, #12]
 8001df8:	f000 fa22 	bl	8002240 <I2C_WaitOnTXEFlagUntilTimeout>
 8001dfc:	4603      	mov	r3, r0
 8001dfe:	2b00      	cmp	r3, #0
 8001e00:	d00d      	beq.n	8001e1e <HAL_I2C_Master_Transmit+0x112>
 8001e02:	68fb      	ldr	r3, [r7, #12]
 8001e04:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001e06:	2b04      	cmp	r3, #4
 8001e08:	d107      	bne.n	8001e1a <HAL_I2C_Master_Transmit+0x10e>
 8001e0a:	68fb      	ldr	r3, [r7, #12]
 8001e0c:	681b      	ldr	r3, [r3, #0]
 8001e0e:	681a      	ldr	r2, [r3, #0]
 8001e10:	68fb      	ldr	r3, [r7, #12]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001e18:	601a      	str	r2, [r3, #0]
 8001e1a:	2301      	movs	r3, #1
 8001e1c:	e06b      	b.n	8001ef6 <HAL_I2C_Master_Transmit+0x1ea>
 8001e1e:	68fb      	ldr	r3, [r7, #12]
 8001e20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e22:	781a      	ldrb	r2, [r3, #0]
 8001e24:	68fb      	ldr	r3, [r7, #12]
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	611a      	str	r2, [r3, #16]
 8001e2a:	68fb      	ldr	r3, [r7, #12]
 8001e2c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e2e:	1c5a      	adds	r2, r3, #1
 8001e30:	68fb      	ldr	r3, [r7, #12]
 8001e32:	625a      	str	r2, [r3, #36]	@ 0x24
 8001e34:	68fb      	ldr	r3, [r7, #12]
 8001e36:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001e38:	b29b      	uxth	r3, r3
 8001e3a:	3b01      	subs	r3, #1
 8001e3c:	b29a      	uxth	r2, r3
 8001e3e:	68fb      	ldr	r3, [r7, #12]
 8001e40:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001e46:	3b01      	subs	r3, #1
 8001e48:	b29a      	uxth	r2, r3
 8001e4a:	68fb      	ldr	r3, [r7, #12]
 8001e4c:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001e4e:	68fb      	ldr	r3, [r7, #12]
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	695b      	ldr	r3, [r3, #20]
 8001e54:	f003 0304 	and.w	r3, r3, #4
 8001e58:	2b04      	cmp	r3, #4
 8001e5a:	d11b      	bne.n	8001e94 <HAL_I2C_Master_Transmit+0x188>
 8001e5c:	68fb      	ldr	r3, [r7, #12]
 8001e5e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001e60:	2b00      	cmp	r3, #0
 8001e62:	d017      	beq.n	8001e94 <HAL_I2C_Master_Transmit+0x188>
 8001e64:	68fb      	ldr	r3, [r7, #12]
 8001e66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e68:	781a      	ldrb	r2, [r3, #0]
 8001e6a:	68fb      	ldr	r3, [r7, #12]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	611a      	str	r2, [r3, #16]
 8001e70:	68fb      	ldr	r3, [r7, #12]
 8001e72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e74:	1c5a      	adds	r2, r3, #1
 8001e76:	68fb      	ldr	r3, [r7, #12]
 8001e78:	625a      	str	r2, [r3, #36]	@ 0x24
 8001e7a:	68fb      	ldr	r3, [r7, #12]
 8001e7c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001e7e:	b29b      	uxth	r3, r3
 8001e80:	3b01      	subs	r3, #1
 8001e82:	b29a      	uxth	r2, r3
 8001e84:	68fb      	ldr	r3, [r7, #12]
 8001e86:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001e8c:	3b01      	subs	r3, #1
 8001e8e:	b29a      	uxth	r2, r3
 8001e90:	68fb      	ldr	r3, [r7, #12]
 8001e92:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001e94:	697a      	ldr	r2, [r7, #20]
 8001e96:	6a39      	ldr	r1, [r7, #32]
 8001e98:	68f8      	ldr	r0, [r7, #12]
 8001e9a:	f000 fa19 	bl	80022d0 <I2C_WaitOnBTFFlagUntilTimeout>
 8001e9e:	4603      	mov	r3, r0
 8001ea0:	2b00      	cmp	r3, #0
 8001ea2:	d00d      	beq.n	8001ec0 <HAL_I2C_Master_Transmit+0x1b4>
 8001ea4:	68fb      	ldr	r3, [r7, #12]
 8001ea6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ea8:	2b04      	cmp	r3, #4
 8001eaa:	d107      	bne.n	8001ebc <HAL_I2C_Master_Transmit+0x1b0>
 8001eac:	68fb      	ldr	r3, [r7, #12]
 8001eae:	681b      	ldr	r3, [r3, #0]
 8001eb0:	681a      	ldr	r2, [r3, #0]
 8001eb2:	68fb      	ldr	r3, [r7, #12]
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001eba:	601a      	str	r2, [r3, #0]
 8001ebc:	2301      	movs	r3, #1
 8001ebe:	e01a      	b.n	8001ef6 <HAL_I2C_Master_Transmit+0x1ea>
 8001ec0:	68fb      	ldr	r3, [r7, #12]
 8001ec2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001ec4:	2b00      	cmp	r3, #0
 8001ec6:	d194      	bne.n	8001df2 <HAL_I2C_Master_Transmit+0xe6>
 8001ec8:	68fb      	ldr	r3, [r7, #12]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	681a      	ldr	r2, [r3, #0]
 8001ece:	68fb      	ldr	r3, [r7, #12]
 8001ed0:	681b      	ldr	r3, [r3, #0]
 8001ed2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001ed6:	601a      	str	r2, [r3, #0]
 8001ed8:	68fb      	ldr	r3, [r7, #12]
 8001eda:	2220      	movs	r2, #32
 8001edc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ee0:	68fb      	ldr	r3, [r7, #12]
 8001ee2:	2200      	movs	r2, #0
 8001ee4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001ee8:	68fb      	ldr	r3, [r7, #12]
 8001eea:	2200      	movs	r2, #0
 8001eec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001ef0:	2300      	movs	r3, #0
 8001ef2:	e000      	b.n	8001ef6 <HAL_I2C_Master_Transmit+0x1ea>
 8001ef4:	2302      	movs	r3, #2
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	3718      	adds	r7, #24
 8001efa:	46bd      	mov	sp, r7
 8001efc:	bd80      	pop	{r7, pc}
 8001efe:	bf00      	nop
 8001f00:	00100002 	.word	0x00100002
 8001f04:	ffff0000 	.word	0xffff0000

08001f08 <I2C_MasterRequestWrite>:
 8001f08:	b580      	push	{r7, lr}
 8001f0a:	b088      	sub	sp, #32
 8001f0c:	af02      	add	r7, sp, #8
 8001f0e:	60f8      	str	r0, [r7, #12]
 8001f10:	607a      	str	r2, [r7, #4]
 8001f12:	603b      	str	r3, [r7, #0]
 8001f14:	460b      	mov	r3, r1
 8001f16:	817b      	strh	r3, [r7, #10]
 8001f18:	68fb      	ldr	r3, [r7, #12]
 8001f1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001f1c:	617b      	str	r3, [r7, #20]
 8001f1e:	697b      	ldr	r3, [r7, #20]
 8001f20:	2b08      	cmp	r3, #8
 8001f22:	d006      	beq.n	8001f32 <I2C_MasterRequestWrite+0x2a>
 8001f24:	697b      	ldr	r3, [r7, #20]
 8001f26:	2b01      	cmp	r3, #1
 8001f28:	d003      	beq.n	8001f32 <I2C_MasterRequestWrite+0x2a>
 8001f2a:	697b      	ldr	r3, [r7, #20]
 8001f2c:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8001f30:	d108      	bne.n	8001f44 <I2C_MasterRequestWrite+0x3c>
 8001f32:	68fb      	ldr	r3, [r7, #12]
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	681a      	ldr	r2, [r3, #0]
 8001f38:	68fb      	ldr	r3, [r7, #12]
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001f40:	601a      	str	r2, [r3, #0]
 8001f42:	e00b      	b.n	8001f5c <I2C_MasterRequestWrite+0x54>
 8001f44:	68fb      	ldr	r3, [r7, #12]
 8001f46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001f48:	2b12      	cmp	r3, #18
 8001f4a:	d107      	bne.n	8001f5c <I2C_MasterRequestWrite+0x54>
 8001f4c:	68fb      	ldr	r3, [r7, #12]
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	681a      	ldr	r2, [r3, #0]
 8001f52:	68fb      	ldr	r3, [r7, #12]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001f5a:	601a      	str	r2, [r3, #0]
 8001f5c:	683b      	ldr	r3, [r7, #0]
 8001f5e:	9300      	str	r3, [sp, #0]
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	2200      	movs	r2, #0
 8001f64:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8001f68:	68f8      	ldr	r0, [r7, #12]
 8001f6a:	f000 f84f 	bl	800200c <I2C_WaitOnFlagUntilTimeout>
 8001f6e:	4603      	mov	r3, r0
 8001f70:	2b00      	cmp	r3, #0
 8001f72:	d00d      	beq.n	8001f90 <I2C_MasterRequestWrite+0x88>
 8001f74:	68fb      	ldr	r3, [r7, #12]
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001f7e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001f82:	d103      	bne.n	8001f8c <I2C_MasterRequestWrite+0x84>
 8001f84:	68fb      	ldr	r3, [r7, #12]
 8001f86:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001f8a:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f8c:	2303      	movs	r3, #3
 8001f8e:	e035      	b.n	8001ffc <I2C_MasterRequestWrite+0xf4>
 8001f90:	68fb      	ldr	r3, [r7, #12]
 8001f92:	691b      	ldr	r3, [r3, #16]
 8001f94:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8001f98:	d108      	bne.n	8001fac <I2C_MasterRequestWrite+0xa4>
 8001f9a:	897b      	ldrh	r3, [r7, #10]
 8001f9c:	b2db      	uxtb	r3, r3
 8001f9e:	461a      	mov	r2, r3
 8001fa0:	68fb      	ldr	r3, [r7, #12]
 8001fa2:	681b      	ldr	r3, [r3, #0]
 8001fa4:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8001fa8:	611a      	str	r2, [r3, #16]
 8001faa:	e01b      	b.n	8001fe4 <I2C_MasterRequestWrite+0xdc>
 8001fac:	897b      	ldrh	r3, [r7, #10]
 8001fae:	11db      	asrs	r3, r3, #7
 8001fb0:	b2db      	uxtb	r3, r3
 8001fb2:	f003 0306 	and.w	r3, r3, #6
 8001fb6:	b2db      	uxtb	r3, r3
 8001fb8:	f063 030f 	orn	r3, r3, #15
 8001fbc:	b2da      	uxtb	r2, r3
 8001fbe:	68fb      	ldr	r3, [r7, #12]
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	611a      	str	r2, [r3, #16]
 8001fc4:	683b      	ldr	r3, [r7, #0]
 8001fc6:	687a      	ldr	r2, [r7, #4]
 8001fc8:	490e      	ldr	r1, [pc, #56]	@ (8002004 <I2C_MasterRequestWrite+0xfc>)
 8001fca:	68f8      	ldr	r0, [r7, #12]
 8001fcc:	f000 f898 	bl	8002100 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001fd0:	4603      	mov	r3, r0
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	d001      	beq.n	8001fda <I2C_MasterRequestWrite+0xd2>
 8001fd6:	2301      	movs	r3, #1
 8001fd8:	e010      	b.n	8001ffc <I2C_MasterRequestWrite+0xf4>
 8001fda:	897b      	ldrh	r3, [r7, #10]
 8001fdc:	b2da      	uxtb	r2, r3
 8001fde:	68fb      	ldr	r3, [r7, #12]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	611a      	str	r2, [r3, #16]
 8001fe4:	683b      	ldr	r3, [r7, #0]
 8001fe6:	687a      	ldr	r2, [r7, #4]
 8001fe8:	4907      	ldr	r1, [pc, #28]	@ (8002008 <I2C_MasterRequestWrite+0x100>)
 8001fea:	68f8      	ldr	r0, [r7, #12]
 8001fec:	f000 f888 	bl	8002100 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8001ff0:	4603      	mov	r3, r0
 8001ff2:	2b00      	cmp	r3, #0
 8001ff4:	d001      	beq.n	8001ffa <I2C_MasterRequestWrite+0xf2>
 8001ff6:	2301      	movs	r3, #1
 8001ff8:	e000      	b.n	8001ffc <I2C_MasterRequestWrite+0xf4>
 8001ffa:	2300      	movs	r3, #0
 8001ffc:	4618      	mov	r0, r3
 8001ffe:	3718      	adds	r7, #24
 8002000:	46bd      	mov	sp, r7
 8002002:	bd80      	pop	{r7, pc}
 8002004:	00010008 	.word	0x00010008
 8002008:	00010002 	.word	0x00010002

0800200c <I2C_WaitOnFlagUntilTimeout>:
 800200c:	b580      	push	{r7, lr}
 800200e:	b084      	sub	sp, #16
 8002010:	af00      	add	r7, sp, #0
 8002012:	60f8      	str	r0, [r7, #12]
 8002014:	60b9      	str	r1, [r7, #8]
 8002016:	603b      	str	r3, [r7, #0]
 8002018:	4613      	mov	r3, r2
 800201a:	71fb      	strb	r3, [r7, #7]
 800201c:	e048      	b.n	80020b0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800201e:	683b      	ldr	r3, [r7, #0]
 8002020:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002024:	d044      	beq.n	80020b0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002026:	f7ff fa25 	bl	8001474 <HAL_GetTick>
 800202a:	4602      	mov	r2, r0
 800202c:	69bb      	ldr	r3, [r7, #24]
 800202e:	1ad3      	subs	r3, r2, r3
 8002030:	683a      	ldr	r2, [r7, #0]
 8002032:	429a      	cmp	r2, r3
 8002034:	d302      	bcc.n	800203c <I2C_WaitOnFlagUntilTimeout+0x30>
 8002036:	683b      	ldr	r3, [r7, #0]
 8002038:	2b00      	cmp	r3, #0
 800203a:	d139      	bne.n	80020b0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800203c:	68bb      	ldr	r3, [r7, #8]
 800203e:	0c1b      	lsrs	r3, r3, #16
 8002040:	b2db      	uxtb	r3, r3
 8002042:	2b01      	cmp	r3, #1
 8002044:	d10d      	bne.n	8002062 <I2C_WaitOnFlagUntilTimeout+0x56>
 8002046:	68fb      	ldr	r3, [r7, #12]
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	695b      	ldr	r3, [r3, #20]
 800204c:	43da      	mvns	r2, r3
 800204e:	68bb      	ldr	r3, [r7, #8]
 8002050:	4013      	ands	r3, r2
 8002052:	b29b      	uxth	r3, r3
 8002054:	2b00      	cmp	r3, #0
 8002056:	bf0c      	ite	eq
 8002058:	2301      	moveq	r3, #1
 800205a:	2300      	movne	r3, #0
 800205c:	b2db      	uxtb	r3, r3
 800205e:	461a      	mov	r2, r3
 8002060:	e00c      	b.n	800207c <I2C_WaitOnFlagUntilTimeout+0x70>
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	699b      	ldr	r3, [r3, #24]
 8002068:	43da      	mvns	r2, r3
 800206a:	68bb      	ldr	r3, [r7, #8]
 800206c:	4013      	ands	r3, r2
 800206e:	b29b      	uxth	r3, r3
 8002070:	2b00      	cmp	r3, #0
 8002072:	bf0c      	ite	eq
 8002074:	2301      	moveq	r3, #1
 8002076:	2300      	movne	r3, #0
 8002078:	b2db      	uxtb	r3, r3
 800207a:	461a      	mov	r2, r3
 800207c:	79fb      	ldrb	r3, [r7, #7]
 800207e:	429a      	cmp	r2, r3
 8002080:	d116      	bne.n	80020b0 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002082:	68fb      	ldr	r3, [r7, #12]
 8002084:	2200      	movs	r2, #0
 8002086:	631a      	str	r2, [r3, #48]	@ 0x30
 8002088:	68fb      	ldr	r3, [r7, #12]
 800208a:	2220      	movs	r2, #32
 800208c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	2200      	movs	r2, #0
 8002094:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800209c:	f043 0220 	orr.w	r2, r3, #32
 80020a0:	68fb      	ldr	r3, [r7, #12]
 80020a2:	641a      	str	r2, [r3, #64]	@ 0x40
 80020a4:	68fb      	ldr	r3, [r7, #12]
 80020a6:	2200      	movs	r2, #0
 80020a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80020ac:	2301      	movs	r3, #1
 80020ae:	e023      	b.n	80020f8 <I2C_WaitOnFlagUntilTimeout+0xec>
 80020b0:	68bb      	ldr	r3, [r7, #8]
 80020b2:	0c1b      	lsrs	r3, r3, #16
 80020b4:	b2db      	uxtb	r3, r3
 80020b6:	2b01      	cmp	r3, #1
 80020b8:	d10d      	bne.n	80020d6 <I2C_WaitOnFlagUntilTimeout+0xca>
 80020ba:	68fb      	ldr	r3, [r7, #12]
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	695b      	ldr	r3, [r3, #20]
 80020c0:	43da      	mvns	r2, r3
 80020c2:	68bb      	ldr	r3, [r7, #8]
 80020c4:	4013      	ands	r3, r2
 80020c6:	b29b      	uxth	r3, r3
 80020c8:	2b00      	cmp	r3, #0
 80020ca:	bf0c      	ite	eq
 80020cc:	2301      	moveq	r3, #1
 80020ce:	2300      	movne	r3, #0
 80020d0:	b2db      	uxtb	r3, r3
 80020d2:	461a      	mov	r2, r3
 80020d4:	e00c      	b.n	80020f0 <I2C_WaitOnFlagUntilTimeout+0xe4>
 80020d6:	68fb      	ldr	r3, [r7, #12]
 80020d8:	681b      	ldr	r3, [r3, #0]
 80020da:	699b      	ldr	r3, [r3, #24]
 80020dc:	43da      	mvns	r2, r3
 80020de:	68bb      	ldr	r3, [r7, #8]
 80020e0:	4013      	ands	r3, r2
 80020e2:	b29b      	uxth	r3, r3
 80020e4:	2b00      	cmp	r3, #0
 80020e6:	bf0c      	ite	eq
 80020e8:	2301      	moveq	r3, #1
 80020ea:	2300      	movne	r3, #0
 80020ec:	b2db      	uxtb	r3, r3
 80020ee:	461a      	mov	r2, r3
 80020f0:	79fb      	ldrb	r3, [r7, #7]
 80020f2:	429a      	cmp	r2, r3
 80020f4:	d093      	beq.n	800201e <I2C_WaitOnFlagUntilTimeout+0x12>
 80020f6:	2300      	movs	r3, #0
 80020f8:	4618      	mov	r0, r3
 80020fa:	3710      	adds	r7, #16
 80020fc:	46bd      	mov	sp, r7
 80020fe:	bd80      	pop	{r7, pc}

08002100 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8002100:	b580      	push	{r7, lr}
 8002102:	b084      	sub	sp, #16
 8002104:	af00      	add	r7, sp, #0
 8002106:	60f8      	str	r0, [r7, #12]
 8002108:	60b9      	str	r1, [r7, #8]
 800210a:	607a      	str	r2, [r7, #4]
 800210c:	603b      	str	r3, [r7, #0]
 800210e:	e071      	b.n	80021f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002110:	68fb      	ldr	r3, [r7, #12]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	695b      	ldr	r3, [r3, #20]
 8002116:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800211a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800211e:	d123      	bne.n	8002168 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8002120:	68fb      	ldr	r3, [r7, #12]
 8002122:	681b      	ldr	r3, [r3, #0]
 8002124:	681a      	ldr	r2, [r3, #0]
 8002126:	68fb      	ldr	r3, [r7, #12]
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800212e:	601a      	str	r2, [r3, #0]
 8002130:	68fb      	ldr	r3, [r7, #12]
 8002132:	681b      	ldr	r3, [r3, #0]
 8002134:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8002138:	615a      	str	r2, [r3, #20]
 800213a:	68fb      	ldr	r3, [r7, #12]
 800213c:	2200      	movs	r2, #0
 800213e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002140:	68fb      	ldr	r3, [r7, #12]
 8002142:	2220      	movs	r2, #32
 8002144:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002148:	68fb      	ldr	r3, [r7, #12]
 800214a:	2200      	movs	r2, #0
 800214c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002150:	68fb      	ldr	r3, [r7, #12]
 8002152:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002154:	f043 0204 	orr.w	r2, r3, #4
 8002158:	68fb      	ldr	r3, [r7, #12]
 800215a:	641a      	str	r2, [r3, #64]	@ 0x40
 800215c:	68fb      	ldr	r3, [r7, #12]
 800215e:	2200      	movs	r2, #0
 8002160:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002164:	2301      	movs	r3, #1
 8002166:	e067      	b.n	8002238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002168:	687b      	ldr	r3, [r7, #4]
 800216a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800216e:	d041      	beq.n	80021f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002170:	f7ff f980 	bl	8001474 <HAL_GetTick>
 8002174:	4602      	mov	r2, r0
 8002176:	683b      	ldr	r3, [r7, #0]
 8002178:	1ad3      	subs	r3, r2, r3
 800217a:	687a      	ldr	r2, [r7, #4]
 800217c:	429a      	cmp	r2, r3
 800217e:	d302      	bcc.n	8002186 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	2b00      	cmp	r3, #0
 8002184:	d136      	bne.n	80021f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002186:	68bb      	ldr	r3, [r7, #8]
 8002188:	0c1b      	lsrs	r3, r3, #16
 800218a:	b2db      	uxtb	r3, r3
 800218c:	2b01      	cmp	r3, #1
 800218e:	d10c      	bne.n	80021aa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8002190:	68fb      	ldr	r3, [r7, #12]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	695b      	ldr	r3, [r3, #20]
 8002196:	43da      	mvns	r2, r3
 8002198:	68bb      	ldr	r3, [r7, #8]
 800219a:	4013      	ands	r3, r2
 800219c:	b29b      	uxth	r3, r3
 800219e:	2b00      	cmp	r3, #0
 80021a0:	bf14      	ite	ne
 80021a2:	2301      	movne	r3, #1
 80021a4:	2300      	moveq	r3, #0
 80021a6:	b2db      	uxtb	r3, r3
 80021a8:	e00b      	b.n	80021c2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 80021aa:	68fb      	ldr	r3, [r7, #12]
 80021ac:	681b      	ldr	r3, [r3, #0]
 80021ae:	699b      	ldr	r3, [r3, #24]
 80021b0:	43da      	mvns	r2, r3
 80021b2:	68bb      	ldr	r3, [r7, #8]
 80021b4:	4013      	ands	r3, r2
 80021b6:	b29b      	uxth	r3, r3
 80021b8:	2b00      	cmp	r3, #0
 80021ba:	bf14      	ite	ne
 80021bc:	2301      	movne	r3, #1
 80021be:	2300      	moveq	r3, #0
 80021c0:	b2db      	uxtb	r3, r3
 80021c2:	2b00      	cmp	r3, #0
 80021c4:	d016      	beq.n	80021f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80021c6:	68fb      	ldr	r3, [r7, #12]
 80021c8:	2200      	movs	r2, #0
 80021ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80021cc:	68fb      	ldr	r3, [r7, #12]
 80021ce:	2220      	movs	r2, #32
 80021d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80021d4:	68fb      	ldr	r3, [r7, #12]
 80021d6:	2200      	movs	r2, #0
 80021d8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021e0:	f043 0220 	orr.w	r2, r3, #32
 80021e4:	68fb      	ldr	r3, [r7, #12]
 80021e6:	641a      	str	r2, [r3, #64]	@ 0x40
 80021e8:	68fb      	ldr	r3, [r7, #12]
 80021ea:	2200      	movs	r2, #0
 80021ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80021f0:	2301      	movs	r3, #1
 80021f2:	e021      	b.n	8002238 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80021f4:	68bb      	ldr	r3, [r7, #8]
 80021f6:	0c1b      	lsrs	r3, r3, #16
 80021f8:	b2db      	uxtb	r3, r3
 80021fa:	2b01      	cmp	r3, #1
 80021fc:	d10c      	bne.n	8002218 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80021fe:	68fb      	ldr	r3, [r7, #12]
 8002200:	681b      	ldr	r3, [r3, #0]
 8002202:	695b      	ldr	r3, [r3, #20]
 8002204:	43da      	mvns	r2, r3
 8002206:	68bb      	ldr	r3, [r7, #8]
 8002208:	4013      	ands	r3, r2
 800220a:	b29b      	uxth	r3, r3
 800220c:	2b00      	cmp	r3, #0
 800220e:	bf14      	ite	ne
 8002210:	2301      	movne	r3, #1
 8002212:	2300      	moveq	r3, #0
 8002214:	b2db      	uxtb	r3, r3
 8002216:	e00b      	b.n	8002230 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8002218:	68fb      	ldr	r3, [r7, #12]
 800221a:	681b      	ldr	r3, [r3, #0]
 800221c:	699b      	ldr	r3, [r3, #24]
 800221e:	43da      	mvns	r2, r3
 8002220:	68bb      	ldr	r3, [r7, #8]
 8002222:	4013      	ands	r3, r2
 8002224:	b29b      	uxth	r3, r3
 8002226:	2b00      	cmp	r3, #0
 8002228:	bf14      	ite	ne
 800222a:	2301      	movne	r3, #1
 800222c:	2300      	moveq	r3, #0
 800222e:	b2db      	uxtb	r3, r3
 8002230:	2b00      	cmp	r3, #0
 8002232:	f47f af6d 	bne.w	8002110 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8002236:	2300      	movs	r3, #0
 8002238:	4618      	mov	r0, r3
 800223a:	3710      	adds	r7, #16
 800223c:	46bd      	mov	sp, r7
 800223e:	bd80      	pop	{r7, pc}

08002240 <I2C_WaitOnTXEFlagUntilTimeout>:
 8002240:	b580      	push	{r7, lr}
 8002242:	b084      	sub	sp, #16
 8002244:	af00      	add	r7, sp, #0
 8002246:	60f8      	str	r0, [r7, #12]
 8002248:	60b9      	str	r1, [r7, #8]
 800224a:	607a      	str	r2, [r7, #4]
 800224c:	e034      	b.n	80022b8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800224e:	68f8      	ldr	r0, [r7, #12]
 8002250:	f000 f886 	bl	8002360 <I2C_IsAcknowledgeFailed>
 8002254:	4603      	mov	r3, r0
 8002256:	2b00      	cmp	r3, #0
 8002258:	d001      	beq.n	800225e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800225a:	2301      	movs	r3, #1
 800225c:	e034      	b.n	80022c8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800225e:	68bb      	ldr	r3, [r7, #8]
 8002260:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002264:	d028      	beq.n	80022b8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002266:	f7ff f905 	bl	8001474 <HAL_GetTick>
 800226a:	4602      	mov	r2, r0
 800226c:	687b      	ldr	r3, [r7, #4]
 800226e:	1ad3      	subs	r3, r2, r3
 8002270:	68ba      	ldr	r2, [r7, #8]
 8002272:	429a      	cmp	r2, r3
 8002274:	d302      	bcc.n	800227c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8002276:	68bb      	ldr	r3, [r7, #8]
 8002278:	2b00      	cmp	r3, #0
 800227a:	d11d      	bne.n	80022b8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800227c:	68fb      	ldr	r3, [r7, #12]
 800227e:	681b      	ldr	r3, [r3, #0]
 8002280:	695b      	ldr	r3, [r3, #20]
 8002282:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002286:	2b80      	cmp	r3, #128	@ 0x80
 8002288:	d016      	beq.n	80022b8 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800228a:	68fb      	ldr	r3, [r7, #12]
 800228c:	2200      	movs	r2, #0
 800228e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002290:	68fb      	ldr	r3, [r7, #12]
 8002292:	2220      	movs	r2, #32
 8002294:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002298:	68fb      	ldr	r3, [r7, #12]
 800229a:	2200      	movs	r2, #0
 800229c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80022a0:	68fb      	ldr	r3, [r7, #12]
 80022a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022a4:	f043 0220 	orr.w	r2, r3, #32
 80022a8:	68fb      	ldr	r3, [r7, #12]
 80022aa:	641a      	str	r2, [r3, #64]	@ 0x40
 80022ac:	68fb      	ldr	r3, [r7, #12]
 80022ae:	2200      	movs	r2, #0
 80022b0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80022b4:	2301      	movs	r3, #1
 80022b6:	e007      	b.n	80022c8 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80022b8:	68fb      	ldr	r3, [r7, #12]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	695b      	ldr	r3, [r3, #20]
 80022be:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80022c2:	2b80      	cmp	r3, #128	@ 0x80
 80022c4:	d1c3      	bne.n	800224e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80022c6:	2300      	movs	r3, #0
 80022c8:	4618      	mov	r0, r3
 80022ca:	3710      	adds	r7, #16
 80022cc:	46bd      	mov	sp, r7
 80022ce:	bd80      	pop	{r7, pc}

080022d0 <I2C_WaitOnBTFFlagUntilTimeout>:
 80022d0:	b580      	push	{r7, lr}
 80022d2:	b084      	sub	sp, #16
 80022d4:	af00      	add	r7, sp, #0
 80022d6:	60f8      	str	r0, [r7, #12]
 80022d8:	60b9      	str	r1, [r7, #8]
 80022da:	607a      	str	r2, [r7, #4]
 80022dc:	e034      	b.n	8002348 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80022de:	68f8      	ldr	r0, [r7, #12]
 80022e0:	f000 f83e 	bl	8002360 <I2C_IsAcknowledgeFailed>
 80022e4:	4603      	mov	r3, r0
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d001      	beq.n	80022ee <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 80022ea:	2301      	movs	r3, #1
 80022ec:	e034      	b.n	8002358 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80022ee:	68bb      	ldr	r3, [r7, #8]
 80022f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80022f4:	d028      	beq.n	8002348 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80022f6:	f7ff f8bd 	bl	8001474 <HAL_GetTick>
 80022fa:	4602      	mov	r2, r0
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	1ad3      	subs	r3, r2, r3
 8002300:	68ba      	ldr	r2, [r7, #8]
 8002302:	429a      	cmp	r2, r3
 8002304:	d302      	bcc.n	800230c <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8002306:	68bb      	ldr	r3, [r7, #8]
 8002308:	2b00      	cmp	r3, #0
 800230a:	d11d      	bne.n	8002348 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800230c:	68fb      	ldr	r3, [r7, #12]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	695b      	ldr	r3, [r3, #20]
 8002312:	f003 0304 	and.w	r3, r3, #4
 8002316:	2b04      	cmp	r3, #4
 8002318:	d016      	beq.n	8002348 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800231a:	68fb      	ldr	r3, [r7, #12]
 800231c:	2200      	movs	r2, #0
 800231e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	2220      	movs	r2, #32
 8002324:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002328:	68fb      	ldr	r3, [r7, #12]
 800232a:	2200      	movs	r2, #0
 800232c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002334:	f043 0220 	orr.w	r2, r3, #32
 8002338:	68fb      	ldr	r3, [r7, #12]
 800233a:	641a      	str	r2, [r3, #64]	@ 0x40
 800233c:	68fb      	ldr	r3, [r7, #12]
 800233e:	2200      	movs	r2, #0
 8002340:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002344:	2301      	movs	r3, #1
 8002346:	e007      	b.n	8002358 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002348:	68fb      	ldr	r3, [r7, #12]
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	695b      	ldr	r3, [r3, #20]
 800234e:	f003 0304 	and.w	r3, r3, #4
 8002352:	2b04      	cmp	r3, #4
 8002354:	d1c3      	bne.n	80022de <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002356:	2300      	movs	r3, #0
 8002358:	4618      	mov	r0, r3
 800235a:	3710      	adds	r7, #16
 800235c:	46bd      	mov	sp, r7
 800235e:	bd80      	pop	{r7, pc}

08002360 <I2C_IsAcknowledgeFailed>:
 8002360:	b480      	push	{r7}
 8002362:	b083      	sub	sp, #12
 8002364:	af00      	add	r7, sp, #0
 8002366:	6078      	str	r0, [r7, #4]
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	695b      	ldr	r3, [r3, #20]
 800236e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002372:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002376:	d11b      	bne.n	80023b0 <I2C_IsAcknowledgeFailed+0x50>
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8002380:	615a      	str	r2, [r3, #20]
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	2200      	movs	r2, #0
 8002386:	631a      	str	r2, [r3, #48]	@ 0x30
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	2220      	movs	r2, #32
 800238c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	2200      	movs	r2, #0
 8002394:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800239c:	f043 0204 	orr.w	r2, r3, #4
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	641a      	str	r2, [r3, #64]	@ 0x40
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	2200      	movs	r2, #0
 80023a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80023ac:	2301      	movs	r3, #1
 80023ae:	e000      	b.n	80023b2 <I2C_IsAcknowledgeFailed+0x52>
 80023b0:	2300      	movs	r3, #0
 80023b2:	4618      	mov	r0, r3
 80023b4:	370c      	adds	r7, #12
 80023b6:	46bd      	mov	sp, r7
 80023b8:	bc80      	pop	{r7}
 80023ba:	4770      	bx	lr

080023bc <HAL_RCC_OscConfig>:
 80023bc:	b580      	push	{r7, lr}
 80023be:	b086      	sub	sp, #24
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	2b00      	cmp	r3, #0
 80023c8:	d101      	bne.n	80023ce <HAL_RCC_OscConfig+0x12>
 80023ca:	2301      	movs	r3, #1
 80023cc:	e272      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	681b      	ldr	r3, [r3, #0]
 80023d2:	f003 0301 	and.w	r3, r3, #1
 80023d6:	2b00      	cmp	r3, #0
 80023d8:	f000 8087 	beq.w	80024ea <HAL_RCC_OscConfig+0x12e>
 80023dc:	4b92      	ldr	r3, [pc, #584]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 80023de:	685b      	ldr	r3, [r3, #4]
 80023e0:	f003 030c 	and.w	r3, r3, #12
 80023e4:	2b04      	cmp	r3, #4
 80023e6:	d00c      	beq.n	8002402 <HAL_RCC_OscConfig+0x46>
 80023e8:	4b8f      	ldr	r3, [pc, #572]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 80023ea:	685b      	ldr	r3, [r3, #4]
 80023ec:	f003 030c 	and.w	r3, r3, #12
 80023f0:	2b08      	cmp	r3, #8
 80023f2:	d112      	bne.n	800241a <HAL_RCC_OscConfig+0x5e>
 80023f4:	4b8c      	ldr	r3, [pc, #560]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 80023f6:	685b      	ldr	r3, [r3, #4]
 80023f8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80023fc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002400:	d10b      	bne.n	800241a <HAL_RCC_OscConfig+0x5e>
 8002402:	4b89      	ldr	r3, [pc, #548]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800240a:	2b00      	cmp	r3, #0
 800240c:	d06c      	beq.n	80024e8 <HAL_RCC_OscConfig+0x12c>
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	685b      	ldr	r3, [r3, #4]
 8002412:	2b00      	cmp	r3, #0
 8002414:	d168      	bne.n	80024e8 <HAL_RCC_OscConfig+0x12c>
 8002416:	2301      	movs	r3, #1
 8002418:	e24c      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	685b      	ldr	r3, [r3, #4]
 800241e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002422:	d106      	bne.n	8002432 <HAL_RCC_OscConfig+0x76>
 8002424:	4b80      	ldr	r3, [pc, #512]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002426:	681b      	ldr	r3, [r3, #0]
 8002428:	4a7f      	ldr	r2, [pc, #508]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800242a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800242e:	6013      	str	r3, [r2, #0]
 8002430:	e02e      	b.n	8002490 <HAL_RCC_OscConfig+0xd4>
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	685b      	ldr	r3, [r3, #4]
 8002436:	2b00      	cmp	r3, #0
 8002438:	d10c      	bne.n	8002454 <HAL_RCC_OscConfig+0x98>
 800243a:	4b7b      	ldr	r3, [pc, #492]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800243c:	681b      	ldr	r3, [r3, #0]
 800243e:	4a7a      	ldr	r2, [pc, #488]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002440:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002444:	6013      	str	r3, [r2, #0]
 8002446:	4b78      	ldr	r3, [pc, #480]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002448:	681b      	ldr	r3, [r3, #0]
 800244a:	4a77      	ldr	r2, [pc, #476]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800244c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002450:	6013      	str	r3, [r2, #0]
 8002452:	e01d      	b.n	8002490 <HAL_RCC_OscConfig+0xd4>
 8002454:	687b      	ldr	r3, [r7, #4]
 8002456:	685b      	ldr	r3, [r3, #4]
 8002458:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800245c:	d10c      	bne.n	8002478 <HAL_RCC_OscConfig+0xbc>
 800245e:	4b72      	ldr	r3, [pc, #456]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002460:	681b      	ldr	r3, [r3, #0]
 8002462:	4a71      	ldr	r2, [pc, #452]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002464:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002468:	6013      	str	r3, [r2, #0]
 800246a:	4b6f      	ldr	r3, [pc, #444]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	4a6e      	ldr	r2, [pc, #440]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002470:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002474:	6013      	str	r3, [r2, #0]
 8002476:	e00b      	b.n	8002490 <HAL_RCC_OscConfig+0xd4>
 8002478:	4b6b      	ldr	r3, [pc, #428]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	4a6a      	ldr	r2, [pc, #424]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800247e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002482:	6013      	str	r3, [r2, #0]
 8002484:	4b68      	ldr	r3, [pc, #416]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002486:	681b      	ldr	r3, [r3, #0]
 8002488:	4a67      	ldr	r2, [pc, #412]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800248a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800248e:	6013      	str	r3, [r2, #0]
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	685b      	ldr	r3, [r3, #4]
 8002494:	2b00      	cmp	r3, #0
 8002496:	d013      	beq.n	80024c0 <HAL_RCC_OscConfig+0x104>
 8002498:	f7fe ffec 	bl	8001474 <HAL_GetTick>
 800249c:	6138      	str	r0, [r7, #16]
 800249e:	e008      	b.n	80024b2 <HAL_RCC_OscConfig+0xf6>
 80024a0:	f7fe ffe8 	bl	8001474 <HAL_GetTick>
 80024a4:	4602      	mov	r2, r0
 80024a6:	693b      	ldr	r3, [r7, #16]
 80024a8:	1ad3      	subs	r3, r2, r3
 80024aa:	2b64      	cmp	r3, #100	@ 0x64
 80024ac:	d901      	bls.n	80024b2 <HAL_RCC_OscConfig+0xf6>
 80024ae:	2303      	movs	r3, #3
 80024b0:	e200      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 80024b2:	4b5d      	ldr	r3, [pc, #372]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80024ba:	2b00      	cmp	r3, #0
 80024bc:	d0f0      	beq.n	80024a0 <HAL_RCC_OscConfig+0xe4>
 80024be:	e014      	b.n	80024ea <HAL_RCC_OscConfig+0x12e>
 80024c0:	f7fe ffd8 	bl	8001474 <HAL_GetTick>
 80024c4:	6138      	str	r0, [r7, #16]
 80024c6:	e008      	b.n	80024da <HAL_RCC_OscConfig+0x11e>
 80024c8:	f7fe ffd4 	bl	8001474 <HAL_GetTick>
 80024cc:	4602      	mov	r2, r0
 80024ce:	693b      	ldr	r3, [r7, #16]
 80024d0:	1ad3      	subs	r3, r2, r3
 80024d2:	2b64      	cmp	r3, #100	@ 0x64
 80024d4:	d901      	bls.n	80024da <HAL_RCC_OscConfig+0x11e>
 80024d6:	2303      	movs	r3, #3
 80024d8:	e1ec      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 80024da:	4b53      	ldr	r3, [pc, #332]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d1f0      	bne.n	80024c8 <HAL_RCC_OscConfig+0x10c>
 80024e6:	e000      	b.n	80024ea <HAL_RCC_OscConfig+0x12e>
 80024e8:	bf00      	nop
 80024ea:	687b      	ldr	r3, [r7, #4]
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	f003 0302 	and.w	r3, r3, #2
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d063      	beq.n	80025be <HAL_RCC_OscConfig+0x202>
 80024f6:	4b4c      	ldr	r3, [pc, #304]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 80024f8:	685b      	ldr	r3, [r3, #4]
 80024fa:	f003 030c 	and.w	r3, r3, #12
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d00b      	beq.n	800251a <HAL_RCC_OscConfig+0x15e>
 8002502:	4b49      	ldr	r3, [pc, #292]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002504:	685b      	ldr	r3, [r3, #4]
 8002506:	f003 030c 	and.w	r3, r3, #12
 800250a:	2b08      	cmp	r3, #8
 800250c:	d11c      	bne.n	8002548 <HAL_RCC_OscConfig+0x18c>
 800250e:	4b46      	ldr	r3, [pc, #280]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002510:	685b      	ldr	r3, [r3, #4]
 8002512:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002516:	2b00      	cmp	r3, #0
 8002518:	d116      	bne.n	8002548 <HAL_RCC_OscConfig+0x18c>
 800251a:	4b43      	ldr	r3, [pc, #268]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	f003 0302 	and.w	r3, r3, #2
 8002522:	2b00      	cmp	r3, #0
 8002524:	d005      	beq.n	8002532 <HAL_RCC_OscConfig+0x176>
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	691b      	ldr	r3, [r3, #16]
 800252a:	2b01      	cmp	r3, #1
 800252c:	d001      	beq.n	8002532 <HAL_RCC_OscConfig+0x176>
 800252e:	2301      	movs	r3, #1
 8002530:	e1c0      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 8002532:	4b3d      	ldr	r3, [pc, #244]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800253a:	687b      	ldr	r3, [r7, #4]
 800253c:	695b      	ldr	r3, [r3, #20]
 800253e:	00db      	lsls	r3, r3, #3
 8002540:	4939      	ldr	r1, [pc, #228]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002542:	4313      	orrs	r3, r2
 8002544:	600b      	str	r3, [r1, #0]
 8002546:	e03a      	b.n	80025be <HAL_RCC_OscConfig+0x202>
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	691b      	ldr	r3, [r3, #16]
 800254c:	2b00      	cmp	r3, #0
 800254e:	d020      	beq.n	8002592 <HAL_RCC_OscConfig+0x1d6>
 8002550:	4b36      	ldr	r3, [pc, #216]	@ (800262c <HAL_RCC_OscConfig+0x270>)
 8002552:	2201      	movs	r2, #1
 8002554:	601a      	str	r2, [r3, #0]
 8002556:	f7fe ff8d 	bl	8001474 <HAL_GetTick>
 800255a:	6138      	str	r0, [r7, #16]
 800255c:	e008      	b.n	8002570 <HAL_RCC_OscConfig+0x1b4>
 800255e:	f7fe ff89 	bl	8001474 <HAL_GetTick>
 8002562:	4602      	mov	r2, r0
 8002564:	693b      	ldr	r3, [r7, #16]
 8002566:	1ad3      	subs	r3, r2, r3
 8002568:	2b02      	cmp	r3, #2
 800256a:	d901      	bls.n	8002570 <HAL_RCC_OscConfig+0x1b4>
 800256c:	2303      	movs	r3, #3
 800256e:	e1a1      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 8002570:	4b2d      	ldr	r3, [pc, #180]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 8002572:	681b      	ldr	r3, [r3, #0]
 8002574:	f003 0302 	and.w	r3, r3, #2
 8002578:	2b00      	cmp	r3, #0
 800257a:	d0f0      	beq.n	800255e <HAL_RCC_OscConfig+0x1a2>
 800257c:	4b2a      	ldr	r3, [pc, #168]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	695b      	ldr	r3, [r3, #20]
 8002588:	00db      	lsls	r3, r3, #3
 800258a:	4927      	ldr	r1, [pc, #156]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 800258c:	4313      	orrs	r3, r2
 800258e:	600b      	str	r3, [r1, #0]
 8002590:	e015      	b.n	80025be <HAL_RCC_OscConfig+0x202>
 8002592:	4b26      	ldr	r3, [pc, #152]	@ (800262c <HAL_RCC_OscConfig+0x270>)
 8002594:	2200      	movs	r2, #0
 8002596:	601a      	str	r2, [r3, #0]
 8002598:	f7fe ff6c 	bl	8001474 <HAL_GetTick>
 800259c:	6138      	str	r0, [r7, #16]
 800259e:	e008      	b.n	80025b2 <HAL_RCC_OscConfig+0x1f6>
 80025a0:	f7fe ff68 	bl	8001474 <HAL_GetTick>
 80025a4:	4602      	mov	r2, r0
 80025a6:	693b      	ldr	r3, [r7, #16]
 80025a8:	1ad3      	subs	r3, r2, r3
 80025aa:	2b02      	cmp	r3, #2
 80025ac:	d901      	bls.n	80025b2 <HAL_RCC_OscConfig+0x1f6>
 80025ae:	2303      	movs	r3, #3
 80025b0:	e180      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 80025b2:	4b1d      	ldr	r3, [pc, #116]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 80025b4:	681b      	ldr	r3, [r3, #0]
 80025b6:	f003 0302 	and.w	r3, r3, #2
 80025ba:	2b00      	cmp	r3, #0
 80025bc:	d1f0      	bne.n	80025a0 <HAL_RCC_OscConfig+0x1e4>
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	681b      	ldr	r3, [r3, #0]
 80025c2:	f003 0308 	and.w	r3, r3, #8
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d03a      	beq.n	8002640 <HAL_RCC_OscConfig+0x284>
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	699b      	ldr	r3, [r3, #24]
 80025ce:	2b00      	cmp	r3, #0
 80025d0:	d019      	beq.n	8002606 <HAL_RCC_OscConfig+0x24a>
 80025d2:	4b17      	ldr	r3, [pc, #92]	@ (8002630 <HAL_RCC_OscConfig+0x274>)
 80025d4:	2201      	movs	r2, #1
 80025d6:	601a      	str	r2, [r3, #0]
 80025d8:	f7fe ff4c 	bl	8001474 <HAL_GetTick>
 80025dc:	6138      	str	r0, [r7, #16]
 80025de:	e008      	b.n	80025f2 <HAL_RCC_OscConfig+0x236>
 80025e0:	f7fe ff48 	bl	8001474 <HAL_GetTick>
 80025e4:	4602      	mov	r2, r0
 80025e6:	693b      	ldr	r3, [r7, #16]
 80025e8:	1ad3      	subs	r3, r2, r3
 80025ea:	2b02      	cmp	r3, #2
 80025ec:	d901      	bls.n	80025f2 <HAL_RCC_OscConfig+0x236>
 80025ee:	2303      	movs	r3, #3
 80025f0:	e160      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 80025f2:	4b0d      	ldr	r3, [pc, #52]	@ (8002628 <HAL_RCC_OscConfig+0x26c>)
 80025f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025f6:	f003 0302 	and.w	r3, r3, #2
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d0f0      	beq.n	80025e0 <HAL_RCC_OscConfig+0x224>
 80025fe:	2001      	movs	r0, #1
 8002600:	f000 faba 	bl	8002b78 <RCC_Delay>
 8002604:	e01c      	b.n	8002640 <HAL_RCC_OscConfig+0x284>
 8002606:	4b0a      	ldr	r3, [pc, #40]	@ (8002630 <HAL_RCC_OscConfig+0x274>)
 8002608:	2200      	movs	r2, #0
 800260a:	601a      	str	r2, [r3, #0]
 800260c:	f7fe ff32 	bl	8001474 <HAL_GetTick>
 8002610:	6138      	str	r0, [r7, #16]
 8002612:	e00f      	b.n	8002634 <HAL_RCC_OscConfig+0x278>
 8002614:	f7fe ff2e 	bl	8001474 <HAL_GetTick>
 8002618:	4602      	mov	r2, r0
 800261a:	693b      	ldr	r3, [r7, #16]
 800261c:	1ad3      	subs	r3, r2, r3
 800261e:	2b02      	cmp	r3, #2
 8002620:	d908      	bls.n	8002634 <HAL_RCC_OscConfig+0x278>
 8002622:	2303      	movs	r3, #3
 8002624:	e146      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 8002626:	bf00      	nop
 8002628:	40021000 	.word	0x40021000
 800262c:	42420000 	.word	0x42420000
 8002630:	42420480 	.word	0x42420480
 8002634:	4b92      	ldr	r3, [pc, #584]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002636:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002638:	f003 0302 	and.w	r3, r3, #2
 800263c:	2b00      	cmp	r3, #0
 800263e:	d1e9      	bne.n	8002614 <HAL_RCC_OscConfig+0x258>
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	681b      	ldr	r3, [r3, #0]
 8002644:	f003 0304 	and.w	r3, r3, #4
 8002648:	2b00      	cmp	r3, #0
 800264a:	f000 80a6 	beq.w	800279a <HAL_RCC_OscConfig+0x3de>
 800264e:	2300      	movs	r3, #0
 8002650:	75fb      	strb	r3, [r7, #23]
 8002652:	4b8b      	ldr	r3, [pc, #556]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002654:	69db      	ldr	r3, [r3, #28]
 8002656:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800265a:	2b00      	cmp	r3, #0
 800265c:	d10d      	bne.n	800267a <HAL_RCC_OscConfig+0x2be>
 800265e:	4b88      	ldr	r3, [pc, #544]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002660:	69db      	ldr	r3, [r3, #28]
 8002662:	4a87      	ldr	r2, [pc, #540]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002664:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002668:	61d3      	str	r3, [r2, #28]
 800266a:	4b85      	ldr	r3, [pc, #532]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 800266c:	69db      	ldr	r3, [r3, #28]
 800266e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002672:	60bb      	str	r3, [r7, #8]
 8002674:	68bb      	ldr	r3, [r7, #8]
 8002676:	2301      	movs	r3, #1
 8002678:	75fb      	strb	r3, [r7, #23]
 800267a:	4b82      	ldr	r3, [pc, #520]	@ (8002884 <HAL_RCC_OscConfig+0x4c8>)
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002682:	2b00      	cmp	r3, #0
 8002684:	d118      	bne.n	80026b8 <HAL_RCC_OscConfig+0x2fc>
 8002686:	4b7f      	ldr	r3, [pc, #508]	@ (8002884 <HAL_RCC_OscConfig+0x4c8>)
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	4a7e      	ldr	r2, [pc, #504]	@ (8002884 <HAL_RCC_OscConfig+0x4c8>)
 800268c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002690:	6013      	str	r3, [r2, #0]
 8002692:	f7fe feef 	bl	8001474 <HAL_GetTick>
 8002696:	6138      	str	r0, [r7, #16]
 8002698:	e008      	b.n	80026ac <HAL_RCC_OscConfig+0x2f0>
 800269a:	f7fe feeb 	bl	8001474 <HAL_GetTick>
 800269e:	4602      	mov	r2, r0
 80026a0:	693b      	ldr	r3, [r7, #16]
 80026a2:	1ad3      	subs	r3, r2, r3
 80026a4:	2b64      	cmp	r3, #100	@ 0x64
 80026a6:	d901      	bls.n	80026ac <HAL_RCC_OscConfig+0x2f0>
 80026a8:	2303      	movs	r3, #3
 80026aa:	e103      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 80026ac:	4b75      	ldr	r3, [pc, #468]	@ (8002884 <HAL_RCC_OscConfig+0x4c8>)
 80026ae:	681b      	ldr	r3, [r3, #0]
 80026b0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80026b4:	2b00      	cmp	r3, #0
 80026b6:	d0f0      	beq.n	800269a <HAL_RCC_OscConfig+0x2de>
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	68db      	ldr	r3, [r3, #12]
 80026bc:	2b01      	cmp	r3, #1
 80026be:	d106      	bne.n	80026ce <HAL_RCC_OscConfig+0x312>
 80026c0:	4b6f      	ldr	r3, [pc, #444]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80026c2:	6a1b      	ldr	r3, [r3, #32]
 80026c4:	4a6e      	ldr	r2, [pc, #440]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80026c6:	f043 0301 	orr.w	r3, r3, #1
 80026ca:	6213      	str	r3, [r2, #32]
 80026cc:	e02d      	b.n	800272a <HAL_RCC_OscConfig+0x36e>
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	68db      	ldr	r3, [r3, #12]
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	d10c      	bne.n	80026f0 <HAL_RCC_OscConfig+0x334>
 80026d6:	4b6a      	ldr	r3, [pc, #424]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80026d8:	6a1b      	ldr	r3, [r3, #32]
 80026da:	4a69      	ldr	r2, [pc, #420]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80026dc:	f023 0301 	bic.w	r3, r3, #1
 80026e0:	6213      	str	r3, [r2, #32]
 80026e2:	4b67      	ldr	r3, [pc, #412]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80026e4:	6a1b      	ldr	r3, [r3, #32]
 80026e6:	4a66      	ldr	r2, [pc, #408]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80026e8:	f023 0304 	bic.w	r3, r3, #4
 80026ec:	6213      	str	r3, [r2, #32]
 80026ee:	e01c      	b.n	800272a <HAL_RCC_OscConfig+0x36e>
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	68db      	ldr	r3, [r3, #12]
 80026f4:	2b05      	cmp	r3, #5
 80026f6:	d10c      	bne.n	8002712 <HAL_RCC_OscConfig+0x356>
 80026f8:	4b61      	ldr	r3, [pc, #388]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80026fa:	6a1b      	ldr	r3, [r3, #32]
 80026fc:	4a60      	ldr	r2, [pc, #384]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80026fe:	f043 0304 	orr.w	r3, r3, #4
 8002702:	6213      	str	r3, [r2, #32]
 8002704:	4b5e      	ldr	r3, [pc, #376]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002706:	6a1b      	ldr	r3, [r3, #32]
 8002708:	4a5d      	ldr	r2, [pc, #372]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 800270a:	f043 0301 	orr.w	r3, r3, #1
 800270e:	6213      	str	r3, [r2, #32]
 8002710:	e00b      	b.n	800272a <HAL_RCC_OscConfig+0x36e>
 8002712:	4b5b      	ldr	r3, [pc, #364]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002714:	6a1b      	ldr	r3, [r3, #32]
 8002716:	4a5a      	ldr	r2, [pc, #360]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002718:	f023 0301 	bic.w	r3, r3, #1
 800271c:	6213      	str	r3, [r2, #32]
 800271e:	4b58      	ldr	r3, [pc, #352]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002720:	6a1b      	ldr	r3, [r3, #32]
 8002722:	4a57      	ldr	r2, [pc, #348]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002724:	f023 0304 	bic.w	r3, r3, #4
 8002728:	6213      	str	r3, [r2, #32]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	68db      	ldr	r3, [r3, #12]
 800272e:	2b00      	cmp	r3, #0
 8002730:	d015      	beq.n	800275e <HAL_RCC_OscConfig+0x3a2>
 8002732:	f7fe fe9f 	bl	8001474 <HAL_GetTick>
 8002736:	6138      	str	r0, [r7, #16]
 8002738:	e00a      	b.n	8002750 <HAL_RCC_OscConfig+0x394>
 800273a:	f7fe fe9b 	bl	8001474 <HAL_GetTick>
 800273e:	4602      	mov	r2, r0
 8002740:	693b      	ldr	r3, [r7, #16]
 8002742:	1ad3      	subs	r3, r2, r3
 8002744:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002748:	4293      	cmp	r3, r2
 800274a:	d901      	bls.n	8002750 <HAL_RCC_OscConfig+0x394>
 800274c:	2303      	movs	r3, #3
 800274e:	e0b1      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 8002750:	4b4b      	ldr	r3, [pc, #300]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002752:	6a1b      	ldr	r3, [r3, #32]
 8002754:	f003 0302 	and.w	r3, r3, #2
 8002758:	2b00      	cmp	r3, #0
 800275a:	d0ee      	beq.n	800273a <HAL_RCC_OscConfig+0x37e>
 800275c:	e014      	b.n	8002788 <HAL_RCC_OscConfig+0x3cc>
 800275e:	f7fe fe89 	bl	8001474 <HAL_GetTick>
 8002762:	6138      	str	r0, [r7, #16]
 8002764:	e00a      	b.n	800277c <HAL_RCC_OscConfig+0x3c0>
 8002766:	f7fe fe85 	bl	8001474 <HAL_GetTick>
 800276a:	4602      	mov	r2, r0
 800276c:	693b      	ldr	r3, [r7, #16]
 800276e:	1ad3      	subs	r3, r2, r3
 8002770:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002774:	4293      	cmp	r3, r2
 8002776:	d901      	bls.n	800277c <HAL_RCC_OscConfig+0x3c0>
 8002778:	2303      	movs	r3, #3
 800277a:	e09b      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 800277c:	4b40      	ldr	r3, [pc, #256]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 800277e:	6a1b      	ldr	r3, [r3, #32]
 8002780:	f003 0302 	and.w	r3, r3, #2
 8002784:	2b00      	cmp	r3, #0
 8002786:	d1ee      	bne.n	8002766 <HAL_RCC_OscConfig+0x3aa>
 8002788:	7dfb      	ldrb	r3, [r7, #23]
 800278a:	2b01      	cmp	r3, #1
 800278c:	d105      	bne.n	800279a <HAL_RCC_OscConfig+0x3de>
 800278e:	4b3c      	ldr	r3, [pc, #240]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002790:	69db      	ldr	r3, [r3, #28]
 8002792:	4a3b      	ldr	r2, [pc, #236]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002794:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002798:	61d3      	str	r3, [r2, #28]
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	69db      	ldr	r3, [r3, #28]
 800279e:	2b00      	cmp	r3, #0
 80027a0:	f000 8087 	beq.w	80028b2 <HAL_RCC_OscConfig+0x4f6>
 80027a4:	4b36      	ldr	r3, [pc, #216]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80027a6:	685b      	ldr	r3, [r3, #4]
 80027a8:	f003 030c 	and.w	r3, r3, #12
 80027ac:	2b08      	cmp	r3, #8
 80027ae:	d061      	beq.n	8002874 <HAL_RCC_OscConfig+0x4b8>
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	69db      	ldr	r3, [r3, #28]
 80027b4:	2b02      	cmp	r3, #2
 80027b6:	d146      	bne.n	8002846 <HAL_RCC_OscConfig+0x48a>
 80027b8:	4b33      	ldr	r3, [pc, #204]	@ (8002888 <HAL_RCC_OscConfig+0x4cc>)
 80027ba:	2200      	movs	r2, #0
 80027bc:	601a      	str	r2, [r3, #0]
 80027be:	f7fe fe59 	bl	8001474 <HAL_GetTick>
 80027c2:	6138      	str	r0, [r7, #16]
 80027c4:	e008      	b.n	80027d8 <HAL_RCC_OscConfig+0x41c>
 80027c6:	f7fe fe55 	bl	8001474 <HAL_GetTick>
 80027ca:	4602      	mov	r2, r0
 80027cc:	693b      	ldr	r3, [r7, #16]
 80027ce:	1ad3      	subs	r3, r2, r3
 80027d0:	2b02      	cmp	r3, #2
 80027d2:	d901      	bls.n	80027d8 <HAL_RCC_OscConfig+0x41c>
 80027d4:	2303      	movs	r3, #3
 80027d6:	e06d      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 80027d8:	4b29      	ldr	r3, [pc, #164]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80027e0:	2b00      	cmp	r3, #0
 80027e2:	d1f0      	bne.n	80027c6 <HAL_RCC_OscConfig+0x40a>
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	6a1b      	ldr	r3, [r3, #32]
 80027e8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80027ec:	d108      	bne.n	8002800 <HAL_RCC_OscConfig+0x444>
 80027ee:	4b24      	ldr	r3, [pc, #144]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80027f0:	685b      	ldr	r3, [r3, #4]
 80027f2:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	689b      	ldr	r3, [r3, #8]
 80027fa:	4921      	ldr	r1, [pc, #132]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 80027fc:	4313      	orrs	r3, r2
 80027fe:	604b      	str	r3, [r1, #4]
 8002800:	4b1f      	ldr	r3, [pc, #124]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002802:	685b      	ldr	r3, [r3, #4]
 8002804:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	6a19      	ldr	r1, [r3, #32]
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002810:	430b      	orrs	r3, r1
 8002812:	491b      	ldr	r1, [pc, #108]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002814:	4313      	orrs	r3, r2
 8002816:	604b      	str	r3, [r1, #4]
 8002818:	4b1b      	ldr	r3, [pc, #108]	@ (8002888 <HAL_RCC_OscConfig+0x4cc>)
 800281a:	2201      	movs	r2, #1
 800281c:	601a      	str	r2, [r3, #0]
 800281e:	f7fe fe29 	bl	8001474 <HAL_GetTick>
 8002822:	6138      	str	r0, [r7, #16]
 8002824:	e008      	b.n	8002838 <HAL_RCC_OscConfig+0x47c>
 8002826:	f7fe fe25 	bl	8001474 <HAL_GetTick>
 800282a:	4602      	mov	r2, r0
 800282c:	693b      	ldr	r3, [r7, #16]
 800282e:	1ad3      	subs	r3, r2, r3
 8002830:	2b02      	cmp	r3, #2
 8002832:	d901      	bls.n	8002838 <HAL_RCC_OscConfig+0x47c>
 8002834:	2303      	movs	r3, #3
 8002836:	e03d      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 8002838:	4b11      	ldr	r3, [pc, #68]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 800283a:	681b      	ldr	r3, [r3, #0]
 800283c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002840:	2b00      	cmp	r3, #0
 8002842:	d0f0      	beq.n	8002826 <HAL_RCC_OscConfig+0x46a>
 8002844:	e035      	b.n	80028b2 <HAL_RCC_OscConfig+0x4f6>
 8002846:	4b10      	ldr	r3, [pc, #64]	@ (8002888 <HAL_RCC_OscConfig+0x4cc>)
 8002848:	2200      	movs	r2, #0
 800284a:	601a      	str	r2, [r3, #0]
 800284c:	f7fe fe12 	bl	8001474 <HAL_GetTick>
 8002850:	6138      	str	r0, [r7, #16]
 8002852:	e008      	b.n	8002866 <HAL_RCC_OscConfig+0x4aa>
 8002854:	f7fe fe0e 	bl	8001474 <HAL_GetTick>
 8002858:	4602      	mov	r2, r0
 800285a:	693b      	ldr	r3, [r7, #16]
 800285c:	1ad3      	subs	r3, r2, r3
 800285e:	2b02      	cmp	r3, #2
 8002860:	d901      	bls.n	8002866 <HAL_RCC_OscConfig+0x4aa>
 8002862:	2303      	movs	r3, #3
 8002864:	e026      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 8002866:	4b06      	ldr	r3, [pc, #24]	@ (8002880 <HAL_RCC_OscConfig+0x4c4>)
 8002868:	681b      	ldr	r3, [r3, #0]
 800286a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800286e:	2b00      	cmp	r3, #0
 8002870:	d1f0      	bne.n	8002854 <HAL_RCC_OscConfig+0x498>
 8002872:	e01e      	b.n	80028b2 <HAL_RCC_OscConfig+0x4f6>
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	69db      	ldr	r3, [r3, #28]
 8002878:	2b01      	cmp	r3, #1
 800287a:	d107      	bne.n	800288c <HAL_RCC_OscConfig+0x4d0>
 800287c:	2301      	movs	r3, #1
 800287e:	e019      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 8002880:	40021000 	.word	0x40021000
 8002884:	40007000 	.word	0x40007000
 8002888:	42420060 	.word	0x42420060
 800288c:	4b0b      	ldr	r3, [pc, #44]	@ (80028bc <HAL_RCC_OscConfig+0x500>)
 800288e:	685b      	ldr	r3, [r3, #4]
 8002890:	60fb      	str	r3, [r7, #12]
 8002892:	68fb      	ldr	r3, [r7, #12]
 8002894:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	6a1b      	ldr	r3, [r3, #32]
 800289c:	429a      	cmp	r2, r3
 800289e:	d106      	bne.n	80028ae <HAL_RCC_OscConfig+0x4f2>
 80028a0:	68fb      	ldr	r3, [r7, #12]
 80028a2:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028aa:	429a      	cmp	r2, r3
 80028ac:	d001      	beq.n	80028b2 <HAL_RCC_OscConfig+0x4f6>
 80028ae:	2301      	movs	r3, #1
 80028b0:	e000      	b.n	80028b4 <HAL_RCC_OscConfig+0x4f8>
 80028b2:	2300      	movs	r3, #0
 80028b4:	4618      	mov	r0, r3
 80028b6:	3718      	adds	r7, #24
 80028b8:	46bd      	mov	sp, r7
 80028ba:	bd80      	pop	{r7, pc}
 80028bc:	40021000 	.word	0x40021000

080028c0 <HAL_RCC_ClockConfig>:
 80028c0:	b580      	push	{r7, lr}
 80028c2:	b084      	sub	sp, #16
 80028c4:	af00      	add	r7, sp, #0
 80028c6:	6078      	str	r0, [r7, #4]
 80028c8:	6039      	str	r1, [r7, #0]
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	2b00      	cmp	r3, #0
 80028ce:	d101      	bne.n	80028d4 <HAL_RCC_ClockConfig+0x14>
 80028d0:	2301      	movs	r3, #1
 80028d2:	e0d0      	b.n	8002a76 <HAL_RCC_ClockConfig+0x1b6>
 80028d4:	4b6a      	ldr	r3, [pc, #424]	@ (8002a80 <HAL_RCC_ClockConfig+0x1c0>)
 80028d6:	681b      	ldr	r3, [r3, #0]
 80028d8:	f003 0307 	and.w	r3, r3, #7
 80028dc:	683a      	ldr	r2, [r7, #0]
 80028de:	429a      	cmp	r2, r3
 80028e0:	d910      	bls.n	8002904 <HAL_RCC_ClockConfig+0x44>
 80028e2:	4b67      	ldr	r3, [pc, #412]	@ (8002a80 <HAL_RCC_ClockConfig+0x1c0>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	f023 0207 	bic.w	r2, r3, #7
 80028ea:	4965      	ldr	r1, [pc, #404]	@ (8002a80 <HAL_RCC_ClockConfig+0x1c0>)
 80028ec:	683b      	ldr	r3, [r7, #0]
 80028ee:	4313      	orrs	r3, r2
 80028f0:	600b      	str	r3, [r1, #0]
 80028f2:	4b63      	ldr	r3, [pc, #396]	@ (8002a80 <HAL_RCC_ClockConfig+0x1c0>)
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	f003 0307 	and.w	r3, r3, #7
 80028fa:	683a      	ldr	r2, [r7, #0]
 80028fc:	429a      	cmp	r2, r3
 80028fe:	d001      	beq.n	8002904 <HAL_RCC_ClockConfig+0x44>
 8002900:	2301      	movs	r3, #1
 8002902:	e0b8      	b.n	8002a76 <HAL_RCC_ClockConfig+0x1b6>
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	681b      	ldr	r3, [r3, #0]
 8002908:	f003 0302 	and.w	r3, r3, #2
 800290c:	2b00      	cmp	r3, #0
 800290e:	d020      	beq.n	8002952 <HAL_RCC_ClockConfig+0x92>
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	f003 0304 	and.w	r3, r3, #4
 8002918:	2b00      	cmp	r3, #0
 800291a:	d005      	beq.n	8002928 <HAL_RCC_ClockConfig+0x68>
 800291c:	4b59      	ldr	r3, [pc, #356]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 800291e:	685b      	ldr	r3, [r3, #4]
 8002920:	4a58      	ldr	r2, [pc, #352]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002922:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8002926:	6053      	str	r3, [r2, #4]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	f003 0308 	and.w	r3, r3, #8
 8002930:	2b00      	cmp	r3, #0
 8002932:	d005      	beq.n	8002940 <HAL_RCC_ClockConfig+0x80>
 8002934:	4b53      	ldr	r3, [pc, #332]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002936:	685b      	ldr	r3, [r3, #4]
 8002938:	4a52      	ldr	r2, [pc, #328]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 800293a:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 800293e:	6053      	str	r3, [r2, #4]
 8002940:	4b50      	ldr	r3, [pc, #320]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002942:	685b      	ldr	r3, [r3, #4]
 8002944:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	689b      	ldr	r3, [r3, #8]
 800294c:	494d      	ldr	r1, [pc, #308]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 800294e:	4313      	orrs	r3, r2
 8002950:	604b      	str	r3, [r1, #4]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	f003 0301 	and.w	r3, r3, #1
 800295a:	2b00      	cmp	r3, #0
 800295c:	d040      	beq.n	80029e0 <HAL_RCC_ClockConfig+0x120>
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	685b      	ldr	r3, [r3, #4]
 8002962:	2b01      	cmp	r3, #1
 8002964:	d107      	bne.n	8002976 <HAL_RCC_ClockConfig+0xb6>
 8002966:	4b47      	ldr	r3, [pc, #284]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800296e:	2b00      	cmp	r3, #0
 8002970:	d115      	bne.n	800299e <HAL_RCC_ClockConfig+0xde>
 8002972:	2301      	movs	r3, #1
 8002974:	e07f      	b.n	8002a76 <HAL_RCC_ClockConfig+0x1b6>
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	685b      	ldr	r3, [r3, #4]
 800297a:	2b02      	cmp	r3, #2
 800297c:	d107      	bne.n	800298e <HAL_RCC_ClockConfig+0xce>
 800297e:	4b41      	ldr	r3, [pc, #260]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002980:	681b      	ldr	r3, [r3, #0]
 8002982:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002986:	2b00      	cmp	r3, #0
 8002988:	d109      	bne.n	800299e <HAL_RCC_ClockConfig+0xde>
 800298a:	2301      	movs	r3, #1
 800298c:	e073      	b.n	8002a76 <HAL_RCC_ClockConfig+0x1b6>
 800298e:	4b3d      	ldr	r3, [pc, #244]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002990:	681b      	ldr	r3, [r3, #0]
 8002992:	f003 0302 	and.w	r3, r3, #2
 8002996:	2b00      	cmp	r3, #0
 8002998:	d101      	bne.n	800299e <HAL_RCC_ClockConfig+0xde>
 800299a:	2301      	movs	r3, #1
 800299c:	e06b      	b.n	8002a76 <HAL_RCC_ClockConfig+0x1b6>
 800299e:	4b39      	ldr	r3, [pc, #228]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 80029a0:	685b      	ldr	r3, [r3, #4]
 80029a2:	f023 0203 	bic.w	r2, r3, #3
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	685b      	ldr	r3, [r3, #4]
 80029aa:	4936      	ldr	r1, [pc, #216]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 80029ac:	4313      	orrs	r3, r2
 80029ae:	604b      	str	r3, [r1, #4]
 80029b0:	f7fe fd60 	bl	8001474 <HAL_GetTick>
 80029b4:	60f8      	str	r0, [r7, #12]
 80029b6:	e00a      	b.n	80029ce <HAL_RCC_ClockConfig+0x10e>
 80029b8:	f7fe fd5c 	bl	8001474 <HAL_GetTick>
 80029bc:	4602      	mov	r2, r0
 80029be:	68fb      	ldr	r3, [r7, #12]
 80029c0:	1ad3      	subs	r3, r2, r3
 80029c2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80029c6:	4293      	cmp	r3, r2
 80029c8:	d901      	bls.n	80029ce <HAL_RCC_ClockConfig+0x10e>
 80029ca:	2303      	movs	r3, #3
 80029cc:	e053      	b.n	8002a76 <HAL_RCC_ClockConfig+0x1b6>
 80029ce:	4b2d      	ldr	r3, [pc, #180]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 80029d0:	685b      	ldr	r3, [r3, #4]
 80029d2:	f003 020c 	and.w	r2, r3, #12
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	685b      	ldr	r3, [r3, #4]
 80029da:	009b      	lsls	r3, r3, #2
 80029dc:	429a      	cmp	r2, r3
 80029de:	d1eb      	bne.n	80029b8 <HAL_RCC_ClockConfig+0xf8>
 80029e0:	4b27      	ldr	r3, [pc, #156]	@ (8002a80 <HAL_RCC_ClockConfig+0x1c0>)
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	f003 0307 	and.w	r3, r3, #7
 80029e8:	683a      	ldr	r2, [r7, #0]
 80029ea:	429a      	cmp	r2, r3
 80029ec:	d210      	bcs.n	8002a10 <HAL_RCC_ClockConfig+0x150>
 80029ee:	4b24      	ldr	r3, [pc, #144]	@ (8002a80 <HAL_RCC_ClockConfig+0x1c0>)
 80029f0:	681b      	ldr	r3, [r3, #0]
 80029f2:	f023 0207 	bic.w	r2, r3, #7
 80029f6:	4922      	ldr	r1, [pc, #136]	@ (8002a80 <HAL_RCC_ClockConfig+0x1c0>)
 80029f8:	683b      	ldr	r3, [r7, #0]
 80029fa:	4313      	orrs	r3, r2
 80029fc:	600b      	str	r3, [r1, #0]
 80029fe:	4b20      	ldr	r3, [pc, #128]	@ (8002a80 <HAL_RCC_ClockConfig+0x1c0>)
 8002a00:	681b      	ldr	r3, [r3, #0]
 8002a02:	f003 0307 	and.w	r3, r3, #7
 8002a06:	683a      	ldr	r2, [r7, #0]
 8002a08:	429a      	cmp	r2, r3
 8002a0a:	d001      	beq.n	8002a10 <HAL_RCC_ClockConfig+0x150>
 8002a0c:	2301      	movs	r3, #1
 8002a0e:	e032      	b.n	8002a76 <HAL_RCC_ClockConfig+0x1b6>
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	f003 0304 	and.w	r3, r3, #4
 8002a18:	2b00      	cmp	r3, #0
 8002a1a:	d008      	beq.n	8002a2e <HAL_RCC_ClockConfig+0x16e>
 8002a1c:	4b19      	ldr	r3, [pc, #100]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002a1e:	685b      	ldr	r3, [r3, #4]
 8002a20:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	68db      	ldr	r3, [r3, #12]
 8002a28:	4916      	ldr	r1, [pc, #88]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002a2a:	4313      	orrs	r3, r2
 8002a2c:	604b      	str	r3, [r1, #4]
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	f003 0308 	and.w	r3, r3, #8
 8002a36:	2b00      	cmp	r3, #0
 8002a38:	d009      	beq.n	8002a4e <HAL_RCC_ClockConfig+0x18e>
 8002a3a:	4b12      	ldr	r3, [pc, #72]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002a3c:	685b      	ldr	r3, [r3, #4]
 8002a3e:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	691b      	ldr	r3, [r3, #16]
 8002a46:	00db      	lsls	r3, r3, #3
 8002a48:	490e      	ldr	r1, [pc, #56]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002a4a:	4313      	orrs	r3, r2
 8002a4c:	604b      	str	r3, [r1, #4]
 8002a4e:	f000 f821 	bl	8002a94 <HAL_RCC_GetSysClockFreq>
 8002a52:	4602      	mov	r2, r0
 8002a54:	4b0b      	ldr	r3, [pc, #44]	@ (8002a84 <HAL_RCC_ClockConfig+0x1c4>)
 8002a56:	685b      	ldr	r3, [r3, #4]
 8002a58:	091b      	lsrs	r3, r3, #4
 8002a5a:	f003 030f 	and.w	r3, r3, #15
 8002a5e:	490a      	ldr	r1, [pc, #40]	@ (8002a88 <HAL_RCC_ClockConfig+0x1c8>)
 8002a60:	5ccb      	ldrb	r3, [r1, r3]
 8002a62:	fa22 f303 	lsr.w	r3, r2, r3
 8002a66:	4a09      	ldr	r2, [pc, #36]	@ (8002a8c <HAL_RCC_ClockConfig+0x1cc>)
 8002a68:	6013      	str	r3, [r2, #0]
 8002a6a:	4b09      	ldr	r3, [pc, #36]	@ (8002a90 <HAL_RCC_ClockConfig+0x1d0>)
 8002a6c:	681b      	ldr	r3, [r3, #0]
 8002a6e:	4618      	mov	r0, r3
 8002a70:	f7fe fcbe 	bl	80013f0 <HAL_InitTick>
 8002a74:	2300      	movs	r3, #0
 8002a76:	4618      	mov	r0, r3
 8002a78:	3710      	adds	r7, #16
 8002a7a:	46bd      	mov	sp, r7
 8002a7c:	bd80      	pop	{r7, pc}
 8002a7e:	bf00      	nop
 8002a80:	40022000 	.word	0x40022000
 8002a84:	40021000 	.word	0x40021000
 8002a88:	08003d64 	.word	0x08003d64
 8002a8c:	20000028 	.word	0x20000028
 8002a90:	2000002c 	.word	0x2000002c

08002a94 <HAL_RCC_GetSysClockFreq>:
 8002a94:	b480      	push	{r7}
 8002a96:	b087      	sub	sp, #28
 8002a98:	af00      	add	r7, sp, #0
 8002a9a:	2300      	movs	r3, #0
 8002a9c:	60fb      	str	r3, [r7, #12]
 8002a9e:	2300      	movs	r3, #0
 8002aa0:	60bb      	str	r3, [r7, #8]
 8002aa2:	2300      	movs	r3, #0
 8002aa4:	617b      	str	r3, [r7, #20]
 8002aa6:	2300      	movs	r3, #0
 8002aa8:	607b      	str	r3, [r7, #4]
 8002aaa:	2300      	movs	r3, #0
 8002aac:	613b      	str	r3, [r7, #16]
 8002aae:	4b1e      	ldr	r3, [pc, #120]	@ (8002b28 <HAL_RCC_GetSysClockFreq+0x94>)
 8002ab0:	685b      	ldr	r3, [r3, #4]
 8002ab2:	60fb      	str	r3, [r7, #12]
 8002ab4:	68fb      	ldr	r3, [r7, #12]
 8002ab6:	f003 030c 	and.w	r3, r3, #12
 8002aba:	2b04      	cmp	r3, #4
 8002abc:	d002      	beq.n	8002ac4 <HAL_RCC_GetSysClockFreq+0x30>
 8002abe:	2b08      	cmp	r3, #8
 8002ac0:	d003      	beq.n	8002aca <HAL_RCC_GetSysClockFreq+0x36>
 8002ac2:	e027      	b.n	8002b14 <HAL_RCC_GetSysClockFreq+0x80>
 8002ac4:	4b19      	ldr	r3, [pc, #100]	@ (8002b2c <HAL_RCC_GetSysClockFreq+0x98>)
 8002ac6:	613b      	str	r3, [r7, #16]
 8002ac8:	e027      	b.n	8002b1a <HAL_RCC_GetSysClockFreq+0x86>
 8002aca:	68fb      	ldr	r3, [r7, #12]
 8002acc:	0c9b      	lsrs	r3, r3, #18
 8002ace:	f003 030f 	and.w	r3, r3, #15
 8002ad2:	4a17      	ldr	r2, [pc, #92]	@ (8002b30 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002ad4:	5cd3      	ldrb	r3, [r2, r3]
 8002ad6:	607b      	str	r3, [r7, #4]
 8002ad8:	68fb      	ldr	r3, [r7, #12]
 8002ada:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d010      	beq.n	8002b04 <HAL_RCC_GetSysClockFreq+0x70>
 8002ae2:	4b11      	ldr	r3, [pc, #68]	@ (8002b28 <HAL_RCC_GetSysClockFreq+0x94>)
 8002ae4:	685b      	ldr	r3, [r3, #4]
 8002ae6:	0c5b      	lsrs	r3, r3, #17
 8002ae8:	f003 0301 	and.w	r3, r3, #1
 8002aec:	4a11      	ldr	r2, [pc, #68]	@ (8002b34 <HAL_RCC_GetSysClockFreq+0xa0>)
 8002aee:	5cd3      	ldrb	r3, [r2, r3]
 8002af0:	60bb      	str	r3, [r7, #8]
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	4a0d      	ldr	r2, [pc, #52]	@ (8002b2c <HAL_RCC_GetSysClockFreq+0x98>)
 8002af6:	fb03 f202 	mul.w	r2, r3, r2
 8002afa:	68bb      	ldr	r3, [r7, #8]
 8002afc:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b00:	617b      	str	r3, [r7, #20]
 8002b02:	e004      	b.n	8002b0e <HAL_RCC_GetSysClockFreq+0x7a>
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	4a0c      	ldr	r2, [pc, #48]	@ (8002b38 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002b08:	fb02 f303 	mul.w	r3, r2, r3
 8002b0c:	617b      	str	r3, [r7, #20]
 8002b0e:	697b      	ldr	r3, [r7, #20]
 8002b10:	613b      	str	r3, [r7, #16]
 8002b12:	e002      	b.n	8002b1a <HAL_RCC_GetSysClockFreq+0x86>
 8002b14:	4b05      	ldr	r3, [pc, #20]	@ (8002b2c <HAL_RCC_GetSysClockFreq+0x98>)
 8002b16:	613b      	str	r3, [r7, #16]
 8002b18:	bf00      	nop
 8002b1a:	693b      	ldr	r3, [r7, #16]
 8002b1c:	4618      	mov	r0, r3
 8002b1e:	371c      	adds	r7, #28
 8002b20:	46bd      	mov	sp, r7
 8002b22:	bc80      	pop	{r7}
 8002b24:	4770      	bx	lr
 8002b26:	bf00      	nop
 8002b28:	40021000 	.word	0x40021000
 8002b2c:	007a1200 	.word	0x007a1200
 8002b30:	08003d7c 	.word	0x08003d7c
 8002b34:	08003d8c 	.word	0x08003d8c
 8002b38:	003d0900 	.word	0x003d0900

08002b3c <HAL_RCC_GetHCLKFreq>:
 8002b3c:	b480      	push	{r7}
 8002b3e:	af00      	add	r7, sp, #0
 8002b40:	4b02      	ldr	r3, [pc, #8]	@ (8002b4c <HAL_RCC_GetHCLKFreq+0x10>)
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	4618      	mov	r0, r3
 8002b46:	46bd      	mov	sp, r7
 8002b48:	bc80      	pop	{r7}
 8002b4a:	4770      	bx	lr
 8002b4c:	20000028 	.word	0x20000028

08002b50 <HAL_RCC_GetPCLK1Freq>:
 8002b50:	b580      	push	{r7, lr}
 8002b52:	af00      	add	r7, sp, #0
 8002b54:	f7ff fff2 	bl	8002b3c <HAL_RCC_GetHCLKFreq>
 8002b58:	4602      	mov	r2, r0
 8002b5a:	4b05      	ldr	r3, [pc, #20]	@ (8002b70 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002b5c:	685b      	ldr	r3, [r3, #4]
 8002b5e:	0a1b      	lsrs	r3, r3, #8
 8002b60:	f003 0307 	and.w	r3, r3, #7
 8002b64:	4903      	ldr	r1, [pc, #12]	@ (8002b74 <HAL_RCC_GetPCLK1Freq+0x24>)
 8002b66:	5ccb      	ldrb	r3, [r1, r3]
 8002b68:	fa22 f303 	lsr.w	r3, r2, r3
 8002b6c:	4618      	mov	r0, r3
 8002b6e:	bd80      	pop	{r7, pc}
 8002b70:	40021000 	.word	0x40021000
 8002b74:	08003d74 	.word	0x08003d74

08002b78 <RCC_Delay>:
 8002b78:	b480      	push	{r7}
 8002b7a:	b085      	sub	sp, #20
 8002b7c:	af00      	add	r7, sp, #0
 8002b7e:	6078      	str	r0, [r7, #4]
 8002b80:	4b0a      	ldr	r3, [pc, #40]	@ (8002bac <RCC_Delay+0x34>)
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	4a0a      	ldr	r2, [pc, #40]	@ (8002bb0 <RCC_Delay+0x38>)
 8002b86:	fba2 2303 	umull	r2, r3, r2, r3
 8002b8a:	0a5b      	lsrs	r3, r3, #9
 8002b8c:	687a      	ldr	r2, [r7, #4]
 8002b8e:	fb02 f303 	mul.w	r3, r2, r3
 8002b92:	60fb      	str	r3, [r7, #12]
 8002b94:	bf00      	nop
 8002b96:	68fb      	ldr	r3, [r7, #12]
 8002b98:	1e5a      	subs	r2, r3, #1
 8002b9a:	60fa      	str	r2, [r7, #12]
 8002b9c:	2b00      	cmp	r3, #0
 8002b9e:	d1f9      	bne.n	8002b94 <RCC_Delay+0x1c>
 8002ba0:	bf00      	nop
 8002ba2:	bf00      	nop
 8002ba4:	3714      	adds	r7, #20
 8002ba6:	46bd      	mov	sp, r7
 8002ba8:	bc80      	pop	{r7}
 8002baa:	4770      	bx	lr
 8002bac:	20000028 	.word	0x20000028
 8002bb0:	10624dd3 	.word	0x10624dd3

08002bb4 <HAL_TIM_Base_Init>:
 8002bb4:	b580      	push	{r7, lr}
 8002bb6:	b082      	sub	sp, #8
 8002bb8:	af00      	add	r7, sp, #0
 8002bba:	6078      	str	r0, [r7, #4]
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d101      	bne.n	8002bc6 <HAL_TIM_Base_Init+0x12>
 8002bc2:	2301      	movs	r3, #1
 8002bc4:	e041      	b.n	8002c4a <HAL_TIM_Base_Init+0x96>
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002bcc:	b2db      	uxtb	r3, r3
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d106      	bne.n	8002be0 <HAL_TIM_Base_Init+0x2c>
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	2200      	movs	r2, #0
 8002bd6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002bda:	6878      	ldr	r0, [r7, #4]
 8002bdc:	f7fe fb36 	bl	800124c <HAL_TIM_Base_MspInit>
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	2202      	movs	r2, #2
 8002be4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681a      	ldr	r2, [r3, #0]
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	3304      	adds	r3, #4
 8002bf0:	4619      	mov	r1, r3
 8002bf2:	4610      	mov	r0, r2
 8002bf4:	f000 fa5c 	bl	80030b0 <TIM_Base_SetConfig>
 8002bf8:	687b      	ldr	r3, [r7, #4]
 8002bfa:	2201      	movs	r2, #1
 8002bfc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	2201      	movs	r2, #1
 8002c04:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	2201      	movs	r2, #1
 8002c0c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	2201      	movs	r2, #1
 8002c14:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	2201      	movs	r2, #1
 8002c1c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	2201      	movs	r2, #1
 8002c24:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	2201      	movs	r2, #1
 8002c2c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	2201      	movs	r2, #1
 8002c34:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	2201      	movs	r2, #1
 8002c3c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	2201      	movs	r2, #1
 8002c44:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002c48:	2300      	movs	r3, #0
 8002c4a:	4618      	mov	r0, r3
 8002c4c:	3708      	adds	r7, #8
 8002c4e:	46bd      	mov	sp, r7
 8002c50:	bd80      	pop	{r7, pc}
	...

08002c54 <HAL_TIM_Base_Start_IT>:
 8002c54:	b480      	push	{r7}
 8002c56:	b085      	sub	sp, #20
 8002c58:	af00      	add	r7, sp, #0
 8002c5a:	6078      	str	r0, [r7, #4]
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002c62:	b2db      	uxtb	r3, r3
 8002c64:	2b01      	cmp	r3, #1
 8002c66:	d001      	beq.n	8002c6c <HAL_TIM_Base_Start_IT+0x18>
 8002c68:	2301      	movs	r3, #1
 8002c6a:	e03a      	b.n	8002ce2 <HAL_TIM_Base_Start_IT+0x8e>
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	2202      	movs	r2, #2
 8002c70:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	68da      	ldr	r2, [r3, #12]
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	f042 0201 	orr.w	r2, r2, #1
 8002c82:	60da      	str	r2, [r3, #12]
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	4a18      	ldr	r2, [pc, #96]	@ (8002cec <HAL_TIM_Base_Start_IT+0x98>)
 8002c8a:	4293      	cmp	r3, r2
 8002c8c:	d00e      	beq.n	8002cac <HAL_TIM_Base_Start_IT+0x58>
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002c96:	d009      	beq.n	8002cac <HAL_TIM_Base_Start_IT+0x58>
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4a14      	ldr	r2, [pc, #80]	@ (8002cf0 <HAL_TIM_Base_Start_IT+0x9c>)
 8002c9e:	4293      	cmp	r3, r2
 8002ca0:	d004      	beq.n	8002cac <HAL_TIM_Base_Start_IT+0x58>
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	4a13      	ldr	r2, [pc, #76]	@ (8002cf4 <HAL_TIM_Base_Start_IT+0xa0>)
 8002ca8:	4293      	cmp	r3, r2
 8002caa:	d111      	bne.n	8002cd0 <HAL_TIM_Base_Start_IT+0x7c>
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	689b      	ldr	r3, [r3, #8]
 8002cb2:	f003 0307 	and.w	r3, r3, #7
 8002cb6:	60fb      	str	r3, [r7, #12]
 8002cb8:	68fb      	ldr	r3, [r7, #12]
 8002cba:	2b06      	cmp	r3, #6
 8002cbc:	d010      	beq.n	8002ce0 <HAL_TIM_Base_Start_IT+0x8c>
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	681b      	ldr	r3, [r3, #0]
 8002cc2:	681a      	ldr	r2, [r3, #0]
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	f042 0201 	orr.w	r2, r2, #1
 8002ccc:	601a      	str	r2, [r3, #0]
 8002cce:	e007      	b.n	8002ce0 <HAL_TIM_Base_Start_IT+0x8c>
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	681a      	ldr	r2, [r3, #0]
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	f042 0201 	orr.w	r2, r2, #1
 8002cde:	601a      	str	r2, [r3, #0]
 8002ce0:	2300      	movs	r3, #0
 8002ce2:	4618      	mov	r0, r3
 8002ce4:	3714      	adds	r7, #20
 8002ce6:	46bd      	mov	sp, r7
 8002ce8:	bc80      	pop	{r7}
 8002cea:	4770      	bx	lr
 8002cec:	40012c00 	.word	0x40012c00
 8002cf0:	40000400 	.word	0x40000400
 8002cf4:	40000800 	.word	0x40000800

08002cf8 <HAL_TIM_IRQHandler>:
 8002cf8:	b580      	push	{r7, lr}
 8002cfa:	b084      	sub	sp, #16
 8002cfc:	af00      	add	r7, sp, #0
 8002cfe:	6078      	str	r0, [r7, #4]
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	68db      	ldr	r3, [r3, #12]
 8002d06:	60fb      	str	r3, [r7, #12]
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	691b      	ldr	r3, [r3, #16]
 8002d0e:	60bb      	str	r3, [r7, #8]
 8002d10:	68bb      	ldr	r3, [r7, #8]
 8002d12:	f003 0302 	and.w	r3, r3, #2
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d020      	beq.n	8002d5c <HAL_TIM_IRQHandler+0x64>
 8002d1a:	68fb      	ldr	r3, [r7, #12]
 8002d1c:	f003 0302 	and.w	r3, r3, #2
 8002d20:	2b00      	cmp	r3, #0
 8002d22:	d01b      	beq.n	8002d5c <HAL_TIM_IRQHandler+0x64>
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	681b      	ldr	r3, [r3, #0]
 8002d28:	f06f 0202 	mvn.w	r2, #2
 8002d2c:	611a      	str	r2, [r3, #16]
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	2201      	movs	r2, #1
 8002d32:	771a      	strb	r2, [r3, #28]
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	699b      	ldr	r3, [r3, #24]
 8002d3a:	f003 0303 	and.w	r3, r3, #3
 8002d3e:	2b00      	cmp	r3, #0
 8002d40:	d003      	beq.n	8002d4a <HAL_TIM_IRQHandler+0x52>
 8002d42:	6878      	ldr	r0, [r7, #4]
 8002d44:	f000 f998 	bl	8003078 <HAL_TIM_IC_CaptureCallback>
 8002d48:	e005      	b.n	8002d56 <HAL_TIM_IRQHandler+0x5e>
 8002d4a:	6878      	ldr	r0, [r7, #4]
 8002d4c:	f000 f98b 	bl	8003066 <HAL_TIM_OC_DelayElapsedCallback>
 8002d50:	6878      	ldr	r0, [r7, #4]
 8002d52:	f000 f99a 	bl	800308a <HAL_TIM_PWM_PulseFinishedCallback>
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	2200      	movs	r2, #0
 8002d5a:	771a      	strb	r2, [r3, #28]
 8002d5c:	68bb      	ldr	r3, [r7, #8]
 8002d5e:	f003 0304 	and.w	r3, r3, #4
 8002d62:	2b00      	cmp	r3, #0
 8002d64:	d020      	beq.n	8002da8 <HAL_TIM_IRQHandler+0xb0>
 8002d66:	68fb      	ldr	r3, [r7, #12]
 8002d68:	f003 0304 	and.w	r3, r3, #4
 8002d6c:	2b00      	cmp	r3, #0
 8002d6e:	d01b      	beq.n	8002da8 <HAL_TIM_IRQHandler+0xb0>
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	f06f 0204 	mvn.w	r2, #4
 8002d78:	611a      	str	r2, [r3, #16]
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	2202      	movs	r2, #2
 8002d7e:	771a      	strb	r2, [r3, #28]
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	699b      	ldr	r3, [r3, #24]
 8002d86:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d003      	beq.n	8002d96 <HAL_TIM_IRQHandler+0x9e>
 8002d8e:	6878      	ldr	r0, [r7, #4]
 8002d90:	f000 f972 	bl	8003078 <HAL_TIM_IC_CaptureCallback>
 8002d94:	e005      	b.n	8002da2 <HAL_TIM_IRQHandler+0xaa>
 8002d96:	6878      	ldr	r0, [r7, #4]
 8002d98:	f000 f965 	bl	8003066 <HAL_TIM_OC_DelayElapsedCallback>
 8002d9c:	6878      	ldr	r0, [r7, #4]
 8002d9e:	f000 f974 	bl	800308a <HAL_TIM_PWM_PulseFinishedCallback>
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	2200      	movs	r2, #0
 8002da6:	771a      	strb	r2, [r3, #28]
 8002da8:	68bb      	ldr	r3, [r7, #8]
 8002daa:	f003 0308 	and.w	r3, r3, #8
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d020      	beq.n	8002df4 <HAL_TIM_IRQHandler+0xfc>
 8002db2:	68fb      	ldr	r3, [r7, #12]
 8002db4:	f003 0308 	and.w	r3, r3, #8
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d01b      	beq.n	8002df4 <HAL_TIM_IRQHandler+0xfc>
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	f06f 0208 	mvn.w	r2, #8
 8002dc4:	611a      	str	r2, [r3, #16]
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	2204      	movs	r2, #4
 8002dca:	771a      	strb	r2, [r3, #28]
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	69db      	ldr	r3, [r3, #28]
 8002dd2:	f003 0303 	and.w	r3, r3, #3
 8002dd6:	2b00      	cmp	r3, #0
 8002dd8:	d003      	beq.n	8002de2 <HAL_TIM_IRQHandler+0xea>
 8002dda:	6878      	ldr	r0, [r7, #4]
 8002ddc:	f000 f94c 	bl	8003078 <HAL_TIM_IC_CaptureCallback>
 8002de0:	e005      	b.n	8002dee <HAL_TIM_IRQHandler+0xf6>
 8002de2:	6878      	ldr	r0, [r7, #4]
 8002de4:	f000 f93f 	bl	8003066 <HAL_TIM_OC_DelayElapsedCallback>
 8002de8:	6878      	ldr	r0, [r7, #4]
 8002dea:	f000 f94e 	bl	800308a <HAL_TIM_PWM_PulseFinishedCallback>
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	2200      	movs	r2, #0
 8002df2:	771a      	strb	r2, [r3, #28]
 8002df4:	68bb      	ldr	r3, [r7, #8]
 8002df6:	f003 0310 	and.w	r3, r3, #16
 8002dfa:	2b00      	cmp	r3, #0
 8002dfc:	d020      	beq.n	8002e40 <HAL_TIM_IRQHandler+0x148>
 8002dfe:	68fb      	ldr	r3, [r7, #12]
 8002e00:	f003 0310 	and.w	r3, r3, #16
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	d01b      	beq.n	8002e40 <HAL_TIM_IRQHandler+0x148>
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	f06f 0210 	mvn.w	r2, #16
 8002e10:	611a      	str	r2, [r3, #16]
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	2208      	movs	r2, #8
 8002e16:	771a      	strb	r2, [r3, #28]
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	69db      	ldr	r3, [r3, #28]
 8002e1e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8002e22:	2b00      	cmp	r3, #0
 8002e24:	d003      	beq.n	8002e2e <HAL_TIM_IRQHandler+0x136>
 8002e26:	6878      	ldr	r0, [r7, #4]
 8002e28:	f000 f926 	bl	8003078 <HAL_TIM_IC_CaptureCallback>
 8002e2c:	e005      	b.n	8002e3a <HAL_TIM_IRQHandler+0x142>
 8002e2e:	6878      	ldr	r0, [r7, #4]
 8002e30:	f000 f919 	bl	8003066 <HAL_TIM_OC_DelayElapsedCallback>
 8002e34:	6878      	ldr	r0, [r7, #4]
 8002e36:	f000 f928 	bl	800308a <HAL_TIM_PWM_PulseFinishedCallback>
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	771a      	strb	r2, [r3, #28]
 8002e40:	68bb      	ldr	r3, [r7, #8]
 8002e42:	f003 0301 	and.w	r3, r3, #1
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d00c      	beq.n	8002e64 <HAL_TIM_IRQHandler+0x16c>
 8002e4a:	68fb      	ldr	r3, [r7, #12]
 8002e4c:	f003 0301 	and.w	r3, r3, #1
 8002e50:	2b00      	cmp	r3, #0
 8002e52:	d007      	beq.n	8002e64 <HAL_TIM_IRQHandler+0x16c>
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	681b      	ldr	r3, [r3, #0]
 8002e58:	f06f 0201 	mvn.w	r2, #1
 8002e5c:	611a      	str	r2, [r3, #16]
 8002e5e:	6878      	ldr	r0, [r7, #4]
 8002e60:	f7fe f85e 	bl	8000f20 <HAL_TIM_PeriodElapsedCallback>
 8002e64:	68bb      	ldr	r3, [r7, #8]
 8002e66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d00c      	beq.n	8002e88 <HAL_TIM_IRQHandler+0x190>
 8002e6e:	68fb      	ldr	r3, [r7, #12]
 8002e70:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002e74:	2b00      	cmp	r3, #0
 8002e76:	d007      	beq.n	8002e88 <HAL_TIM_IRQHandler+0x190>
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8002e80:	611a      	str	r2, [r3, #16]
 8002e82:	6878      	ldr	r0, [r7, #4]
 8002e84:	f000 fa7f 	bl	8003386 <HAL_TIMEx_BreakCallback>
 8002e88:	68bb      	ldr	r3, [r7, #8]
 8002e8a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	d00c      	beq.n	8002eac <HAL_TIM_IRQHandler+0x1b4>
 8002e92:	68fb      	ldr	r3, [r7, #12]
 8002e94:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d007      	beq.n	8002eac <HAL_TIM_IRQHandler+0x1b4>
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8002ea4:	611a      	str	r2, [r3, #16]
 8002ea6:	6878      	ldr	r0, [r7, #4]
 8002ea8:	f000 f8f8 	bl	800309c <HAL_TIM_TriggerCallback>
 8002eac:	68bb      	ldr	r3, [r7, #8]
 8002eae:	f003 0320 	and.w	r3, r3, #32
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d00c      	beq.n	8002ed0 <HAL_TIM_IRQHandler+0x1d8>
 8002eb6:	68fb      	ldr	r3, [r7, #12]
 8002eb8:	f003 0320 	and.w	r3, r3, #32
 8002ebc:	2b00      	cmp	r3, #0
 8002ebe:	d007      	beq.n	8002ed0 <HAL_TIM_IRQHandler+0x1d8>
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	f06f 0220 	mvn.w	r2, #32
 8002ec8:	611a      	str	r2, [r3, #16]
 8002eca:	6878      	ldr	r0, [r7, #4]
 8002ecc:	f000 fa52 	bl	8003374 <HAL_TIMEx_CommutCallback>
 8002ed0:	bf00      	nop
 8002ed2:	3710      	adds	r7, #16
 8002ed4:	46bd      	mov	sp, r7
 8002ed6:	bd80      	pop	{r7, pc}

08002ed8 <HAL_TIM_ConfigClockSource>:
 8002ed8:	b580      	push	{r7, lr}
 8002eda:	b084      	sub	sp, #16
 8002edc:	af00      	add	r7, sp, #0
 8002ede:	6078      	str	r0, [r7, #4]
 8002ee0:	6039      	str	r1, [r7, #0]
 8002ee2:	2300      	movs	r3, #0
 8002ee4:	73fb      	strb	r3, [r7, #15]
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002eec:	2b01      	cmp	r3, #1
 8002eee:	d101      	bne.n	8002ef4 <HAL_TIM_ConfigClockSource+0x1c>
 8002ef0:	2302      	movs	r3, #2
 8002ef2:	e0b4      	b.n	800305e <HAL_TIM_ConfigClockSource+0x186>
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	2201      	movs	r2, #1
 8002ef8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	2202      	movs	r2, #2
 8002f00:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	689b      	ldr	r3, [r3, #8]
 8002f0a:	60bb      	str	r3, [r7, #8]
 8002f0c:	68bb      	ldr	r3, [r7, #8]
 8002f0e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8002f12:	60bb      	str	r3, [r7, #8]
 8002f14:	68bb      	ldr	r3, [r7, #8]
 8002f16:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8002f1a:	60bb      	str	r3, [r7, #8]
 8002f1c:	687b      	ldr	r3, [r7, #4]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	68ba      	ldr	r2, [r7, #8]
 8002f22:	609a      	str	r2, [r3, #8]
 8002f24:	683b      	ldr	r3, [r7, #0]
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002f2c:	d03e      	beq.n	8002fac <HAL_TIM_ConfigClockSource+0xd4>
 8002f2e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8002f32:	f200 8087 	bhi.w	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f36:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002f3a:	f000 8086 	beq.w	800304a <HAL_TIM_ConfigClockSource+0x172>
 8002f3e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002f42:	d87f      	bhi.n	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f44:	2b70      	cmp	r3, #112	@ 0x70
 8002f46:	d01a      	beq.n	8002f7e <HAL_TIM_ConfigClockSource+0xa6>
 8002f48:	2b70      	cmp	r3, #112	@ 0x70
 8002f4a:	d87b      	bhi.n	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f4c:	2b60      	cmp	r3, #96	@ 0x60
 8002f4e:	d050      	beq.n	8002ff2 <HAL_TIM_ConfigClockSource+0x11a>
 8002f50:	2b60      	cmp	r3, #96	@ 0x60
 8002f52:	d877      	bhi.n	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f54:	2b50      	cmp	r3, #80	@ 0x50
 8002f56:	d03c      	beq.n	8002fd2 <HAL_TIM_ConfigClockSource+0xfa>
 8002f58:	2b50      	cmp	r3, #80	@ 0x50
 8002f5a:	d873      	bhi.n	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f5c:	2b40      	cmp	r3, #64	@ 0x40
 8002f5e:	d058      	beq.n	8003012 <HAL_TIM_ConfigClockSource+0x13a>
 8002f60:	2b40      	cmp	r3, #64	@ 0x40
 8002f62:	d86f      	bhi.n	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f64:	2b30      	cmp	r3, #48	@ 0x30
 8002f66:	d064      	beq.n	8003032 <HAL_TIM_ConfigClockSource+0x15a>
 8002f68:	2b30      	cmp	r3, #48	@ 0x30
 8002f6a:	d86b      	bhi.n	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f6c:	2b20      	cmp	r3, #32
 8002f6e:	d060      	beq.n	8003032 <HAL_TIM_ConfigClockSource+0x15a>
 8002f70:	2b20      	cmp	r3, #32
 8002f72:	d867      	bhi.n	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f74:	2b00      	cmp	r3, #0
 8002f76:	d05c      	beq.n	8003032 <HAL_TIM_ConfigClockSource+0x15a>
 8002f78:	2b10      	cmp	r3, #16
 8002f7a:	d05a      	beq.n	8003032 <HAL_TIM_ConfigClockSource+0x15a>
 8002f7c:	e062      	b.n	8003044 <HAL_TIM_ConfigClockSource+0x16c>
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	6818      	ldr	r0, [r3, #0]
 8002f82:	683b      	ldr	r3, [r7, #0]
 8002f84:	6899      	ldr	r1, [r3, #8]
 8002f86:	683b      	ldr	r3, [r7, #0]
 8002f88:	685a      	ldr	r2, [r3, #4]
 8002f8a:	683b      	ldr	r3, [r7, #0]
 8002f8c:	68db      	ldr	r3, [r3, #12]
 8002f8e:	f000 f974 	bl	800327a <TIM_ETR_SetConfig>
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	689b      	ldr	r3, [r3, #8]
 8002f98:	60bb      	str	r3, [r7, #8]
 8002f9a:	68bb      	ldr	r3, [r7, #8]
 8002f9c:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8002fa0:	60bb      	str	r3, [r7, #8]
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	681b      	ldr	r3, [r3, #0]
 8002fa6:	68ba      	ldr	r2, [r7, #8]
 8002fa8:	609a      	str	r2, [r3, #8]
 8002faa:	e04f      	b.n	800304c <HAL_TIM_ConfigClockSource+0x174>
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	6818      	ldr	r0, [r3, #0]
 8002fb0:	683b      	ldr	r3, [r7, #0]
 8002fb2:	6899      	ldr	r1, [r3, #8]
 8002fb4:	683b      	ldr	r3, [r7, #0]
 8002fb6:	685a      	ldr	r2, [r3, #4]
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	68db      	ldr	r3, [r3, #12]
 8002fbc:	f000 f95d 	bl	800327a <TIM_ETR_SetConfig>
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	681b      	ldr	r3, [r3, #0]
 8002fc4:	689a      	ldr	r2, [r3, #8]
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8002fce:	609a      	str	r2, [r3, #8]
 8002fd0:	e03c      	b.n	800304c <HAL_TIM_ConfigClockSource+0x174>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	6818      	ldr	r0, [r3, #0]
 8002fd6:	683b      	ldr	r3, [r7, #0]
 8002fd8:	6859      	ldr	r1, [r3, #4]
 8002fda:	683b      	ldr	r3, [r7, #0]
 8002fdc:	68db      	ldr	r3, [r3, #12]
 8002fde:	461a      	mov	r2, r3
 8002fe0:	f000 f8d4 	bl	800318c <TIM_TI1_ConfigInputStage>
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	2150      	movs	r1, #80	@ 0x50
 8002fea:	4618      	mov	r0, r3
 8002fec:	f000 f92b 	bl	8003246 <TIM_ITRx_SetConfig>
 8002ff0:	e02c      	b.n	800304c <HAL_TIM_ConfigClockSource+0x174>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	6818      	ldr	r0, [r3, #0]
 8002ff6:	683b      	ldr	r3, [r7, #0]
 8002ff8:	6859      	ldr	r1, [r3, #4]
 8002ffa:	683b      	ldr	r3, [r7, #0]
 8002ffc:	68db      	ldr	r3, [r3, #12]
 8002ffe:	461a      	mov	r2, r3
 8003000:	f000 f8f2 	bl	80031e8 <TIM_TI2_ConfigInputStage>
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	2160      	movs	r1, #96	@ 0x60
 800300a:	4618      	mov	r0, r3
 800300c:	f000 f91b 	bl	8003246 <TIM_ITRx_SetConfig>
 8003010:	e01c      	b.n	800304c <HAL_TIM_ConfigClockSource+0x174>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	6818      	ldr	r0, [r3, #0]
 8003016:	683b      	ldr	r3, [r7, #0]
 8003018:	6859      	ldr	r1, [r3, #4]
 800301a:	683b      	ldr	r3, [r7, #0]
 800301c:	68db      	ldr	r3, [r3, #12]
 800301e:	461a      	mov	r2, r3
 8003020:	f000 f8b4 	bl	800318c <TIM_TI1_ConfigInputStage>
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	2140      	movs	r1, #64	@ 0x40
 800302a:	4618      	mov	r0, r3
 800302c:	f000 f90b 	bl	8003246 <TIM_ITRx_SetConfig>
 8003030:	e00c      	b.n	800304c <HAL_TIM_ConfigClockSource+0x174>
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	681a      	ldr	r2, [r3, #0]
 8003036:	683b      	ldr	r3, [r7, #0]
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	4619      	mov	r1, r3
 800303c:	4610      	mov	r0, r2
 800303e:	f000 f902 	bl	8003246 <TIM_ITRx_SetConfig>
 8003042:	e003      	b.n	800304c <HAL_TIM_ConfigClockSource+0x174>
 8003044:	2301      	movs	r3, #1
 8003046:	73fb      	strb	r3, [r7, #15]
 8003048:	e000      	b.n	800304c <HAL_TIM_ConfigClockSource+0x174>
 800304a:	bf00      	nop
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	2201      	movs	r2, #1
 8003050:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	2200      	movs	r2, #0
 8003058:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800305c:	7bfb      	ldrb	r3, [r7, #15]
 800305e:	4618      	mov	r0, r3
 8003060:	3710      	adds	r7, #16
 8003062:	46bd      	mov	sp, r7
 8003064:	bd80      	pop	{r7, pc}

08003066 <HAL_TIM_OC_DelayElapsedCallback>:
 8003066:	b480      	push	{r7}
 8003068:	b083      	sub	sp, #12
 800306a:	af00      	add	r7, sp, #0
 800306c:	6078      	str	r0, [r7, #4]
 800306e:	bf00      	nop
 8003070:	370c      	adds	r7, #12
 8003072:	46bd      	mov	sp, r7
 8003074:	bc80      	pop	{r7}
 8003076:	4770      	bx	lr

08003078 <HAL_TIM_IC_CaptureCallback>:
 8003078:	b480      	push	{r7}
 800307a:	b083      	sub	sp, #12
 800307c:	af00      	add	r7, sp, #0
 800307e:	6078      	str	r0, [r7, #4]
 8003080:	bf00      	nop
 8003082:	370c      	adds	r7, #12
 8003084:	46bd      	mov	sp, r7
 8003086:	bc80      	pop	{r7}
 8003088:	4770      	bx	lr

0800308a <HAL_TIM_PWM_PulseFinishedCallback>:
 800308a:	b480      	push	{r7}
 800308c:	b083      	sub	sp, #12
 800308e:	af00      	add	r7, sp, #0
 8003090:	6078      	str	r0, [r7, #4]
 8003092:	bf00      	nop
 8003094:	370c      	adds	r7, #12
 8003096:	46bd      	mov	sp, r7
 8003098:	bc80      	pop	{r7}
 800309a:	4770      	bx	lr

0800309c <HAL_TIM_TriggerCallback>:
 800309c:	b480      	push	{r7}
 800309e:	b083      	sub	sp, #12
 80030a0:	af00      	add	r7, sp, #0
 80030a2:	6078      	str	r0, [r7, #4]
 80030a4:	bf00      	nop
 80030a6:	370c      	adds	r7, #12
 80030a8:	46bd      	mov	sp, r7
 80030aa:	bc80      	pop	{r7}
 80030ac:	4770      	bx	lr
	...

080030b0 <TIM_Base_SetConfig>:
 80030b0:	b480      	push	{r7}
 80030b2:	b085      	sub	sp, #20
 80030b4:	af00      	add	r7, sp, #0
 80030b6:	6078      	str	r0, [r7, #4]
 80030b8:	6039      	str	r1, [r7, #0]
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	681b      	ldr	r3, [r3, #0]
 80030be:	60fb      	str	r3, [r7, #12]
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	4a2f      	ldr	r2, [pc, #188]	@ (8003180 <TIM_Base_SetConfig+0xd0>)
 80030c4:	4293      	cmp	r3, r2
 80030c6:	d00b      	beq.n	80030e0 <TIM_Base_SetConfig+0x30>
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80030ce:	d007      	beq.n	80030e0 <TIM_Base_SetConfig+0x30>
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	4a2c      	ldr	r2, [pc, #176]	@ (8003184 <TIM_Base_SetConfig+0xd4>)
 80030d4:	4293      	cmp	r3, r2
 80030d6:	d003      	beq.n	80030e0 <TIM_Base_SetConfig+0x30>
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	4a2b      	ldr	r2, [pc, #172]	@ (8003188 <TIM_Base_SetConfig+0xd8>)
 80030dc:	4293      	cmp	r3, r2
 80030de:	d108      	bne.n	80030f2 <TIM_Base_SetConfig+0x42>
 80030e0:	68fb      	ldr	r3, [r7, #12]
 80030e2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80030e6:	60fb      	str	r3, [r7, #12]
 80030e8:	683b      	ldr	r3, [r7, #0]
 80030ea:	685b      	ldr	r3, [r3, #4]
 80030ec:	68fa      	ldr	r2, [r7, #12]
 80030ee:	4313      	orrs	r3, r2
 80030f0:	60fb      	str	r3, [r7, #12]
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	4a22      	ldr	r2, [pc, #136]	@ (8003180 <TIM_Base_SetConfig+0xd0>)
 80030f6:	4293      	cmp	r3, r2
 80030f8:	d00b      	beq.n	8003112 <TIM_Base_SetConfig+0x62>
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003100:	d007      	beq.n	8003112 <TIM_Base_SetConfig+0x62>
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	4a1f      	ldr	r2, [pc, #124]	@ (8003184 <TIM_Base_SetConfig+0xd4>)
 8003106:	4293      	cmp	r3, r2
 8003108:	d003      	beq.n	8003112 <TIM_Base_SetConfig+0x62>
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	4a1e      	ldr	r2, [pc, #120]	@ (8003188 <TIM_Base_SetConfig+0xd8>)
 800310e:	4293      	cmp	r3, r2
 8003110:	d108      	bne.n	8003124 <TIM_Base_SetConfig+0x74>
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8003118:	60fb      	str	r3, [r7, #12]
 800311a:	683b      	ldr	r3, [r7, #0]
 800311c:	68db      	ldr	r3, [r3, #12]
 800311e:	68fa      	ldr	r2, [r7, #12]
 8003120:	4313      	orrs	r3, r2
 8003122:	60fb      	str	r3, [r7, #12]
 8003124:	68fb      	ldr	r3, [r7, #12]
 8003126:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800312a:	683b      	ldr	r3, [r7, #0]
 800312c:	695b      	ldr	r3, [r3, #20]
 800312e:	4313      	orrs	r3, r2
 8003130:	60fb      	str	r3, [r7, #12]
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	68fa      	ldr	r2, [r7, #12]
 8003136:	601a      	str	r2, [r3, #0]
 8003138:	683b      	ldr	r3, [r7, #0]
 800313a:	689a      	ldr	r2, [r3, #8]
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003140:	683b      	ldr	r3, [r7, #0]
 8003142:	681a      	ldr	r2, [r3, #0]
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	629a      	str	r2, [r3, #40]	@ 0x28
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	4a0d      	ldr	r2, [pc, #52]	@ (8003180 <TIM_Base_SetConfig+0xd0>)
 800314c:	4293      	cmp	r3, r2
 800314e:	d103      	bne.n	8003158 <TIM_Base_SetConfig+0xa8>
 8003150:	683b      	ldr	r3, [r7, #0]
 8003152:	691a      	ldr	r2, [r3, #16]
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	631a      	str	r2, [r3, #48]	@ 0x30
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	2201      	movs	r2, #1
 800315c:	615a      	str	r2, [r3, #20]
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	691b      	ldr	r3, [r3, #16]
 8003162:	f003 0301 	and.w	r3, r3, #1
 8003166:	2b00      	cmp	r3, #0
 8003168:	d005      	beq.n	8003176 <TIM_Base_SetConfig+0xc6>
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	691b      	ldr	r3, [r3, #16]
 800316e:	f023 0201 	bic.w	r2, r3, #1
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	611a      	str	r2, [r3, #16]
 8003176:	bf00      	nop
 8003178:	3714      	adds	r7, #20
 800317a:	46bd      	mov	sp, r7
 800317c:	bc80      	pop	{r7}
 800317e:	4770      	bx	lr
 8003180:	40012c00 	.word	0x40012c00
 8003184:	40000400 	.word	0x40000400
 8003188:	40000800 	.word	0x40000800

0800318c <TIM_TI1_ConfigInputStage>:
 800318c:	b480      	push	{r7}
 800318e:	b087      	sub	sp, #28
 8003190:	af00      	add	r7, sp, #0
 8003192:	60f8      	str	r0, [r7, #12]
 8003194:	60b9      	str	r1, [r7, #8]
 8003196:	607a      	str	r2, [r7, #4]
 8003198:	68fb      	ldr	r3, [r7, #12]
 800319a:	6a1b      	ldr	r3, [r3, #32]
 800319c:	617b      	str	r3, [r7, #20]
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	6a1b      	ldr	r3, [r3, #32]
 80031a2:	f023 0201 	bic.w	r2, r3, #1
 80031a6:	68fb      	ldr	r3, [r7, #12]
 80031a8:	621a      	str	r2, [r3, #32]
 80031aa:	68fb      	ldr	r3, [r7, #12]
 80031ac:	699b      	ldr	r3, [r3, #24]
 80031ae:	613b      	str	r3, [r7, #16]
 80031b0:	693b      	ldr	r3, [r7, #16]
 80031b2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80031b6:	613b      	str	r3, [r7, #16]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	011b      	lsls	r3, r3, #4
 80031bc:	693a      	ldr	r2, [r7, #16]
 80031be:	4313      	orrs	r3, r2
 80031c0:	613b      	str	r3, [r7, #16]
 80031c2:	697b      	ldr	r3, [r7, #20]
 80031c4:	f023 030a 	bic.w	r3, r3, #10
 80031c8:	617b      	str	r3, [r7, #20]
 80031ca:	697a      	ldr	r2, [r7, #20]
 80031cc:	68bb      	ldr	r3, [r7, #8]
 80031ce:	4313      	orrs	r3, r2
 80031d0:	617b      	str	r3, [r7, #20]
 80031d2:	68fb      	ldr	r3, [r7, #12]
 80031d4:	693a      	ldr	r2, [r7, #16]
 80031d6:	619a      	str	r2, [r3, #24]
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	697a      	ldr	r2, [r7, #20]
 80031dc:	621a      	str	r2, [r3, #32]
 80031de:	bf00      	nop
 80031e0:	371c      	adds	r7, #28
 80031e2:	46bd      	mov	sp, r7
 80031e4:	bc80      	pop	{r7}
 80031e6:	4770      	bx	lr

080031e8 <TIM_TI2_ConfigInputStage>:
 80031e8:	b480      	push	{r7}
 80031ea:	b087      	sub	sp, #28
 80031ec:	af00      	add	r7, sp, #0
 80031ee:	60f8      	str	r0, [r7, #12]
 80031f0:	60b9      	str	r1, [r7, #8]
 80031f2:	607a      	str	r2, [r7, #4]
 80031f4:	68fb      	ldr	r3, [r7, #12]
 80031f6:	6a1b      	ldr	r3, [r3, #32]
 80031f8:	617b      	str	r3, [r7, #20]
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	6a1b      	ldr	r3, [r3, #32]
 80031fe:	f023 0210 	bic.w	r2, r3, #16
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	621a      	str	r2, [r3, #32]
 8003206:	68fb      	ldr	r3, [r7, #12]
 8003208:	699b      	ldr	r3, [r3, #24]
 800320a:	613b      	str	r3, [r7, #16]
 800320c:	693b      	ldr	r3, [r7, #16]
 800320e:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8003212:	613b      	str	r3, [r7, #16]
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	031b      	lsls	r3, r3, #12
 8003218:	693a      	ldr	r2, [r7, #16]
 800321a:	4313      	orrs	r3, r2
 800321c:	613b      	str	r3, [r7, #16]
 800321e:	697b      	ldr	r3, [r7, #20]
 8003220:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8003224:	617b      	str	r3, [r7, #20]
 8003226:	68bb      	ldr	r3, [r7, #8]
 8003228:	011b      	lsls	r3, r3, #4
 800322a:	697a      	ldr	r2, [r7, #20]
 800322c:	4313      	orrs	r3, r2
 800322e:	617b      	str	r3, [r7, #20]
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	693a      	ldr	r2, [r7, #16]
 8003234:	619a      	str	r2, [r3, #24]
 8003236:	68fb      	ldr	r3, [r7, #12]
 8003238:	697a      	ldr	r2, [r7, #20]
 800323a:	621a      	str	r2, [r3, #32]
 800323c:	bf00      	nop
 800323e:	371c      	adds	r7, #28
 8003240:	46bd      	mov	sp, r7
 8003242:	bc80      	pop	{r7}
 8003244:	4770      	bx	lr

08003246 <TIM_ITRx_SetConfig>:
 8003246:	b480      	push	{r7}
 8003248:	b085      	sub	sp, #20
 800324a:	af00      	add	r7, sp, #0
 800324c:	6078      	str	r0, [r7, #4]
 800324e:	6039      	str	r1, [r7, #0]
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	689b      	ldr	r3, [r3, #8]
 8003254:	60fb      	str	r3, [r7, #12]
 8003256:	68fb      	ldr	r3, [r7, #12]
 8003258:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800325c:	60fb      	str	r3, [r7, #12]
 800325e:	683a      	ldr	r2, [r7, #0]
 8003260:	68fb      	ldr	r3, [r7, #12]
 8003262:	4313      	orrs	r3, r2
 8003264:	f043 0307 	orr.w	r3, r3, #7
 8003268:	60fb      	str	r3, [r7, #12]
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	68fa      	ldr	r2, [r7, #12]
 800326e:	609a      	str	r2, [r3, #8]
 8003270:	bf00      	nop
 8003272:	3714      	adds	r7, #20
 8003274:	46bd      	mov	sp, r7
 8003276:	bc80      	pop	{r7}
 8003278:	4770      	bx	lr

0800327a <TIM_ETR_SetConfig>:
 800327a:	b480      	push	{r7}
 800327c:	b087      	sub	sp, #28
 800327e:	af00      	add	r7, sp, #0
 8003280:	60f8      	str	r0, [r7, #12]
 8003282:	60b9      	str	r1, [r7, #8]
 8003284:	607a      	str	r2, [r7, #4]
 8003286:	603b      	str	r3, [r7, #0]
 8003288:	68fb      	ldr	r3, [r7, #12]
 800328a:	689b      	ldr	r3, [r3, #8]
 800328c:	617b      	str	r3, [r7, #20]
 800328e:	697b      	ldr	r3, [r7, #20]
 8003290:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8003294:	617b      	str	r3, [r7, #20]
 8003296:	683b      	ldr	r3, [r7, #0]
 8003298:	021a      	lsls	r2, r3, #8
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	431a      	orrs	r2, r3
 800329e:	68bb      	ldr	r3, [r7, #8]
 80032a0:	4313      	orrs	r3, r2
 80032a2:	697a      	ldr	r2, [r7, #20]
 80032a4:	4313      	orrs	r3, r2
 80032a6:	617b      	str	r3, [r7, #20]
 80032a8:	68fb      	ldr	r3, [r7, #12]
 80032aa:	697a      	ldr	r2, [r7, #20]
 80032ac:	609a      	str	r2, [r3, #8]
 80032ae:	bf00      	nop
 80032b0:	371c      	adds	r7, #28
 80032b2:	46bd      	mov	sp, r7
 80032b4:	bc80      	pop	{r7}
 80032b6:	4770      	bx	lr

080032b8 <HAL_TIMEx_MasterConfigSynchronization>:
 80032b8:	b480      	push	{r7}
 80032ba:	b085      	sub	sp, #20
 80032bc:	af00      	add	r7, sp, #0
 80032be:	6078      	str	r0, [r7, #4]
 80032c0:	6039      	str	r1, [r7, #0]
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80032c8:	2b01      	cmp	r3, #1
 80032ca:	d101      	bne.n	80032d0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80032cc:	2302      	movs	r3, #2
 80032ce:	e046      	b.n	800335e <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	2201      	movs	r2, #1
 80032d4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	2202      	movs	r2, #2
 80032dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	685b      	ldr	r3, [r3, #4]
 80032e6:	60fb      	str	r3, [r7, #12]
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	689b      	ldr	r3, [r3, #8]
 80032ee:	60bb      	str	r3, [r7, #8]
 80032f0:	68fb      	ldr	r3, [r7, #12]
 80032f2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80032f6:	60fb      	str	r3, [r7, #12]
 80032f8:	683b      	ldr	r3, [r7, #0]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	68fa      	ldr	r2, [r7, #12]
 80032fe:	4313      	orrs	r3, r2
 8003300:	60fb      	str	r3, [r7, #12]
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	68fa      	ldr	r2, [r7, #12]
 8003308:	605a      	str	r2, [r3, #4]
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	4a16      	ldr	r2, [pc, #88]	@ (8003368 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003310:	4293      	cmp	r3, r2
 8003312:	d00e      	beq.n	8003332 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800331c:	d009      	beq.n	8003332 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	4a12      	ldr	r2, [pc, #72]	@ (800336c <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003324:	4293      	cmp	r3, r2
 8003326:	d004      	beq.n	8003332 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	4a10      	ldr	r2, [pc, #64]	@ (8003370 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 800332e:	4293      	cmp	r3, r2
 8003330:	d10c      	bne.n	800334c <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003332:	68bb      	ldr	r3, [r7, #8]
 8003334:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8003338:	60bb      	str	r3, [r7, #8]
 800333a:	683b      	ldr	r3, [r7, #0]
 800333c:	685b      	ldr	r3, [r3, #4]
 800333e:	68ba      	ldr	r2, [r7, #8]
 8003340:	4313      	orrs	r3, r2
 8003342:	60bb      	str	r3, [r7, #8]
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	681b      	ldr	r3, [r3, #0]
 8003348:	68ba      	ldr	r2, [r7, #8]
 800334a:	609a      	str	r2, [r3, #8]
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	2201      	movs	r2, #1
 8003350:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	2200      	movs	r2, #0
 8003358:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800335c:	2300      	movs	r3, #0
 800335e:	4618      	mov	r0, r3
 8003360:	3714      	adds	r7, #20
 8003362:	46bd      	mov	sp, r7
 8003364:	bc80      	pop	{r7}
 8003366:	4770      	bx	lr
 8003368:	40012c00 	.word	0x40012c00
 800336c:	40000400 	.word	0x40000400
 8003370:	40000800 	.word	0x40000800

08003374 <HAL_TIMEx_CommutCallback>:
 8003374:	b480      	push	{r7}
 8003376:	b083      	sub	sp, #12
 8003378:	af00      	add	r7, sp, #0
 800337a:	6078      	str	r0, [r7, #4]
 800337c:	bf00      	nop
 800337e:	370c      	adds	r7, #12
 8003380:	46bd      	mov	sp, r7
 8003382:	bc80      	pop	{r7}
 8003384:	4770      	bx	lr

08003386 <HAL_TIMEx_BreakCallback>:
 8003386:	b480      	push	{r7}
 8003388:	b083      	sub	sp, #12
 800338a:	af00      	add	r7, sp, #0
 800338c:	6078      	str	r0, [r7, #4]
 800338e:	bf00      	nop
 8003390:	370c      	adds	r7, #12
 8003392:	46bd      	mov	sp, r7
 8003394:	bc80      	pop	{r7}
 8003396:	4770      	bx	lr

08003398 <siprintf>:
 8003398:	b40e      	push	{r1, r2, r3}
 800339a:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800339e:	b500      	push	{lr}
 80033a0:	b09c      	sub	sp, #112	@ 0x70
 80033a2:	ab1d      	add	r3, sp, #116	@ 0x74
 80033a4:	9002      	str	r0, [sp, #8]
 80033a6:	9006      	str	r0, [sp, #24]
 80033a8:	9107      	str	r1, [sp, #28]
 80033aa:	9104      	str	r1, [sp, #16]
 80033ac:	4808      	ldr	r0, [pc, #32]	@ (80033d0 <siprintf+0x38>)
 80033ae:	4909      	ldr	r1, [pc, #36]	@ (80033d4 <siprintf+0x3c>)
 80033b0:	f853 2b04 	ldr.w	r2, [r3], #4
 80033b4:	9105      	str	r1, [sp, #20]
 80033b6:	6800      	ldr	r0, [r0, #0]
 80033b8:	a902      	add	r1, sp, #8
 80033ba:	9301      	str	r3, [sp, #4]
 80033bc:	f000 f992 	bl	80036e4 <_svfiprintf_r>
 80033c0:	2200      	movs	r2, #0
 80033c2:	9b02      	ldr	r3, [sp, #8]
 80033c4:	701a      	strb	r2, [r3, #0]
 80033c6:	b01c      	add	sp, #112	@ 0x70
 80033c8:	f85d eb04 	ldr.w	lr, [sp], #4
 80033cc:	b003      	add	sp, #12
 80033ce:	4770      	bx	lr
 80033d0:	20000034 	.word	0x20000034
 80033d4:	ffff0208 	.word	0xffff0208

080033d8 <memset>:
 80033d8:	4603      	mov	r3, r0
 80033da:	4402      	add	r2, r0
 80033dc:	4293      	cmp	r3, r2
 80033de:	d100      	bne.n	80033e2 <memset+0xa>
 80033e0:	4770      	bx	lr
 80033e2:	f803 1b01 	strb.w	r1, [r3], #1
 80033e6:	e7f9      	b.n	80033dc <memset+0x4>

080033e8 <__errno>:
 80033e8:	4b01      	ldr	r3, [pc, #4]	@ (80033f0 <__errno+0x8>)
 80033ea:	6818      	ldr	r0, [r3, #0]
 80033ec:	4770      	bx	lr
 80033ee:	bf00      	nop
 80033f0:	20000034 	.word	0x20000034

080033f4 <__libc_init_array>:
 80033f4:	b570      	push	{r4, r5, r6, lr}
 80033f6:	2600      	movs	r6, #0
 80033f8:	4d0c      	ldr	r5, [pc, #48]	@ (800342c <__libc_init_array+0x38>)
 80033fa:	4c0d      	ldr	r4, [pc, #52]	@ (8003430 <__libc_init_array+0x3c>)
 80033fc:	1b64      	subs	r4, r4, r5
 80033fe:	10a4      	asrs	r4, r4, #2
 8003400:	42a6      	cmp	r6, r4
 8003402:	d109      	bne.n	8003418 <__libc_init_array+0x24>
 8003404:	f000 fc78 	bl	8003cf8 <_init>
 8003408:	2600      	movs	r6, #0
 800340a:	4d0a      	ldr	r5, [pc, #40]	@ (8003434 <__libc_init_array+0x40>)
 800340c:	4c0a      	ldr	r4, [pc, #40]	@ (8003438 <__libc_init_array+0x44>)
 800340e:	1b64      	subs	r4, r4, r5
 8003410:	10a4      	asrs	r4, r4, #2
 8003412:	42a6      	cmp	r6, r4
 8003414:	d105      	bne.n	8003422 <__libc_init_array+0x2e>
 8003416:	bd70      	pop	{r4, r5, r6, pc}
 8003418:	f855 3b04 	ldr.w	r3, [r5], #4
 800341c:	4798      	blx	r3
 800341e:	3601      	adds	r6, #1
 8003420:	e7ee      	b.n	8003400 <__libc_init_array+0xc>
 8003422:	f855 3b04 	ldr.w	r3, [r5], #4
 8003426:	4798      	blx	r3
 8003428:	3601      	adds	r6, #1
 800342a:	e7f2      	b.n	8003412 <__libc_init_array+0x1e>
 800342c:	08003dc4 	.word	0x08003dc4
 8003430:	08003dc4 	.word	0x08003dc4
 8003434:	08003dc4 	.word	0x08003dc4
 8003438:	08003dc8 	.word	0x08003dc8

0800343c <__retarget_lock_acquire_recursive>:
 800343c:	4770      	bx	lr

0800343e <__retarget_lock_release_recursive>:
 800343e:	4770      	bx	lr

08003440 <_free_r>:
 8003440:	b538      	push	{r3, r4, r5, lr}
 8003442:	4605      	mov	r5, r0
 8003444:	2900      	cmp	r1, #0
 8003446:	d040      	beq.n	80034ca <_free_r+0x8a>
 8003448:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800344c:	1f0c      	subs	r4, r1, #4
 800344e:	2b00      	cmp	r3, #0
 8003450:	bfb8      	it	lt
 8003452:	18e4      	addlt	r4, r4, r3
 8003454:	f000 f8de 	bl	8003614 <__malloc_lock>
 8003458:	4a1c      	ldr	r2, [pc, #112]	@ (80034cc <_free_r+0x8c>)
 800345a:	6813      	ldr	r3, [r2, #0]
 800345c:	b933      	cbnz	r3, 800346c <_free_r+0x2c>
 800345e:	6063      	str	r3, [r4, #4]
 8003460:	6014      	str	r4, [r2, #0]
 8003462:	4628      	mov	r0, r5
 8003464:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003468:	f000 b8da 	b.w	8003620 <__malloc_unlock>
 800346c:	42a3      	cmp	r3, r4
 800346e:	d908      	bls.n	8003482 <_free_r+0x42>
 8003470:	6820      	ldr	r0, [r4, #0]
 8003472:	1821      	adds	r1, r4, r0
 8003474:	428b      	cmp	r3, r1
 8003476:	bf01      	itttt	eq
 8003478:	6819      	ldreq	r1, [r3, #0]
 800347a:	685b      	ldreq	r3, [r3, #4]
 800347c:	1809      	addeq	r1, r1, r0
 800347e:	6021      	streq	r1, [r4, #0]
 8003480:	e7ed      	b.n	800345e <_free_r+0x1e>
 8003482:	461a      	mov	r2, r3
 8003484:	685b      	ldr	r3, [r3, #4]
 8003486:	b10b      	cbz	r3, 800348c <_free_r+0x4c>
 8003488:	42a3      	cmp	r3, r4
 800348a:	d9fa      	bls.n	8003482 <_free_r+0x42>
 800348c:	6811      	ldr	r1, [r2, #0]
 800348e:	1850      	adds	r0, r2, r1
 8003490:	42a0      	cmp	r0, r4
 8003492:	d10b      	bne.n	80034ac <_free_r+0x6c>
 8003494:	6820      	ldr	r0, [r4, #0]
 8003496:	4401      	add	r1, r0
 8003498:	1850      	adds	r0, r2, r1
 800349a:	4283      	cmp	r3, r0
 800349c:	6011      	str	r1, [r2, #0]
 800349e:	d1e0      	bne.n	8003462 <_free_r+0x22>
 80034a0:	6818      	ldr	r0, [r3, #0]
 80034a2:	685b      	ldr	r3, [r3, #4]
 80034a4:	4408      	add	r0, r1
 80034a6:	6010      	str	r0, [r2, #0]
 80034a8:	6053      	str	r3, [r2, #4]
 80034aa:	e7da      	b.n	8003462 <_free_r+0x22>
 80034ac:	d902      	bls.n	80034b4 <_free_r+0x74>
 80034ae:	230c      	movs	r3, #12
 80034b0:	602b      	str	r3, [r5, #0]
 80034b2:	e7d6      	b.n	8003462 <_free_r+0x22>
 80034b4:	6820      	ldr	r0, [r4, #0]
 80034b6:	1821      	adds	r1, r4, r0
 80034b8:	428b      	cmp	r3, r1
 80034ba:	bf01      	itttt	eq
 80034bc:	6819      	ldreq	r1, [r3, #0]
 80034be:	685b      	ldreq	r3, [r3, #4]
 80034c0:	1809      	addeq	r1, r1, r0
 80034c2:	6021      	streq	r1, [r4, #0]
 80034c4:	6063      	str	r3, [r4, #4]
 80034c6:	6054      	str	r4, [r2, #4]
 80034c8:	e7cb      	b.n	8003462 <_free_r+0x22>
 80034ca:	bd38      	pop	{r3, r4, r5, pc}
 80034cc:	2000033c 	.word	0x2000033c

080034d0 <sbrk_aligned>:
 80034d0:	b570      	push	{r4, r5, r6, lr}
 80034d2:	4e0f      	ldr	r6, [pc, #60]	@ (8003510 <sbrk_aligned+0x40>)
 80034d4:	460c      	mov	r4, r1
 80034d6:	6831      	ldr	r1, [r6, #0]
 80034d8:	4605      	mov	r5, r0
 80034da:	b911      	cbnz	r1, 80034e2 <sbrk_aligned+0x12>
 80034dc:	f000 fbaa 	bl	8003c34 <_sbrk_r>
 80034e0:	6030      	str	r0, [r6, #0]
 80034e2:	4621      	mov	r1, r4
 80034e4:	4628      	mov	r0, r5
 80034e6:	f000 fba5 	bl	8003c34 <_sbrk_r>
 80034ea:	1c43      	adds	r3, r0, #1
 80034ec:	d103      	bne.n	80034f6 <sbrk_aligned+0x26>
 80034ee:	f04f 34ff 	mov.w	r4, #4294967295
 80034f2:	4620      	mov	r0, r4
 80034f4:	bd70      	pop	{r4, r5, r6, pc}
 80034f6:	1cc4      	adds	r4, r0, #3
 80034f8:	f024 0403 	bic.w	r4, r4, #3
 80034fc:	42a0      	cmp	r0, r4
 80034fe:	d0f8      	beq.n	80034f2 <sbrk_aligned+0x22>
 8003500:	1a21      	subs	r1, r4, r0
 8003502:	4628      	mov	r0, r5
 8003504:	f000 fb96 	bl	8003c34 <_sbrk_r>
 8003508:	3001      	adds	r0, #1
 800350a:	d1f2      	bne.n	80034f2 <sbrk_aligned+0x22>
 800350c:	e7ef      	b.n	80034ee <sbrk_aligned+0x1e>
 800350e:	bf00      	nop
 8003510:	20000338 	.word	0x20000338

08003514 <_malloc_r>:
 8003514:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003518:	1ccd      	adds	r5, r1, #3
 800351a:	f025 0503 	bic.w	r5, r5, #3
 800351e:	3508      	adds	r5, #8
 8003520:	2d0c      	cmp	r5, #12
 8003522:	bf38      	it	cc
 8003524:	250c      	movcc	r5, #12
 8003526:	2d00      	cmp	r5, #0
 8003528:	4606      	mov	r6, r0
 800352a:	db01      	blt.n	8003530 <_malloc_r+0x1c>
 800352c:	42a9      	cmp	r1, r5
 800352e:	d904      	bls.n	800353a <_malloc_r+0x26>
 8003530:	230c      	movs	r3, #12
 8003532:	6033      	str	r3, [r6, #0]
 8003534:	2000      	movs	r0, #0
 8003536:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800353a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003610 <_malloc_r+0xfc>
 800353e:	f000 f869 	bl	8003614 <__malloc_lock>
 8003542:	f8d8 3000 	ldr.w	r3, [r8]
 8003546:	461c      	mov	r4, r3
 8003548:	bb44      	cbnz	r4, 800359c <_malloc_r+0x88>
 800354a:	4629      	mov	r1, r5
 800354c:	4630      	mov	r0, r6
 800354e:	f7ff ffbf 	bl	80034d0 <sbrk_aligned>
 8003552:	1c43      	adds	r3, r0, #1
 8003554:	4604      	mov	r4, r0
 8003556:	d158      	bne.n	800360a <_malloc_r+0xf6>
 8003558:	f8d8 4000 	ldr.w	r4, [r8]
 800355c:	4627      	mov	r7, r4
 800355e:	2f00      	cmp	r7, #0
 8003560:	d143      	bne.n	80035ea <_malloc_r+0xd6>
 8003562:	2c00      	cmp	r4, #0
 8003564:	d04b      	beq.n	80035fe <_malloc_r+0xea>
 8003566:	6823      	ldr	r3, [r4, #0]
 8003568:	4639      	mov	r1, r7
 800356a:	4630      	mov	r0, r6
 800356c:	eb04 0903 	add.w	r9, r4, r3
 8003570:	f000 fb60 	bl	8003c34 <_sbrk_r>
 8003574:	4581      	cmp	r9, r0
 8003576:	d142      	bne.n	80035fe <_malloc_r+0xea>
 8003578:	6821      	ldr	r1, [r4, #0]
 800357a:	4630      	mov	r0, r6
 800357c:	1a6d      	subs	r5, r5, r1
 800357e:	4629      	mov	r1, r5
 8003580:	f7ff ffa6 	bl	80034d0 <sbrk_aligned>
 8003584:	3001      	adds	r0, #1
 8003586:	d03a      	beq.n	80035fe <_malloc_r+0xea>
 8003588:	6823      	ldr	r3, [r4, #0]
 800358a:	442b      	add	r3, r5
 800358c:	6023      	str	r3, [r4, #0]
 800358e:	f8d8 3000 	ldr.w	r3, [r8]
 8003592:	685a      	ldr	r2, [r3, #4]
 8003594:	bb62      	cbnz	r2, 80035f0 <_malloc_r+0xdc>
 8003596:	f8c8 7000 	str.w	r7, [r8]
 800359a:	e00f      	b.n	80035bc <_malloc_r+0xa8>
 800359c:	6822      	ldr	r2, [r4, #0]
 800359e:	1b52      	subs	r2, r2, r5
 80035a0:	d420      	bmi.n	80035e4 <_malloc_r+0xd0>
 80035a2:	2a0b      	cmp	r2, #11
 80035a4:	d917      	bls.n	80035d6 <_malloc_r+0xc2>
 80035a6:	1961      	adds	r1, r4, r5
 80035a8:	42a3      	cmp	r3, r4
 80035aa:	6025      	str	r5, [r4, #0]
 80035ac:	bf18      	it	ne
 80035ae:	6059      	strne	r1, [r3, #4]
 80035b0:	6863      	ldr	r3, [r4, #4]
 80035b2:	bf08      	it	eq
 80035b4:	f8c8 1000 	streq.w	r1, [r8]
 80035b8:	5162      	str	r2, [r4, r5]
 80035ba:	604b      	str	r3, [r1, #4]
 80035bc:	4630      	mov	r0, r6
 80035be:	f000 f82f 	bl	8003620 <__malloc_unlock>
 80035c2:	f104 000b 	add.w	r0, r4, #11
 80035c6:	1d23      	adds	r3, r4, #4
 80035c8:	f020 0007 	bic.w	r0, r0, #7
 80035cc:	1ac2      	subs	r2, r0, r3
 80035ce:	bf1c      	itt	ne
 80035d0:	1a1b      	subne	r3, r3, r0
 80035d2:	50a3      	strne	r3, [r4, r2]
 80035d4:	e7af      	b.n	8003536 <_malloc_r+0x22>
 80035d6:	6862      	ldr	r2, [r4, #4]
 80035d8:	42a3      	cmp	r3, r4
 80035da:	bf0c      	ite	eq
 80035dc:	f8c8 2000 	streq.w	r2, [r8]
 80035e0:	605a      	strne	r2, [r3, #4]
 80035e2:	e7eb      	b.n	80035bc <_malloc_r+0xa8>
 80035e4:	4623      	mov	r3, r4
 80035e6:	6864      	ldr	r4, [r4, #4]
 80035e8:	e7ae      	b.n	8003548 <_malloc_r+0x34>
 80035ea:	463c      	mov	r4, r7
 80035ec:	687f      	ldr	r7, [r7, #4]
 80035ee:	e7b6      	b.n	800355e <_malloc_r+0x4a>
 80035f0:	461a      	mov	r2, r3
 80035f2:	685b      	ldr	r3, [r3, #4]
 80035f4:	42a3      	cmp	r3, r4
 80035f6:	d1fb      	bne.n	80035f0 <_malloc_r+0xdc>
 80035f8:	2300      	movs	r3, #0
 80035fa:	6053      	str	r3, [r2, #4]
 80035fc:	e7de      	b.n	80035bc <_malloc_r+0xa8>
 80035fe:	230c      	movs	r3, #12
 8003600:	4630      	mov	r0, r6
 8003602:	6033      	str	r3, [r6, #0]
 8003604:	f000 f80c 	bl	8003620 <__malloc_unlock>
 8003608:	e794      	b.n	8003534 <_malloc_r+0x20>
 800360a:	6005      	str	r5, [r0, #0]
 800360c:	e7d6      	b.n	80035bc <_malloc_r+0xa8>
 800360e:	bf00      	nop
 8003610:	2000033c 	.word	0x2000033c

08003614 <__malloc_lock>:
 8003614:	4801      	ldr	r0, [pc, #4]	@ (800361c <__malloc_lock+0x8>)
 8003616:	f7ff bf11 	b.w	800343c <__retarget_lock_acquire_recursive>
 800361a:	bf00      	nop
 800361c:	20000334 	.word	0x20000334

08003620 <__malloc_unlock>:
 8003620:	4801      	ldr	r0, [pc, #4]	@ (8003628 <__malloc_unlock+0x8>)
 8003622:	f7ff bf0c 	b.w	800343e <__retarget_lock_release_recursive>
 8003626:	bf00      	nop
 8003628:	20000334 	.word	0x20000334

0800362c <__ssputs_r>:
 800362c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003630:	461f      	mov	r7, r3
 8003632:	688e      	ldr	r6, [r1, #8]
 8003634:	4682      	mov	sl, r0
 8003636:	42be      	cmp	r6, r7
 8003638:	460c      	mov	r4, r1
 800363a:	4690      	mov	r8, r2
 800363c:	680b      	ldr	r3, [r1, #0]
 800363e:	d82d      	bhi.n	800369c <__ssputs_r+0x70>
 8003640:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003644:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003648:	d026      	beq.n	8003698 <__ssputs_r+0x6c>
 800364a:	6965      	ldr	r5, [r4, #20]
 800364c:	6909      	ldr	r1, [r1, #16]
 800364e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003652:	eba3 0901 	sub.w	r9, r3, r1
 8003656:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800365a:	1c7b      	adds	r3, r7, #1
 800365c:	444b      	add	r3, r9
 800365e:	106d      	asrs	r5, r5, #1
 8003660:	429d      	cmp	r5, r3
 8003662:	bf38      	it	cc
 8003664:	461d      	movcc	r5, r3
 8003666:	0553      	lsls	r3, r2, #21
 8003668:	d527      	bpl.n	80036ba <__ssputs_r+0x8e>
 800366a:	4629      	mov	r1, r5
 800366c:	f7ff ff52 	bl	8003514 <_malloc_r>
 8003670:	4606      	mov	r6, r0
 8003672:	b360      	cbz	r0, 80036ce <__ssputs_r+0xa2>
 8003674:	464a      	mov	r2, r9
 8003676:	6921      	ldr	r1, [r4, #16]
 8003678:	f000 fafa 	bl	8003c70 <memcpy>
 800367c:	89a3      	ldrh	r3, [r4, #12]
 800367e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003682:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003686:	81a3      	strh	r3, [r4, #12]
 8003688:	6126      	str	r6, [r4, #16]
 800368a:	444e      	add	r6, r9
 800368c:	6026      	str	r6, [r4, #0]
 800368e:	463e      	mov	r6, r7
 8003690:	6165      	str	r5, [r4, #20]
 8003692:	eba5 0509 	sub.w	r5, r5, r9
 8003696:	60a5      	str	r5, [r4, #8]
 8003698:	42be      	cmp	r6, r7
 800369a:	d900      	bls.n	800369e <__ssputs_r+0x72>
 800369c:	463e      	mov	r6, r7
 800369e:	4632      	mov	r2, r6
 80036a0:	4641      	mov	r1, r8
 80036a2:	6820      	ldr	r0, [r4, #0]
 80036a4:	f000 faac 	bl	8003c00 <memmove>
 80036a8:	2000      	movs	r0, #0
 80036aa:	68a3      	ldr	r3, [r4, #8]
 80036ac:	1b9b      	subs	r3, r3, r6
 80036ae:	60a3      	str	r3, [r4, #8]
 80036b0:	6823      	ldr	r3, [r4, #0]
 80036b2:	4433      	add	r3, r6
 80036b4:	6023      	str	r3, [r4, #0]
 80036b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80036ba:	462a      	mov	r2, r5
 80036bc:	f000 fae6 	bl	8003c8c <_realloc_r>
 80036c0:	4606      	mov	r6, r0
 80036c2:	2800      	cmp	r0, #0
 80036c4:	d1e0      	bne.n	8003688 <__ssputs_r+0x5c>
 80036c6:	4650      	mov	r0, sl
 80036c8:	6921      	ldr	r1, [r4, #16]
 80036ca:	f7ff feb9 	bl	8003440 <_free_r>
 80036ce:	230c      	movs	r3, #12
 80036d0:	f8ca 3000 	str.w	r3, [sl]
 80036d4:	89a3      	ldrh	r3, [r4, #12]
 80036d6:	f04f 30ff 	mov.w	r0, #4294967295
 80036da:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80036de:	81a3      	strh	r3, [r4, #12]
 80036e0:	e7e9      	b.n	80036b6 <__ssputs_r+0x8a>
	...

080036e4 <_svfiprintf_r>:
 80036e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036e8:	4698      	mov	r8, r3
 80036ea:	898b      	ldrh	r3, [r1, #12]
 80036ec:	4607      	mov	r7, r0
 80036ee:	061b      	lsls	r3, r3, #24
 80036f0:	460d      	mov	r5, r1
 80036f2:	4614      	mov	r4, r2
 80036f4:	b09d      	sub	sp, #116	@ 0x74
 80036f6:	d510      	bpl.n	800371a <_svfiprintf_r+0x36>
 80036f8:	690b      	ldr	r3, [r1, #16]
 80036fa:	b973      	cbnz	r3, 800371a <_svfiprintf_r+0x36>
 80036fc:	2140      	movs	r1, #64	@ 0x40
 80036fe:	f7ff ff09 	bl	8003514 <_malloc_r>
 8003702:	6028      	str	r0, [r5, #0]
 8003704:	6128      	str	r0, [r5, #16]
 8003706:	b930      	cbnz	r0, 8003716 <_svfiprintf_r+0x32>
 8003708:	230c      	movs	r3, #12
 800370a:	603b      	str	r3, [r7, #0]
 800370c:	f04f 30ff 	mov.w	r0, #4294967295
 8003710:	b01d      	add	sp, #116	@ 0x74
 8003712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003716:	2340      	movs	r3, #64	@ 0x40
 8003718:	616b      	str	r3, [r5, #20]
 800371a:	2300      	movs	r3, #0
 800371c:	9309      	str	r3, [sp, #36]	@ 0x24
 800371e:	2320      	movs	r3, #32
 8003720:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003724:	2330      	movs	r3, #48	@ 0x30
 8003726:	f04f 0901 	mov.w	r9, #1
 800372a:	f8cd 800c 	str.w	r8, [sp, #12]
 800372e:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 80038c8 <_svfiprintf_r+0x1e4>
 8003732:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003736:	4623      	mov	r3, r4
 8003738:	469a      	mov	sl, r3
 800373a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800373e:	b10a      	cbz	r2, 8003744 <_svfiprintf_r+0x60>
 8003740:	2a25      	cmp	r2, #37	@ 0x25
 8003742:	d1f9      	bne.n	8003738 <_svfiprintf_r+0x54>
 8003744:	ebba 0b04 	subs.w	fp, sl, r4
 8003748:	d00b      	beq.n	8003762 <_svfiprintf_r+0x7e>
 800374a:	465b      	mov	r3, fp
 800374c:	4622      	mov	r2, r4
 800374e:	4629      	mov	r1, r5
 8003750:	4638      	mov	r0, r7
 8003752:	f7ff ff6b 	bl	800362c <__ssputs_r>
 8003756:	3001      	adds	r0, #1
 8003758:	f000 80a7 	beq.w	80038aa <_svfiprintf_r+0x1c6>
 800375c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800375e:	445a      	add	r2, fp
 8003760:	9209      	str	r2, [sp, #36]	@ 0x24
 8003762:	f89a 3000 	ldrb.w	r3, [sl]
 8003766:	2b00      	cmp	r3, #0
 8003768:	f000 809f 	beq.w	80038aa <_svfiprintf_r+0x1c6>
 800376c:	2300      	movs	r3, #0
 800376e:	f04f 32ff 	mov.w	r2, #4294967295
 8003772:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003776:	f10a 0a01 	add.w	sl, sl, #1
 800377a:	9304      	str	r3, [sp, #16]
 800377c:	9307      	str	r3, [sp, #28]
 800377e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003782:	931a      	str	r3, [sp, #104]	@ 0x68
 8003784:	4654      	mov	r4, sl
 8003786:	2205      	movs	r2, #5
 8003788:	f814 1b01 	ldrb.w	r1, [r4], #1
 800378c:	484e      	ldr	r0, [pc, #312]	@ (80038c8 <_svfiprintf_r+0x1e4>)
 800378e:	f000 fa61 	bl	8003c54 <memchr>
 8003792:	9a04      	ldr	r2, [sp, #16]
 8003794:	b9d8      	cbnz	r0, 80037ce <_svfiprintf_r+0xea>
 8003796:	06d0      	lsls	r0, r2, #27
 8003798:	bf44      	itt	mi
 800379a:	2320      	movmi	r3, #32
 800379c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80037a0:	0711      	lsls	r1, r2, #28
 80037a2:	bf44      	itt	mi
 80037a4:	232b      	movmi	r3, #43	@ 0x2b
 80037a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80037aa:	f89a 3000 	ldrb.w	r3, [sl]
 80037ae:	2b2a      	cmp	r3, #42	@ 0x2a
 80037b0:	d015      	beq.n	80037de <_svfiprintf_r+0xfa>
 80037b2:	4654      	mov	r4, sl
 80037b4:	2000      	movs	r0, #0
 80037b6:	f04f 0c0a 	mov.w	ip, #10
 80037ba:	9a07      	ldr	r2, [sp, #28]
 80037bc:	4621      	mov	r1, r4
 80037be:	f811 3b01 	ldrb.w	r3, [r1], #1
 80037c2:	3b30      	subs	r3, #48	@ 0x30
 80037c4:	2b09      	cmp	r3, #9
 80037c6:	d94b      	bls.n	8003860 <_svfiprintf_r+0x17c>
 80037c8:	b1b0      	cbz	r0, 80037f8 <_svfiprintf_r+0x114>
 80037ca:	9207      	str	r2, [sp, #28]
 80037cc:	e014      	b.n	80037f8 <_svfiprintf_r+0x114>
 80037ce:	eba0 0308 	sub.w	r3, r0, r8
 80037d2:	fa09 f303 	lsl.w	r3, r9, r3
 80037d6:	4313      	orrs	r3, r2
 80037d8:	46a2      	mov	sl, r4
 80037da:	9304      	str	r3, [sp, #16]
 80037dc:	e7d2      	b.n	8003784 <_svfiprintf_r+0xa0>
 80037de:	9b03      	ldr	r3, [sp, #12]
 80037e0:	1d19      	adds	r1, r3, #4
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	9103      	str	r1, [sp, #12]
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	bfbb      	ittet	lt
 80037ea:	425b      	neglt	r3, r3
 80037ec:	f042 0202 	orrlt.w	r2, r2, #2
 80037f0:	9307      	strge	r3, [sp, #28]
 80037f2:	9307      	strlt	r3, [sp, #28]
 80037f4:	bfb8      	it	lt
 80037f6:	9204      	strlt	r2, [sp, #16]
 80037f8:	7823      	ldrb	r3, [r4, #0]
 80037fa:	2b2e      	cmp	r3, #46	@ 0x2e
 80037fc:	d10a      	bne.n	8003814 <_svfiprintf_r+0x130>
 80037fe:	7863      	ldrb	r3, [r4, #1]
 8003800:	2b2a      	cmp	r3, #42	@ 0x2a
 8003802:	d132      	bne.n	800386a <_svfiprintf_r+0x186>
 8003804:	9b03      	ldr	r3, [sp, #12]
 8003806:	3402      	adds	r4, #2
 8003808:	1d1a      	adds	r2, r3, #4
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	9203      	str	r2, [sp, #12]
 800380e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003812:	9305      	str	r3, [sp, #20]
 8003814:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 80038cc <_svfiprintf_r+0x1e8>
 8003818:	2203      	movs	r2, #3
 800381a:	4650      	mov	r0, sl
 800381c:	7821      	ldrb	r1, [r4, #0]
 800381e:	f000 fa19 	bl	8003c54 <memchr>
 8003822:	b138      	cbz	r0, 8003834 <_svfiprintf_r+0x150>
 8003824:	2240      	movs	r2, #64	@ 0x40
 8003826:	9b04      	ldr	r3, [sp, #16]
 8003828:	eba0 000a 	sub.w	r0, r0, sl
 800382c:	4082      	lsls	r2, r0
 800382e:	4313      	orrs	r3, r2
 8003830:	3401      	adds	r4, #1
 8003832:	9304      	str	r3, [sp, #16]
 8003834:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003838:	2206      	movs	r2, #6
 800383a:	4825      	ldr	r0, [pc, #148]	@ (80038d0 <_svfiprintf_r+0x1ec>)
 800383c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003840:	f000 fa08 	bl	8003c54 <memchr>
 8003844:	2800      	cmp	r0, #0
 8003846:	d036      	beq.n	80038b6 <_svfiprintf_r+0x1d2>
 8003848:	4b22      	ldr	r3, [pc, #136]	@ (80038d4 <_svfiprintf_r+0x1f0>)
 800384a:	bb1b      	cbnz	r3, 8003894 <_svfiprintf_r+0x1b0>
 800384c:	9b03      	ldr	r3, [sp, #12]
 800384e:	3307      	adds	r3, #7
 8003850:	f023 0307 	bic.w	r3, r3, #7
 8003854:	3308      	adds	r3, #8
 8003856:	9303      	str	r3, [sp, #12]
 8003858:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800385a:	4433      	add	r3, r6
 800385c:	9309      	str	r3, [sp, #36]	@ 0x24
 800385e:	e76a      	b.n	8003736 <_svfiprintf_r+0x52>
 8003860:	460c      	mov	r4, r1
 8003862:	2001      	movs	r0, #1
 8003864:	fb0c 3202 	mla	r2, ip, r2, r3
 8003868:	e7a8      	b.n	80037bc <_svfiprintf_r+0xd8>
 800386a:	2300      	movs	r3, #0
 800386c:	f04f 0c0a 	mov.w	ip, #10
 8003870:	4619      	mov	r1, r3
 8003872:	3401      	adds	r4, #1
 8003874:	9305      	str	r3, [sp, #20]
 8003876:	4620      	mov	r0, r4
 8003878:	f810 2b01 	ldrb.w	r2, [r0], #1
 800387c:	3a30      	subs	r2, #48	@ 0x30
 800387e:	2a09      	cmp	r2, #9
 8003880:	d903      	bls.n	800388a <_svfiprintf_r+0x1a6>
 8003882:	2b00      	cmp	r3, #0
 8003884:	d0c6      	beq.n	8003814 <_svfiprintf_r+0x130>
 8003886:	9105      	str	r1, [sp, #20]
 8003888:	e7c4      	b.n	8003814 <_svfiprintf_r+0x130>
 800388a:	4604      	mov	r4, r0
 800388c:	2301      	movs	r3, #1
 800388e:	fb0c 2101 	mla	r1, ip, r1, r2
 8003892:	e7f0      	b.n	8003876 <_svfiprintf_r+0x192>
 8003894:	ab03      	add	r3, sp, #12
 8003896:	9300      	str	r3, [sp, #0]
 8003898:	462a      	mov	r2, r5
 800389a:	4638      	mov	r0, r7
 800389c:	4b0e      	ldr	r3, [pc, #56]	@ (80038d8 <_svfiprintf_r+0x1f4>)
 800389e:	a904      	add	r1, sp, #16
 80038a0:	f3af 8000 	nop.w
 80038a4:	1c42      	adds	r2, r0, #1
 80038a6:	4606      	mov	r6, r0
 80038a8:	d1d6      	bne.n	8003858 <_svfiprintf_r+0x174>
 80038aa:	89ab      	ldrh	r3, [r5, #12]
 80038ac:	065b      	lsls	r3, r3, #25
 80038ae:	f53f af2d 	bmi.w	800370c <_svfiprintf_r+0x28>
 80038b2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80038b4:	e72c      	b.n	8003710 <_svfiprintf_r+0x2c>
 80038b6:	ab03      	add	r3, sp, #12
 80038b8:	9300      	str	r3, [sp, #0]
 80038ba:	462a      	mov	r2, r5
 80038bc:	4638      	mov	r0, r7
 80038be:	4b06      	ldr	r3, [pc, #24]	@ (80038d8 <_svfiprintf_r+0x1f4>)
 80038c0:	a904      	add	r1, sp, #16
 80038c2:	f000 f87d 	bl	80039c0 <_printf_i>
 80038c6:	e7ed      	b.n	80038a4 <_svfiprintf_r+0x1c0>
 80038c8:	08003d8e 	.word	0x08003d8e
 80038cc:	08003d94 	.word	0x08003d94
 80038d0:	08003d98 	.word	0x08003d98
 80038d4:	00000000 	.word	0x00000000
 80038d8:	0800362d 	.word	0x0800362d

080038dc <_printf_common>:
 80038dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80038e0:	4616      	mov	r6, r2
 80038e2:	4698      	mov	r8, r3
 80038e4:	688a      	ldr	r2, [r1, #8]
 80038e6:	690b      	ldr	r3, [r1, #16]
 80038e8:	4607      	mov	r7, r0
 80038ea:	4293      	cmp	r3, r2
 80038ec:	bfb8      	it	lt
 80038ee:	4613      	movlt	r3, r2
 80038f0:	6033      	str	r3, [r6, #0]
 80038f2:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80038f6:	460c      	mov	r4, r1
 80038f8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80038fc:	b10a      	cbz	r2, 8003902 <_printf_common+0x26>
 80038fe:	3301      	adds	r3, #1
 8003900:	6033      	str	r3, [r6, #0]
 8003902:	6823      	ldr	r3, [r4, #0]
 8003904:	0699      	lsls	r1, r3, #26
 8003906:	bf42      	ittt	mi
 8003908:	6833      	ldrmi	r3, [r6, #0]
 800390a:	3302      	addmi	r3, #2
 800390c:	6033      	strmi	r3, [r6, #0]
 800390e:	6825      	ldr	r5, [r4, #0]
 8003910:	f015 0506 	ands.w	r5, r5, #6
 8003914:	d106      	bne.n	8003924 <_printf_common+0x48>
 8003916:	f104 0a19 	add.w	sl, r4, #25
 800391a:	68e3      	ldr	r3, [r4, #12]
 800391c:	6832      	ldr	r2, [r6, #0]
 800391e:	1a9b      	subs	r3, r3, r2
 8003920:	42ab      	cmp	r3, r5
 8003922:	dc2b      	bgt.n	800397c <_printf_common+0xa0>
 8003924:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003928:	6822      	ldr	r2, [r4, #0]
 800392a:	3b00      	subs	r3, #0
 800392c:	bf18      	it	ne
 800392e:	2301      	movne	r3, #1
 8003930:	0692      	lsls	r2, r2, #26
 8003932:	d430      	bmi.n	8003996 <_printf_common+0xba>
 8003934:	4641      	mov	r1, r8
 8003936:	4638      	mov	r0, r7
 8003938:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800393c:	47c8      	blx	r9
 800393e:	3001      	adds	r0, #1
 8003940:	d023      	beq.n	800398a <_printf_common+0xae>
 8003942:	6823      	ldr	r3, [r4, #0]
 8003944:	6922      	ldr	r2, [r4, #16]
 8003946:	f003 0306 	and.w	r3, r3, #6
 800394a:	2b04      	cmp	r3, #4
 800394c:	bf14      	ite	ne
 800394e:	2500      	movne	r5, #0
 8003950:	6833      	ldreq	r3, [r6, #0]
 8003952:	f04f 0600 	mov.w	r6, #0
 8003956:	bf08      	it	eq
 8003958:	68e5      	ldreq	r5, [r4, #12]
 800395a:	f104 041a 	add.w	r4, r4, #26
 800395e:	bf08      	it	eq
 8003960:	1aed      	subeq	r5, r5, r3
 8003962:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8003966:	bf08      	it	eq
 8003968:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800396c:	4293      	cmp	r3, r2
 800396e:	bfc4      	itt	gt
 8003970:	1a9b      	subgt	r3, r3, r2
 8003972:	18ed      	addgt	r5, r5, r3
 8003974:	42b5      	cmp	r5, r6
 8003976:	d11a      	bne.n	80039ae <_printf_common+0xd2>
 8003978:	2000      	movs	r0, #0
 800397a:	e008      	b.n	800398e <_printf_common+0xb2>
 800397c:	2301      	movs	r3, #1
 800397e:	4652      	mov	r2, sl
 8003980:	4641      	mov	r1, r8
 8003982:	4638      	mov	r0, r7
 8003984:	47c8      	blx	r9
 8003986:	3001      	adds	r0, #1
 8003988:	d103      	bne.n	8003992 <_printf_common+0xb6>
 800398a:	f04f 30ff 	mov.w	r0, #4294967295
 800398e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003992:	3501      	adds	r5, #1
 8003994:	e7c1      	b.n	800391a <_printf_common+0x3e>
 8003996:	2030      	movs	r0, #48	@ 0x30
 8003998:	18e1      	adds	r1, r4, r3
 800399a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800399e:	1c5a      	adds	r2, r3, #1
 80039a0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80039a4:	4422      	add	r2, r4
 80039a6:	3302      	adds	r3, #2
 80039a8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80039ac:	e7c2      	b.n	8003934 <_printf_common+0x58>
 80039ae:	2301      	movs	r3, #1
 80039b0:	4622      	mov	r2, r4
 80039b2:	4641      	mov	r1, r8
 80039b4:	4638      	mov	r0, r7
 80039b6:	47c8      	blx	r9
 80039b8:	3001      	adds	r0, #1
 80039ba:	d0e6      	beq.n	800398a <_printf_common+0xae>
 80039bc:	3601      	adds	r6, #1
 80039be:	e7d9      	b.n	8003974 <_printf_common+0x98>

080039c0 <_printf_i>:
 80039c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80039c4:	7e0f      	ldrb	r7, [r1, #24]
 80039c6:	4691      	mov	r9, r2
 80039c8:	2f78      	cmp	r7, #120	@ 0x78
 80039ca:	4680      	mov	r8, r0
 80039cc:	460c      	mov	r4, r1
 80039ce:	469a      	mov	sl, r3
 80039d0:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80039d2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80039d6:	d807      	bhi.n	80039e8 <_printf_i+0x28>
 80039d8:	2f62      	cmp	r7, #98	@ 0x62
 80039da:	d80a      	bhi.n	80039f2 <_printf_i+0x32>
 80039dc:	2f00      	cmp	r7, #0
 80039de:	f000 80d3 	beq.w	8003b88 <_printf_i+0x1c8>
 80039e2:	2f58      	cmp	r7, #88	@ 0x58
 80039e4:	f000 80ba 	beq.w	8003b5c <_printf_i+0x19c>
 80039e8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80039ec:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80039f0:	e03a      	b.n	8003a68 <_printf_i+0xa8>
 80039f2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80039f6:	2b15      	cmp	r3, #21
 80039f8:	d8f6      	bhi.n	80039e8 <_printf_i+0x28>
 80039fa:	a101      	add	r1, pc, #4	@ (adr r1, 8003a00 <_printf_i+0x40>)
 80039fc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003a00:	08003a59 	.word	0x08003a59
 8003a04:	08003a6d 	.word	0x08003a6d
 8003a08:	080039e9 	.word	0x080039e9
 8003a0c:	080039e9 	.word	0x080039e9
 8003a10:	080039e9 	.word	0x080039e9
 8003a14:	080039e9 	.word	0x080039e9
 8003a18:	08003a6d 	.word	0x08003a6d
 8003a1c:	080039e9 	.word	0x080039e9
 8003a20:	080039e9 	.word	0x080039e9
 8003a24:	080039e9 	.word	0x080039e9
 8003a28:	080039e9 	.word	0x080039e9
 8003a2c:	08003b6f 	.word	0x08003b6f
 8003a30:	08003a97 	.word	0x08003a97
 8003a34:	08003b29 	.word	0x08003b29
 8003a38:	080039e9 	.word	0x080039e9
 8003a3c:	080039e9 	.word	0x080039e9
 8003a40:	08003b91 	.word	0x08003b91
 8003a44:	080039e9 	.word	0x080039e9
 8003a48:	08003a97 	.word	0x08003a97
 8003a4c:	080039e9 	.word	0x080039e9
 8003a50:	080039e9 	.word	0x080039e9
 8003a54:	08003b31 	.word	0x08003b31
 8003a58:	6833      	ldr	r3, [r6, #0]
 8003a5a:	1d1a      	adds	r2, r3, #4
 8003a5c:	681b      	ldr	r3, [r3, #0]
 8003a5e:	6032      	str	r2, [r6, #0]
 8003a60:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003a64:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8003a68:	2301      	movs	r3, #1
 8003a6a:	e09e      	b.n	8003baa <_printf_i+0x1ea>
 8003a6c:	6833      	ldr	r3, [r6, #0]
 8003a6e:	6820      	ldr	r0, [r4, #0]
 8003a70:	1d19      	adds	r1, r3, #4
 8003a72:	6031      	str	r1, [r6, #0]
 8003a74:	0606      	lsls	r6, r0, #24
 8003a76:	d501      	bpl.n	8003a7c <_printf_i+0xbc>
 8003a78:	681d      	ldr	r5, [r3, #0]
 8003a7a:	e003      	b.n	8003a84 <_printf_i+0xc4>
 8003a7c:	0645      	lsls	r5, r0, #25
 8003a7e:	d5fb      	bpl.n	8003a78 <_printf_i+0xb8>
 8003a80:	f9b3 5000 	ldrsh.w	r5, [r3]
 8003a84:	2d00      	cmp	r5, #0
 8003a86:	da03      	bge.n	8003a90 <_printf_i+0xd0>
 8003a88:	232d      	movs	r3, #45	@ 0x2d
 8003a8a:	426d      	negs	r5, r5
 8003a8c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003a90:	230a      	movs	r3, #10
 8003a92:	4859      	ldr	r0, [pc, #356]	@ (8003bf8 <_printf_i+0x238>)
 8003a94:	e011      	b.n	8003aba <_printf_i+0xfa>
 8003a96:	6821      	ldr	r1, [r4, #0]
 8003a98:	6833      	ldr	r3, [r6, #0]
 8003a9a:	0608      	lsls	r0, r1, #24
 8003a9c:	f853 5b04 	ldr.w	r5, [r3], #4
 8003aa0:	d402      	bmi.n	8003aa8 <_printf_i+0xe8>
 8003aa2:	0649      	lsls	r1, r1, #25
 8003aa4:	bf48      	it	mi
 8003aa6:	b2ad      	uxthmi	r5, r5
 8003aa8:	2f6f      	cmp	r7, #111	@ 0x6f
 8003aaa:	6033      	str	r3, [r6, #0]
 8003aac:	bf14      	ite	ne
 8003aae:	230a      	movne	r3, #10
 8003ab0:	2308      	moveq	r3, #8
 8003ab2:	4851      	ldr	r0, [pc, #324]	@ (8003bf8 <_printf_i+0x238>)
 8003ab4:	2100      	movs	r1, #0
 8003ab6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8003aba:	6866      	ldr	r6, [r4, #4]
 8003abc:	2e00      	cmp	r6, #0
 8003abe:	bfa8      	it	ge
 8003ac0:	6821      	ldrge	r1, [r4, #0]
 8003ac2:	60a6      	str	r6, [r4, #8]
 8003ac4:	bfa4      	itt	ge
 8003ac6:	f021 0104 	bicge.w	r1, r1, #4
 8003aca:	6021      	strge	r1, [r4, #0]
 8003acc:	b90d      	cbnz	r5, 8003ad2 <_printf_i+0x112>
 8003ace:	2e00      	cmp	r6, #0
 8003ad0:	d04b      	beq.n	8003b6a <_printf_i+0x1aa>
 8003ad2:	4616      	mov	r6, r2
 8003ad4:	fbb5 f1f3 	udiv	r1, r5, r3
 8003ad8:	fb03 5711 	mls	r7, r3, r1, r5
 8003adc:	5dc7      	ldrb	r7, [r0, r7]
 8003ade:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003ae2:	462f      	mov	r7, r5
 8003ae4:	42bb      	cmp	r3, r7
 8003ae6:	460d      	mov	r5, r1
 8003ae8:	d9f4      	bls.n	8003ad4 <_printf_i+0x114>
 8003aea:	2b08      	cmp	r3, #8
 8003aec:	d10b      	bne.n	8003b06 <_printf_i+0x146>
 8003aee:	6823      	ldr	r3, [r4, #0]
 8003af0:	07df      	lsls	r7, r3, #31
 8003af2:	d508      	bpl.n	8003b06 <_printf_i+0x146>
 8003af4:	6923      	ldr	r3, [r4, #16]
 8003af6:	6861      	ldr	r1, [r4, #4]
 8003af8:	4299      	cmp	r1, r3
 8003afa:	bfde      	ittt	le
 8003afc:	2330      	movle	r3, #48	@ 0x30
 8003afe:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003b02:	f106 36ff 	addle.w	r6, r6, #4294967295
 8003b06:	1b92      	subs	r2, r2, r6
 8003b08:	6122      	str	r2, [r4, #16]
 8003b0a:	464b      	mov	r3, r9
 8003b0c:	4621      	mov	r1, r4
 8003b0e:	4640      	mov	r0, r8
 8003b10:	f8cd a000 	str.w	sl, [sp]
 8003b14:	aa03      	add	r2, sp, #12
 8003b16:	f7ff fee1 	bl	80038dc <_printf_common>
 8003b1a:	3001      	adds	r0, #1
 8003b1c:	d14a      	bne.n	8003bb4 <_printf_i+0x1f4>
 8003b1e:	f04f 30ff 	mov.w	r0, #4294967295
 8003b22:	b004      	add	sp, #16
 8003b24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003b28:	6823      	ldr	r3, [r4, #0]
 8003b2a:	f043 0320 	orr.w	r3, r3, #32
 8003b2e:	6023      	str	r3, [r4, #0]
 8003b30:	2778      	movs	r7, #120	@ 0x78
 8003b32:	4832      	ldr	r0, [pc, #200]	@ (8003bfc <_printf_i+0x23c>)
 8003b34:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8003b38:	6823      	ldr	r3, [r4, #0]
 8003b3a:	6831      	ldr	r1, [r6, #0]
 8003b3c:	061f      	lsls	r7, r3, #24
 8003b3e:	f851 5b04 	ldr.w	r5, [r1], #4
 8003b42:	d402      	bmi.n	8003b4a <_printf_i+0x18a>
 8003b44:	065f      	lsls	r7, r3, #25
 8003b46:	bf48      	it	mi
 8003b48:	b2ad      	uxthmi	r5, r5
 8003b4a:	6031      	str	r1, [r6, #0]
 8003b4c:	07d9      	lsls	r1, r3, #31
 8003b4e:	bf44      	itt	mi
 8003b50:	f043 0320 	orrmi.w	r3, r3, #32
 8003b54:	6023      	strmi	r3, [r4, #0]
 8003b56:	b11d      	cbz	r5, 8003b60 <_printf_i+0x1a0>
 8003b58:	2310      	movs	r3, #16
 8003b5a:	e7ab      	b.n	8003ab4 <_printf_i+0xf4>
 8003b5c:	4826      	ldr	r0, [pc, #152]	@ (8003bf8 <_printf_i+0x238>)
 8003b5e:	e7e9      	b.n	8003b34 <_printf_i+0x174>
 8003b60:	6823      	ldr	r3, [r4, #0]
 8003b62:	f023 0320 	bic.w	r3, r3, #32
 8003b66:	6023      	str	r3, [r4, #0]
 8003b68:	e7f6      	b.n	8003b58 <_printf_i+0x198>
 8003b6a:	4616      	mov	r6, r2
 8003b6c:	e7bd      	b.n	8003aea <_printf_i+0x12a>
 8003b6e:	6833      	ldr	r3, [r6, #0]
 8003b70:	6825      	ldr	r5, [r4, #0]
 8003b72:	1d18      	adds	r0, r3, #4
 8003b74:	6961      	ldr	r1, [r4, #20]
 8003b76:	6030      	str	r0, [r6, #0]
 8003b78:	062e      	lsls	r6, r5, #24
 8003b7a:	681b      	ldr	r3, [r3, #0]
 8003b7c:	d501      	bpl.n	8003b82 <_printf_i+0x1c2>
 8003b7e:	6019      	str	r1, [r3, #0]
 8003b80:	e002      	b.n	8003b88 <_printf_i+0x1c8>
 8003b82:	0668      	lsls	r0, r5, #25
 8003b84:	d5fb      	bpl.n	8003b7e <_printf_i+0x1be>
 8003b86:	8019      	strh	r1, [r3, #0]
 8003b88:	2300      	movs	r3, #0
 8003b8a:	4616      	mov	r6, r2
 8003b8c:	6123      	str	r3, [r4, #16]
 8003b8e:	e7bc      	b.n	8003b0a <_printf_i+0x14a>
 8003b90:	6833      	ldr	r3, [r6, #0]
 8003b92:	2100      	movs	r1, #0
 8003b94:	1d1a      	adds	r2, r3, #4
 8003b96:	6032      	str	r2, [r6, #0]
 8003b98:	681e      	ldr	r6, [r3, #0]
 8003b9a:	6862      	ldr	r2, [r4, #4]
 8003b9c:	4630      	mov	r0, r6
 8003b9e:	f000 f859 	bl	8003c54 <memchr>
 8003ba2:	b108      	cbz	r0, 8003ba8 <_printf_i+0x1e8>
 8003ba4:	1b80      	subs	r0, r0, r6
 8003ba6:	6060      	str	r0, [r4, #4]
 8003ba8:	6863      	ldr	r3, [r4, #4]
 8003baa:	6123      	str	r3, [r4, #16]
 8003bac:	2300      	movs	r3, #0
 8003bae:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003bb2:	e7aa      	b.n	8003b0a <_printf_i+0x14a>
 8003bb4:	4632      	mov	r2, r6
 8003bb6:	4649      	mov	r1, r9
 8003bb8:	4640      	mov	r0, r8
 8003bba:	6923      	ldr	r3, [r4, #16]
 8003bbc:	47d0      	blx	sl
 8003bbe:	3001      	adds	r0, #1
 8003bc0:	d0ad      	beq.n	8003b1e <_printf_i+0x15e>
 8003bc2:	6823      	ldr	r3, [r4, #0]
 8003bc4:	079b      	lsls	r3, r3, #30
 8003bc6:	d413      	bmi.n	8003bf0 <_printf_i+0x230>
 8003bc8:	68e0      	ldr	r0, [r4, #12]
 8003bca:	9b03      	ldr	r3, [sp, #12]
 8003bcc:	4298      	cmp	r0, r3
 8003bce:	bfb8      	it	lt
 8003bd0:	4618      	movlt	r0, r3
 8003bd2:	e7a6      	b.n	8003b22 <_printf_i+0x162>
 8003bd4:	2301      	movs	r3, #1
 8003bd6:	4632      	mov	r2, r6
 8003bd8:	4649      	mov	r1, r9
 8003bda:	4640      	mov	r0, r8
 8003bdc:	47d0      	blx	sl
 8003bde:	3001      	adds	r0, #1
 8003be0:	d09d      	beq.n	8003b1e <_printf_i+0x15e>
 8003be2:	3501      	adds	r5, #1
 8003be4:	68e3      	ldr	r3, [r4, #12]
 8003be6:	9903      	ldr	r1, [sp, #12]
 8003be8:	1a5b      	subs	r3, r3, r1
 8003bea:	42ab      	cmp	r3, r5
 8003bec:	dcf2      	bgt.n	8003bd4 <_printf_i+0x214>
 8003bee:	e7eb      	b.n	8003bc8 <_printf_i+0x208>
 8003bf0:	2500      	movs	r5, #0
 8003bf2:	f104 0619 	add.w	r6, r4, #25
 8003bf6:	e7f5      	b.n	8003be4 <_printf_i+0x224>
 8003bf8:	08003d9f 	.word	0x08003d9f
 8003bfc:	08003db0 	.word	0x08003db0

08003c00 <memmove>:
 8003c00:	4288      	cmp	r0, r1
 8003c02:	b510      	push	{r4, lr}
 8003c04:	eb01 0402 	add.w	r4, r1, r2
 8003c08:	d902      	bls.n	8003c10 <memmove+0x10>
 8003c0a:	4284      	cmp	r4, r0
 8003c0c:	4623      	mov	r3, r4
 8003c0e:	d807      	bhi.n	8003c20 <memmove+0x20>
 8003c10:	1e43      	subs	r3, r0, #1
 8003c12:	42a1      	cmp	r1, r4
 8003c14:	d008      	beq.n	8003c28 <memmove+0x28>
 8003c16:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003c1a:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003c1e:	e7f8      	b.n	8003c12 <memmove+0x12>
 8003c20:	4601      	mov	r1, r0
 8003c22:	4402      	add	r2, r0
 8003c24:	428a      	cmp	r2, r1
 8003c26:	d100      	bne.n	8003c2a <memmove+0x2a>
 8003c28:	bd10      	pop	{r4, pc}
 8003c2a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003c2e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003c32:	e7f7      	b.n	8003c24 <memmove+0x24>

08003c34 <_sbrk_r>:
 8003c34:	b538      	push	{r3, r4, r5, lr}
 8003c36:	2300      	movs	r3, #0
 8003c38:	4d05      	ldr	r5, [pc, #20]	@ (8003c50 <_sbrk_r+0x1c>)
 8003c3a:	4604      	mov	r4, r0
 8003c3c:	4608      	mov	r0, r1
 8003c3e:	602b      	str	r3, [r5, #0]
 8003c40:	f7fd fb5e 	bl	8001300 <_sbrk>
 8003c44:	1c43      	adds	r3, r0, #1
 8003c46:	d102      	bne.n	8003c4e <_sbrk_r+0x1a>
 8003c48:	682b      	ldr	r3, [r5, #0]
 8003c4a:	b103      	cbz	r3, 8003c4e <_sbrk_r+0x1a>
 8003c4c:	6023      	str	r3, [r4, #0]
 8003c4e:	bd38      	pop	{r3, r4, r5, pc}
 8003c50:	20000330 	.word	0x20000330

08003c54 <memchr>:
 8003c54:	4603      	mov	r3, r0
 8003c56:	b510      	push	{r4, lr}
 8003c58:	b2c9      	uxtb	r1, r1
 8003c5a:	4402      	add	r2, r0
 8003c5c:	4293      	cmp	r3, r2
 8003c5e:	4618      	mov	r0, r3
 8003c60:	d101      	bne.n	8003c66 <memchr+0x12>
 8003c62:	2000      	movs	r0, #0
 8003c64:	e003      	b.n	8003c6e <memchr+0x1a>
 8003c66:	7804      	ldrb	r4, [r0, #0]
 8003c68:	3301      	adds	r3, #1
 8003c6a:	428c      	cmp	r4, r1
 8003c6c:	d1f6      	bne.n	8003c5c <memchr+0x8>
 8003c6e:	bd10      	pop	{r4, pc}

08003c70 <memcpy>:
 8003c70:	440a      	add	r2, r1
 8003c72:	4291      	cmp	r1, r2
 8003c74:	f100 33ff 	add.w	r3, r0, #4294967295
 8003c78:	d100      	bne.n	8003c7c <memcpy+0xc>
 8003c7a:	4770      	bx	lr
 8003c7c:	b510      	push	{r4, lr}
 8003c7e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003c82:	4291      	cmp	r1, r2
 8003c84:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003c88:	d1f9      	bne.n	8003c7e <memcpy+0xe>
 8003c8a:	bd10      	pop	{r4, pc}

08003c8c <_realloc_r>:
 8003c8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c90:	4680      	mov	r8, r0
 8003c92:	4615      	mov	r5, r2
 8003c94:	460c      	mov	r4, r1
 8003c96:	b921      	cbnz	r1, 8003ca2 <_realloc_r+0x16>
 8003c98:	4611      	mov	r1, r2
 8003c9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003c9e:	f7ff bc39 	b.w	8003514 <_malloc_r>
 8003ca2:	b92a      	cbnz	r2, 8003cb0 <_realloc_r+0x24>
 8003ca4:	f7ff fbcc 	bl	8003440 <_free_r>
 8003ca8:	2400      	movs	r4, #0
 8003caa:	4620      	mov	r0, r4
 8003cac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003cb0:	f000 f81a 	bl	8003ce8 <_malloc_usable_size_r>
 8003cb4:	4285      	cmp	r5, r0
 8003cb6:	4606      	mov	r6, r0
 8003cb8:	d802      	bhi.n	8003cc0 <_realloc_r+0x34>
 8003cba:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8003cbe:	d8f4      	bhi.n	8003caa <_realloc_r+0x1e>
 8003cc0:	4629      	mov	r1, r5
 8003cc2:	4640      	mov	r0, r8
 8003cc4:	f7ff fc26 	bl	8003514 <_malloc_r>
 8003cc8:	4607      	mov	r7, r0
 8003cca:	2800      	cmp	r0, #0
 8003ccc:	d0ec      	beq.n	8003ca8 <_realloc_r+0x1c>
 8003cce:	42b5      	cmp	r5, r6
 8003cd0:	462a      	mov	r2, r5
 8003cd2:	4621      	mov	r1, r4
 8003cd4:	bf28      	it	cs
 8003cd6:	4632      	movcs	r2, r6
 8003cd8:	f7ff ffca 	bl	8003c70 <memcpy>
 8003cdc:	4621      	mov	r1, r4
 8003cde:	4640      	mov	r0, r8
 8003ce0:	f7ff fbae 	bl	8003440 <_free_r>
 8003ce4:	463c      	mov	r4, r7
 8003ce6:	e7e0      	b.n	8003caa <_realloc_r+0x1e>

08003ce8 <_malloc_usable_size_r>:
 8003ce8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003cec:	1f18      	subs	r0, r3, #4
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	bfbc      	itt	lt
 8003cf2:	580b      	ldrlt	r3, [r1, r0]
 8003cf4:	18c0      	addlt	r0, r0, r3
 8003cf6:	4770      	bx	lr

08003cf8 <_init>:
 8003cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cfa:	bf00      	nop
 8003cfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003cfe:	bc08      	pop	{r3}
 8003d00:	469e      	mov	lr, r3
 8003d02:	4770      	bx	lr

08003d04 <_fini>:
 8003d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d06:	bf00      	nop
 8003d08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d0a:	bc08      	pop	{r3}
 8003d0c:	469e      	mov	lr, r3
 8003d0e:	4770      	bx	lr
